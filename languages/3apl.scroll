title 3APL

import settings.scroll
htmlTitle 3APL - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/3apl.pldb

paragraph
 3APL is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=1998">1998</a>.

kpiTable
 #1781 <span title="TotalRank: 2278 Jobs: 101 Users: 1832 Facts: 1225 Links: 952">on PLDB</span>
 24 Years Old
 45 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging 3APL">Books</span>
 0 <span title="Academic publications about or leveraging 3APL">Papers</span>







paragraph
 An Abstract Agent Programming Language or Artificial Autonomous Agents Programming Language or 3APL (pronounced triple-A-P-L) is an experimental tool and programming language for the development, implementation and testing of multiple cognitive agents using the Belief-Desire-Intention (BDI) approach.. <a href="https://en.wikipedia.org/wiki/3APL">Read more on Wikipedia...</a>

list
 - the <a href="https://en.wikipedia.org/wiki/3APL">3APL Wikipedia page</a>
 - 3APL first developed in <a href="../lists/originCommunities.html#_Computer_science_Department,_Utrecht_University"> Computer science Department, Utrecht University</a>
 - 3APL is listed on <a href="https://hopl.info/showlanguage.prx?exp=7802">HOPL</a>
 - See also: (3 related languages)<a href="java.html">Java</a>, <a href="prolog.html">Prolog</a>, <a href="strips.html">Strips</a>
 - Read more about 3APL on Semantic Scholar: <a href="https://semanticscholar.org/paper/5167cbb780bac55456a0f69c16f175eb61269c8d">1</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/3apl">Improve our 3APL file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/3APL'>Wikipedia</a>:
code
 PLANBASE { SetStatus(started); }
 PR-RULES {
 	goTo(R) &lt;- location(R,X,Y) AND NOT at(X,Y) | {
 		NowAt(X,Y);
 	}
 	clean(R) &lt;- location(R,X,Y) AND at(X,Y) | {
 		Clean(R);
 	}
 }



















keyboardNav small.html ici.html
