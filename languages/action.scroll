title Action!

import settings.scroll
htmlTitle Action! - Programming language

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/action.pldb

* Action! is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 1983.
 link ../lists/languages.html?filter=1983 1983

 

kpiTable
 #488 <span title="TotalRank: 1016 Jobs: 101 Users: 1438 Facts: 429 Links: 486">on PLDB</span>
 39 Years Old
 95 <span title="Crude user estimate from a linear model.">Users</span>
 1 <span title="Books about or leveraging Action!">Books</span>
 0 <span title="Academic publications about or leveraging Action!">Papers</span>

* Action! is a procedural programming language similar to ALGOL 68 that is intended to produce high-performance programs for the Atari 8-bit family. The language was written by Clinton Parker and distributed on ROM cartridge by Optimized Systems Software starting in 1983. Action! was used to develop at least two commercial products—the Homepak productivity suite and Games Computers Play client program—and numerous programs in ANALOG Computing and Antic magazines. <a href="https://en.wikipedia.org/wiki/Action!_(programming_language)">Read more on Wikipedia...</a>

- the <a href="https://en.wikipedia.org/wiki/Action!_(programming_language)">Action! Wikipedia page</a>
- Action! first developed in <a href="../lists/originCommunities.html#Optimized_Systems_Software">Optimized Systems Software</a>
- See also: (3 related languages)<a href="optimized-systems-software.html">Optimized Systems Software</a>, <a href="algol-68.html">ALGOL 68</a>, <a href="atari-basic.html">Atari BASIC</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://build.pldb.com/edit/action">Improve our Action! file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/Action!_(programming_language)'>Wikipedia</a>:
code
 BYTE RTCLOK=20, ; addr of sys timer
      SDMCTL=559 ; DMA control
 
 BYTE ARRAY FLAGS(8190)
 
 CARD COUNT,I,K,PRIME,TIME
 
 PROC SIEVE()
 
   SDMCTL=0 ; shut off Antic
   RTCLOK=0 ; only one timer needed
 
   COUNT=0         ; init count
   FOR I=0 TO 8190 ; and flags
     DO
     FLAGS(I)=&#39;T ; &quot;&#39;T&quot; is a compiler-provided constant for True
     OD
 
   FOR I=0 TO 8190 ; and flags
     DO
     IF FLAGS(I)=&#39;T THEN
       PRIME=I+I+3
       K=I+PRIME
       WHILE K&lt;=8190
         DO
         FLAGS(K)=&#39;F ; &quot;&#39;F&quot; is a compiler-provided constant for False
         K==+PRIME
         OD
       COUNT==+1
     FI
     OD
   TIME=RTCLOK ; get timer reading
   SDMCTL=34   ; restore screen
 
   PRINTF(&quot;%E %U PRIMES IN&quot;,COUNT)
   PRINTF(&quot;%E %U JIFFIES&quot;,TIME)
 RETURN

foldBreak
## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Booleans
  FeatureLink ../languages/booleans-feature.html
  Supported ✓
  Example
  Token True False
 row
  Feature Print() Debugging
  FeatureLink ../languages/print-debugging-feature.html
  Supported ✓
  Example
  Token PRINTF
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   ; A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   ; A comment
  Token ;
 row
  Feature Constructors
  FeatureLink ../languages/constructor-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 

foldBreak
## Books about Action! on goodreads
pipeTable
 title|titleLink|author|year|reviews|ratings|rating
 Action Programming Languages|https://www.goodreads.com/search?q=Action Programming Languages Michael Thielscher|Michael Thielscher|1905|0|0|0.0

keyboardNav beta.html curry.html
