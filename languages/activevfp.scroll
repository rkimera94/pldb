title ActiveVFP

import settings.scroll
htmlTitle ActiveVFP - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/activevfp.pldb

paragraph
 ActiveVFP is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=2001">2001</a>.

kpiTable
 #805 <span title="TotalRank: 1347 Jobs: 101 Users: 1474 Facts: 294 Links: 952">on PLDB</span>
 21 Years Old
 85 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging ActiveVFP">Books</span>
 0 <span title="Academic publications about or leveraging ActiveVFP">Papers</span>







paragraph
 ActiveVFP (also known as AVFP) is a server-side scripting framework designed for Web development to produce dynamic Web pages. Similar to PHP, but using the native Visual Foxpro (VFP) language and database (or other databases like Microsoft SQL and MySQL), ActiveVFP can also be used in Model-View-Controller (MVC) web applications as well as RESTful API.  ActiveVFP is completely free and open source and does not require the purchase of Microsoft Visual FoxPro or any additional software. <a href="https://en.wikipedia.org/wiki/ActiveVFP">Read more on Wikipedia...</a>

list
 - the <a href="https://en.wikipedia.org/wiki/ActiveVFP">ActiveVFP Wikipedia page</a>
 - ActiveVFP first developed in <a href="../lists/originCommunities.html#VFP_Community">VFP Community</a>
 - See also: (5 related languages)<a href="php.html">PHP</a>, <a href="visual-foxpro.html">Visual FoxPro</a>, <a href="mysql.html">MySQL</a>, <a href="rest.html">REST</a>, <a href="html.html">HTML</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/activevfp">Improve our ActiveVFP file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/ActiveVFP'>Wikipedia</a>:
code
 * customers.prg -Customers Controller
 * * bypasses Main.prg and .AVFP script code
 * 
 DEFINE CLASS customersController AS restController
  *
  PROCEDURE openData
   SELECT 0
   USE (THIS.homeFolder + &quot;customers.dbf&quot;) ALIAS customers
  ENDPROC
  
  PROCEDURE infoAction &amp;&amp; GET www.hostname.com/app/customers/info
   RETURN &quot;homeFolder: &lt;b&gt;&quot; + THIS.homeFolder + &quot;&lt;/b&gt;&quot;
  ENDPROC
  
  PROCEDURE getAction &amp;&amp; GET www.hostname.com/app/customers/&lt;id&gt;
   LOCAL cCustId
   cCustId = THIS.Params[1]
   THIS.openData()
   SELECT CUSTOMERS
   LOCATE FOR custId = cCustId
   IF FOUND()
    LOCAL cJSON
    **USE mydbf  &amp;&amp;test error
    *quick and dirty JSON
    cJSON = [{&quot;custId&quot;:&quot;] + RTRIM(custId) + [&quot;,&quot;custName&quot;:&quot;] + RTRIM(custName) + [&quot;,] + ;
            [&quot;custStat&quot;:&quot;] + RTRIM(custStat) + [&quot;}]
    RETURN cJSON 
   ENDIF
  ENDPROC
  
  PROCEDURE listAction  &amp;&amp; GET www.hostname.com/app/customers/
   LOCAL cHTML
   cHTML = &quot;&quot;
   *oEmp=newOBJECT(&#39;schedbizobj&#39;,&#39;c:\avfp5.61Demo\prg\utiltest2.prg&#39;)
   SET PROC to substr(oProp.AppStartPath,1,AT([\],oProp.AppStartPath,2))+&#39;prg\AVFPutilities&#39; ADDITIVE   &amp;&amp; Make sure you use ADDITIVE or bad things happen!
   THIS.openData()
   SELECT CUSTOMERS
   cHTML= oHTML.mergescript(FILETOSTR(substr(oProp.AppStartPath,1,AT([\],oProp.AppStartPath,2))+&#39;viewtest.avfp&#39;))
   RETURN cHTML 
  ENDPROC
  
  PROCEDURE helloworld      &amp;&amp; custom method (&amp;&amp; GET www.hostname.com/app/customers/helloworld/)
   LOCAL cHTML
   cHTML = &quot;&quot;
   *USE mydbf
   *SET PROC to substr(oProp.AppStartPath,1,AT([\],oProp.AppStartPath,2))+&#39;prg\AVFPutilities&#39; ADDITIVE   &amp;&amp; Make sure you use ADDITIVE or bad things happen!
   cHTML= oHTML.mergescript(FILETOSTR(substr(oProp.AppStartPath,1,AT([\],oProp.AppStartPath,2))+&#39;hello.avfp&#39;))
   RETURN cHTML 
  ENDPROC
  
  PROCEDURE getemployees      &amp;&amp; custom method   (&amp;&amp; GET www.hostname.com/app/customers/getemployee/&lt;id&gt;
   
 	oJSON=NEWOBJECT(&#39;json&#39;,&#39;json.prg&#39;)
     
     SET PATH TO oProp.AppStartPath+&#39;data\AVFPdemo41\&#39;
 	
 	select e.emp_id as id, e.first_Name as firstName, e.last_Name as lastName, e.title as title, [images/Emps/]+e.picture as picture,count(r.emp_id) as reportCount ;
 	from employee e left join employee r on VAL(r.reports_to) = VAL(e.emp_id) ;
 	INTO Cursor SearchResults;
 	group by e.last_Name,e.emp_id, e.first_Name,e.title, e.picture ;
 	order by e.last_Name,e.first_Name
 
 	oJSON.keyforcursors=&quot;items&quot;
 
 	* send JSON data and properties back
 	oResponse.ContentType = &quot;application/json;charset=utf-8&quot;  
 	oResponse.Write(oJSON.stringify(&#39;SearchResults&#39;))
 	oResponse.Flush
 	lcHTMLout=[]
  ENDPROC
 
 ************************************************************************
 
 ENDDEFINE





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   * A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   * A comment
  Token *
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 













keyboardNav jupyter-notebook.html impala.html
