title Adept

import settings.scroll
htmlTitle Adept - Programming language

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/adept.pldb

* Adept is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 2018 by Isaac Shelton.
 link ../lists/languages.html?filter=2018 2018
 link ../lists/creators.html#Isaac_Shelton Isaac Shelton
 

kpiTable
 #1120 <span title="TotalRank: 1644 Jobs: 101 Users: 1480 Facts: 590 Links: 953">on PLDB</span>
 4 Years Old
 89 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging Adept">Books</span>
 0 <span title="Academic publications about or leveraging Adept">Papers</span>

* A blazing fast language for general purpose programming.

- the <a href="https://github.com/AdeptLanguage/Adept">Adept website</a>
- Adept is developed on <a href="https://github.com/AdeptLanguage/Adept">GitHub</a> and has 78 stars
- Adept first developed in <a href="../lists/originCommunities.html#https://github.com/AdeptLanguage/">https://github.com/AdeptLanguage/</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://build.pldb.com/edit/adept">Improve our Adept file</a>

html
 <br>

exampleCodeHeader Example from the web:
code
 /*
     For values that use ownership-based memory management
     (e.g. String, List, Grid)
     we must transfer ownership if we want to keep them
     alive for longer than their owner&#39;s scope
 */
 import basics
 func main {
     everyone &lt;String&gt; List = getEveryoneAttending()
     each fullname String in everyone {
         print(&quot;=&gt; &quot; + fullname)
     }
 }
 func getEveryoneAttending() &lt;String&gt; List {
     everyone &lt;String&gt; List
     person1 String = getFullnameReturnImmediately(&quot;Alice&quot;, &quot;Golden&quot;)
     person2 String = getFullnameStoreAndThenLaterReturn(&quot;Bob&quot;, &quot;Johnson&quot;)
     // Commit ownership of strings held by &#39;person1&#39; and &#39;person2&#39;
     // to be managed by the list
     everyone.add(person1.commit())
     everyone.add(person2.commit())
     // Commit ownership of the list to the caller
     return everyone.commit()
 }
 func getFullnameReturnImmediately(firstname, lastname String) String {
     // &#39;.commit()&#39; is not necessary here
     return firstname + &quot; &quot; + lastname
 }
 func getFullnameStoreAndThenLaterReturn(firstname, lastname String) String {
     fullname String = firstname + &quot; &quot; + lastname
     // Ownership of the result is held by &#39;fullname&#39;,
     // so we must transfer ownership to the caller in order
     // to keep it alive after this function returns
     // &#39;.commit()&#39; is necessary here
     return fullname.commit()
 }

keyboardNav salsa.html parser.html
