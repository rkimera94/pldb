title Algebraic Data Type

import settings.scroll
htmlTitle Algebraic Data Type - Feature

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/algebraic-types-feature.pldb

paragraph
 Algebraic Data Type is a <a href="../lists/features.html">feature</a>.









paragraph
 In computer programming, especially functional programming and type theory, an algebraic data type is a kind of composite type, i.e., a type formed by combining other types. Two common classes of algebraic types are product types (i.e., tuples and records) and sum types (i.e., tagged or disjoint unions, coproduct types or variant types).The values of a product type typically contain several values, called fields.  All values of that type have the same combination of field types. <a href="https://en.wikipedia.org/wiki/Algebraic_data_type">Read more on Wikipedia...</a>

list
 - the <a href="https://en.wikipedia.org/wiki/Algebraic_data_type">Algebraic Data Type Wikipedia page</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/algebraic-types-feature">Improve our Algebraic Data Type file</a>

html
 <br>

paragraph
 Languages <b>with</b> Algebraic Data Type include <a href="typescript.html">TypeScript</a>, <a href="coconut.html">Coconut</a>

exampleCodeHeader Example from <a href="typescript.html">TypeScript</a>:

code
 declare type numOrString = string | number

exampleCodeHeader Example from <a href="coconut.html">Coconut</a>:

code
 data Empty()
 data Leaf(n)
 data Node(l, r)
 
 def size(Empty()) = 0
 
 addpattern def size(Leaf(n)) = 1
 
 addpattern def size(Node(l, r)) = size(l) + size(r)



















keyboardNav message-passing-feature.html symbol-table-feature.html
