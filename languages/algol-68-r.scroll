title ALGOL 68-R

import settings.scroll
htmlTitle ALGOL 68-R - Programming language

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/algol-68-r.pldb

* ALGOL 68-R is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 1970.
 link ../lists/languages.html?filter=1970 1970

 

kpiTable
 #1601 <span title="TotalRank: 2093 Jobs: 102 Users: 1839 Facts: 1326 Links: 665">on PLDB</span>
 52 Years Old
 45 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging ALGOL 68-R">Books</span>
 0 <span title="Academic publications about or leveraging ALGOL 68-R">Papers</span>

* ALGOL 68-R was the first implementation of the Algorithmic language ALGOL 68. In December 1968 the report on the Algorithmic language ALGOL 68 was published.  On 20–24 July 1970 a working conference was arranged by the IFIP to discuss the problems of implementation of the language, a small team from the Royal Radar Establishment attended to present their compiler, written by I.F. <a href="https://en.wikipedia.org/wiki/ALGOL_68-R">Read more on Wikipedia...</a>

- the <a href="https://en.wikipedia.org/wiki/ALGOL_68-R">ALGOL 68-R Wikipedia page</a>
- ALGOL 68-R first developed in <a href="../lists/originCommunities.html#Royal_Radar_Establishment">Royal Radar Establishment</a>
- ALGOL 68-R is listed on <a href="https://hopl.info/showlanguage.prx?exp=489">HOPL</a>
- See also: (2 related languages)<a href="algol-68.html">ALGOL 68</a>, <a href="punched-tape.html">Punched tape</a>
- Read more about ALGOL 68-R on Semantic Scholar: <a href="https://semanticscholar.org/paper/32fd282fa40e4cbb20eca00e57805a298598bb0a">1</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://build.pldb.com/edit/algol-68-r">Improve our ALGOL 68-R file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/ALGOL_68-R'>Wikipedia</a>:
code
 [1 : 120] CHAR buff;
 INT unitnumber;
 STRUCT (BITS typemode, reply, INT count, REF CHAR address)
       control area := (8r47400014,0,120,buff[1]);
 ...;
 CODE 0,6/unitnumber; 157,6/typemode OF control area EDOC

keyboardNav sawzall.html arm-templates.html
