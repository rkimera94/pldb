title ALGOL W

import settings.scroll
htmlTitle ALGOL W - Programming language

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/algol-w.pldb

* ALGOL W is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 1966.
 link ../lists/languages.html?filter=1966 1966

 

kpiTable
 #444 <span title="TotalRank: 950 Jobs: 101 Users: 1197 Facts: 528 Links: 321">on PLDB</span>
 56 Years Old
 165 <span title="Crude user estimate from a linear model.">Users</span>
 1 <span title="Books about or leveraging ALGOL W">Books</span>
 0 <span title="Academic publications about or leveraging ALGOL W">Papers</span>

* ALGOL W is a programming language. It is based on a proposal for ALGOL X by Niklaus Wirth and Tony Hoare as a successor to ALGOL 60 in IFIP Working Group 2.1. When the committee decided that the proposal was not a sufficient advance over ALGOL 60, the proposal was published as A contribution to the development of ALGOL. <a href="https://en.wikipedia.org/wiki/ALGOL_W">Read more on Wikipedia...</a>

- the <a href="https://en.wikipedia.org/wiki/ALGOL_W">ALGOL W Wikipedia page</a>
- ALGOL W first developed in <a href="../lists/originCommunities.html#Stanford_University">Stanford University</a>
- ALGOL W is listed on <a href="https://hopl.info/showlanguage.prx?exp=243">HOPL</a>
- See also: (3 related languages)<a href="algol-60.html">ALGOL 60</a>, <a href="pascal.html">Pascal</a>, <a href="modula-2.html">Modula-2</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://build.pldb.com/edit/algol-w">Improve our ALGOL W file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/a/ALGOL W.algol'>hello-world</a>:
code
 begin
     write( &quot;Hello World&quot; )
 end.
 

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/ALGOL_W'>Wikipedia</a>:
code
 RECORD PERSON (
     STRING(20) NAME; 
     INTEGER AGE; 
     LOGICAL MALE; 
     REFERENCE(PERSON) FATHER, MOTHER, YOUNGESTOFFSPRING, ELDERSIBLING
 );
 
 REFERENCE(PERSON) PROCEDURE YOUNGESTUNCLE (REFERENCE(PERSON) R);
     BEGIN
         REFERENCE(PERSON) P, M;
         P := YOUNGESTOFFSPRING(FATHER(FATHER(R)));
         WHILE (P ¬= NULL) AND (¬ MALE(P)) OR (P = FATHER(R)) DO
             P := ELDERSIBLING(P);
         M := YOUNGESTOFFSPRING(MOTHER(MOTHER(R)));
         WHILE (M ¬= NULL) AND (¬ MALE(M)) DO
             M := ELDERSIBLING(M);
         IF P = NULL THEN 
             M 
         ELSE IF M = NULL THEN 
             P 
         ELSE 
             IF AGE(P) &lt; AGE(M) THEN P ELSE M
     END

foldBreak
## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Strings
  FeatureLink ../languages/strings-feature.html
  Supported ✓
  Example
   "Hello world"
  Token "
 row
  Feature Print() Debugging
  FeatureLink ../languages/print-debugging-feature.html
  Supported ✓
  Example
  Token write

foldBreak
## Books about ALGOL W on goodreads
pipeTable
 title|titleLink|author|year|reviews|ratings|rating
 Structured Programming And Problem Solving With Algol W|https://www.goodreads.com/search?q=Structured Programming And Problem Solving With Algol W Richard B. Kieburtz|Richard B. Kieburtz||0|0|0.0

keyboardNav pic-microcontroller.html ebnf.html
