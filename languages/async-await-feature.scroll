title Async Await

import settings.scroll
htmlTitle Async Await - Language feature

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/async-await-feature.pldb

* Async Await is a <a href="../lists/features.html">language feature</a> created in 2007.
 link ../lists/languages.html?filter=2007 2007

 

* In computer programming, the async/await pattern is a syntactic feature of many programming languages that allows an asynchronous, non-blocking function to be structured in a way similar to an ordinary synchronous function. It is semantically related to the concept of a coroutine and is often implemented using similar techniques, but is primarily intended to provide opportunities for the program to execute other code while waiting for a long-running, asynchronous task to complete, usually represented by promises or similar data structures. The feature is found in C# 5.0, Python 3.5, Hack, Dart, Kotlin 1.1, and JavaScript, with some experimental work in extensions, beta versions, and particular implementations of Scala, Rust, and C++.. <a href="https://en.wikipedia.org/wiki/Async/await">Read more on Wikipedia...</a>

- the <a href="https://en.wikipedia.org/wiki/Async/await">Async Await Wikipedia page</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://build.pldb.com/edit/async-await-feature">Improve our Async Await file</a>

html
 <br>

* Languages *without* Async Await include <a href="ruby.html">Ruby</a>, <a href="x.html">Jule</a>

* Languages *with* Async Await include <a href="javascript.html">JavaScript</a>, <a href="csharp.html">C#</a>, <a href="dart.html">Dart</a>, <a href="x10.html">X10</a>

exampleCodeHeader Example from <a href="javascript.html">JavaScript</a>:

code
 async doSomething =&gt; await somethingElse()

exampleCodeHeader Example from <a href="csharp.html">C#</a>:

code
 public async Task&lt;int&gt; FindPageSize(Uri uri) 
 {
     byte[] data = await new WebClient().DownloadDataTaskAsync(uri);
     return data.Length;
 }

keyboardNav multiple-dispatch-feature.html zipper-feature.html
