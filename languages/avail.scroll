title Avail

import settings.scroll
htmlTitle Avail - Programming language

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/avail.pldb

* Avail is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 2010 by Mark van Gulik and Todd L. Smith.
 link ../lists/languages.html?filter=2010 2010
 link ../lists/creators.html#Mark_van_Gulik Mark van Gulik
 link ../lists/creators.html#Todd_L._Smith Todd L. Smith
 

kpiTable
 #1163 <span title="TotalRank: 1686 Jobs: 101 Users: 1729 Facts: 632 Links: 953">on PLDB</span>
 12 Years Old
 59 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging Avail">Books</span>
 0 <span title="Academic publications about or leveraging Avail">Papers</span>

* Avail is a multi-paradigmatic general purpose programming language whose feature set emphasizes support for articulate programming.

- the <a href="https://www.availlang.org/">Avail website</a>
- Avail is developed on <a href="https://github.com/AvailLang/Avail">GitHub</a> and has 48 stars
- Avail first developed in <a href="../lists/originCommunities.html#The_Avail_Foundation,_LLC">The Avail Foundation, LLC</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://build.pldb.com/edit/avail">Improve our Avail file</a>

html
 <br>

exampleCodeHeader Example from the web:
code
 Public method &quot;Play Wump the Wumpus with reader_with reporter_&quot; is
 [
     reader : []→string,
     writer : [string]→⊤
 |
     /* Set up the game&#39;s I/O. */
     Wump the Wumpus reader := reader;
     Wump the Wumpus reporter := writer;
     /* Create a new game. All references to game objects within the block are
      * implicitly understood as relative to this new game.
      */
     newGame ::= a game of Wump the Wumpus;
     Use newGame as the implied game and do
     [
         Welcome;
         Look around, having just entered;
         Until the game is over, do
         [
             Give the agent a turn;
             Give the first swarm a turn;
             Give the second swarm a turn;
             Give the wumpus a turn;
         ];
         If the agent is alive then
         [
             If the wumpus is dead then [Report victory;]
             else [Report cowardice;];
         ]
         else [Report defeat;];
         Goodbye;
     ];
 ] : ⊤;

keyboardNav subleq.html mpl.html
