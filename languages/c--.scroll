title C--

import settings.scroll
htmlTitle C-- - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/c--.pldb

paragraph
 C-- is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=1997">1997</a> by <a href="../lists/creators.html#Simon_Peyton_Jones">Simon Peyton Jones</a>.

kpiTable
 #272 <span title="TotalRank: 614 Jobs: 62 Users: 282 Facts: 783 Links: 270">on PLDB</span>
 25 Years Old
 2.9k <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging C--">Books</span>
 0 <span title="Academic publications about or leveraging C--">Papers</span>







paragraph
 C-- (pronounced cee minus minus) is a C-like programming language. Its creators, functional programming researchers Simon Peyton Jones and Norman Ramsey, designed it to be generated mainly by compilers for very high-level languages rather than written by human programmers. Unlike many other intermediate languages, its representation is plain ASCII text, not bytecode or another binary format.. <a href="https://en.wikipedia.org/wiki/C--">Read more on Wikipedia...</a>

list
 - the <a href="http://www.cs.tufts.edu/~nr/c--/index.html">C-- website</a>
 - the <a href="https://en.wikipedia.org/wiki/C--">C-- Wikipedia page</a>
 - C-- first developed in <a href="../lists/originCommunities.html#Tufts_University">Tufts University</a>
 - C-- is listed on <a href="https://hopl.info/showlanguage.prx?exp=3733">HOPL</a>
 - See also: <a href="c.html">C</a>, <a href="ascii.html">ASCII</a>, <a href="assembly-language.html">Assembly language</a>, <a href="modula-3.html">Modula-3</a>, <a href="bcpl.html">BCPL</a>, <a href="llvmir.html">LLVM IR</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/c--">Improve our C-- file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/c/C--'>hello-world</a>:
code
 target byteorder little;
 import puts;
 export main;
 
 section &quot;data&quot;{
     s:bits8[] &quot;Hello World\0&quot;;
 }
 
 foreign &quot;C&quot; main(){
     foreign &quot;C&quot; puts(&quot;address&quot;s);
     foreign &quot;C&quot; return(0);
 }
 



















keyboardNav clojurescript.html pike.html
