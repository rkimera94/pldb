title c-talk

import settings.scroll
htmlTitle c-talk - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/c-talk.pldb

paragraph
 c-talk is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=1999">1999</a> by <a href="../lists/creators.html#Konstantin_Knizhnik">Konstantin Knizhnik</a>.

kpiTable
 #2153 <span title="TotalRank: 2597 Jobs: 62 Users: 2291 Facts: 1585 Links: 950">on PLDB</span>
 23 Years Old
 0 <span title="Books about or leveraging c-talk">Books</span>
 0 <span title="Academic publications about or leveraging c-talk">Papers</span>







paragraph
 C-Talk is interpreted scripting language with C-like syntax and dynamic type checking. Variables in C-Talk have no type. So there is no compile time type checking in C-Talk, all checking is performed at runtime. To preserve reference integrity, explicit memory deallocation is prohibited in C-Talk, unused objects are automatically deallocated by garbage collector.

list
 - the <a href="http://www.garret.ru/ctalk.html">c-talk website</a>
 - c-talk first developed in <a href="../lists/originCommunities.html#Moscow_State_Industrial_University">Moscow State Industrial University</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/c-talk">Improve our c-talk file</a>

html
 <br>

exampleCodeHeader Example from the web:
code
 CtkObject myPrimitive(int nArgs, CtkObject* args) {
     char*       s;
     ctk_integer i;
     ctk_real    r;
     CtkObject   o;
     ctkParseArguments(nArgs, args, &quot;siro&quot;, &amp;s, &amp;i, &amp;r, &amp;o);
     ...
 }



















keyboardNav boa.html golfscript.html
