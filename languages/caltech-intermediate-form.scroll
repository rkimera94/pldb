title Caltech Intermediate Form

import settings.scroll
htmlTitle Caltech Intermediate Form - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/caltech-intermediate-form.pldb

paragraph
 Caltech Intermediate Form is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=1980">1980</a>.

kpiTable
 #1148 <span title="TotalRank: 1633 Jobs: 69 Users: 1565 Facts: 612 Links: 952">on PLDB</span>
 42 Years Old
 70 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging Caltech Intermediate Form">Books</span>
 0 <span title="Academic publications about or leveraging Caltech Intermediate Form">Papers</span>







paragraph
 Caltech Intermediate Form (CIF) is a file format for describing integrated circuits. CIF provides a limited set of graphics primitives that are useful for describing the two-dimensional shapes on the different layers of a chip. The format allows hierarchical description, which makes the representation concise. <a href="https://en.wikipedia.org/wiki/Caltech_Intermediate_Form">Read more on Wikipedia...</a>

list
 - the <a href="https://en.wikipedia.org/wiki/Caltech_Intermediate_Form">Caltech Intermediate Form Wikipedia page</a>
 - Caltech Intermediate Form first developed in <a href="../lists/originCommunities.html#California_Institute_of_Technology">California Institute of Technology</a>
 - Caltech Intermediate Form is listed on <a href="https://hopl.info/showlanguage.prx?exp=890">HOPL</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/caltech-intermediate-form">Improve our Caltech Intermediate Form file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/Caltech_Intermediate_Form'>Wikipedia</a>:
code
 cifFile ::= (blank* command? semi)* endCommand blank*
 command ::= primCommand | defDeleteCommand | defStartCommand semi (blank* primCommand? semi)* defFinishCommand
 primCommand ::= polygonCommand | boxCommand | roundFlashCommand | wireCommand | layerCommand | callCommand | userExtensionCommand | commentCommand
 polygonCommand ::= &quot;P&quot; path
 boxCommand ::= &quot;B&quot; integer sep integer sep point (sep point)?
 roundFlashCommand ::= &quot;R&quot; integer sep point
 wireCommand ::= &quot;W&quot; integer sep path
 layerCommand ::= &quot;L&quot; blank* shortname
 defStartCommand ::= &quot;D&quot; blank* &quot;S&quot; integer (sep integer sep integer)?
 defFinishCommand ::= &quot;D&quot; blank* &quot;F&quot;
 defDeleteCommand ::= &quot;D&quot; blank* &quot;D&quot; integer
 callCommand ::= &quot;C&quot; integer transformation
 userExtensionCommand ::= digit userText
 commentCommand ::= &quot;(&quot; commentText &quot;)&quot;
 endCommand ::= &quot;E&quot;
 transformation ::= (blank* (&quot;T&quot; point |&quot;M&quot; blank* &quot;X&quot; |&quot;M&quot; blank* &quot;Y&quot; |&quot;R&quot; point)*)*
 path ::= point (sep point)*
 point ::= sInteger sep sInteger
 sInteger ::= sep* &quot;-&quot;? integerD
 integer ::= sep* integerD
 integerD ::= digit+
 shortname ::= c c? c? c?
 c ::= digit | upperChar
 userText ::= userChar*
 commentText ::= commentChar* | commentText &quot;(&quot; commentText &quot;)&quot; commentText
 semi ::= blank* &quot;;&quot; blank*
 sep ::= upperChar | blank
 digit ::= &quot;0&quot; | &quot;1&quot; | ... | &quot;9&quot;
 upperChar ::= &quot;A&quot; | &quot;B&quot; | ... | &quot;Z&quot;
 blank ::= any ASCII character except digit, upperChar, &quot;-&quot;, &quot;(&quot;, &quot;)&quot;, or &quot;;&quot;
 userChar ::= any ASCII character except &quot;;&quot;
 commentChar ::= any ASCII character except &quot;(&quot; or &quot;)&quot;



















keyboardNav tcsh.html flagship.html
