title Cayenne

import settings.scroll
htmlTitle Cayenne - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/cayenne.pldb

paragraph
 Cayenne is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=1998">1998</a>.

kpiTable
 #1140 <span title="TotalRank: 1658 Jobs: 101 Users: 1547 Facts: 892 Links: 665">on PLDB</span>
 24 Years Old
 75 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging Cayenne">Books</span>
 0 <span title="Academic publications about or leveraging Cayenne">Papers</span>







paragraph
 Cayenne is a dependently typed functional programming language created by Lennart Augustsson in 1998, making it one of the earliest dependently type programming language (as opposed to proof assistant or logical framework). A notable design decision is that the language allows unbounded recursive functions to be used on the type level, making type checking undecidable. Most dependently typed proof assistants and later dependently typed languages such as Agda included a termination checker to prevent the type checker from looping, while the contemporary Dependent ML restricted the expressivity of the type-level language to maintain decidability. <a href="https://en.wikipedia.org/wiki/Cayenne_(programming_language)">Read more on Wikipedia...</a>

list
 - the <a href="https://en.wikipedia.org/wiki/Cayenne_(programming_language)">Cayenne Wikipedia page</a>
 - Cayenne first developed in <a href="../lists/originCommunities.html#Chalmers_University_of_Technology">Chalmers University of Technology</a>
 - Cayenne is listed on <a href="https://hopl.info/showlanguage.prx?exp=5746">HOPL</a>
 - See also: (3 related languages)<a href="agda.html">Agda</a>, <a href="dependent-ml.html">DML</a>, <a href="haskell.html">Haskell</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/cayenne">Improve our Cayenne file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/Cayenne_(programming_language)'>Wikipedia</a>:
code
 PrintfType :: String -&gt; #
 PrintfType (Nil)          = String
 PrintfType (&#39;%&#39;:(&#39;d&#39;:cs)) = Int    -&gt; PrintfType cs
 PrintfType (&#39;%&#39;:(&#39;s&#39;:cs)) = String -&gt; PrintfType cs
 PrintfType (&#39;%&#39;:( _ :cs)) =           PrintfType cs
 PrintfType ( _ :cs)       =           PrintfType cs
 
 aux :: (fmt::String) -&gt; String -&gt; PrintfType fmt
 aux  (Nil)          out = out
 aux  (&#39;%&#39;:(&#39;d&#39;:cs)) out = \ (i::Int)    -&gt; aux  cs (out ++ show i)
 aux  (&#39;%&#39;:(&#39;s&#39;:cs)) out = \ (s::String) -&gt; aux  cs (out ++ s)
 aux  (&#39;%&#39;:( c :cs)) out =                  aux  cs (out ++ c : Nil)
 aux  (c:cs)         out =                  aux  cs (out ++ c : Nil)
 
 printf :: (fmt::String) -&gt; PrintfType fmt
 printf fmt = aux fmt Nil



















keyboardNav graphml.html rason.html
