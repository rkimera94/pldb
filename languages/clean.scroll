title Clean

import settings.scroll
htmlTitle Clean - Programming language

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/clean.pldb

* Clean is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 1987.
 link ../lists/languages.html?filter=1987 1987

 

kpiTable
 #227 <span title="TotalRank: 582 Jobs: 102 Users: 733 Facts: 159 Links: 321">on PLDB</span>
 35 Years Old
 481 <span title="Crude user estimate from a linear model.">Users</span>
 9 <span title="Books about or leveraging Clean">Books</span>
 5 <span title="Academic publications about or leveraging Clean">Papers</span>
 206 <span title="Clean repos on GitHub.">Repos</span>

* Try now: <a href="https://riju.codes/clean">Riju</a> · <a href="https://tio.run/#clean">TIO</a>

* Clean is a general-purpose purely functional computer programming language. For much of the language's active development history it was called Concurrent Clean, but this was dropped at some point.. <a href="https://en.wikipedia.org/wiki/Clean_(programming_language)">Read more on Wikipedia...</a>

- the <a href="http://clean.cs.ru.nl">Clean website</a>
- the <a href="https://en.wikipedia.org/wiki/Clean_(programming_language)">Clean Wikipedia page</a>
- the <a href="https://wiki.clean.cs.ru.nl/Documentation">Clean docs</a>
- There are at least 206 Clean repos on <a href="https://github.com/search?q=language:Clean">GitHub</a>
- Clean first developed in <a href="../lists/originCommunities.html#Radboud_University_Nijmegen">Radboud University Nijmegen</a>
- file extensions for Clean include icl, dcl, abc and sapl
- The  Google BigQuery Public Dataset GitHub snapshot shows 231 users using Clean in 263 repos on <a href="https://api.github.com/search/repositories?q=language:Clean">GitHub</a>
- Explore Clean snippets on <a href="http://www.rosettacode.org/wiki/Category:Clean">Rosetta Code</a>
- Clean is listed on <a href="https://hopl.info/showlanguage.prx?exp=1305">HOPL</a>
- Clean appears in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
- <a href="languages/pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/clean.py">syntax highlighting</a> for Clean
- GitHub supports <a href="https://github.com/timjs/atom-language-clean.git" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Clean
- See also: (7 related languages)<a href="miranda.html">Miranda</a>, <a href="haskell.html">Haskell</a>, <a href="c.html">C</a>, <a href="solaris.html">Solaris</a>, <a href="linux.html">Linux</a>, <a href="fibonacci.html">Fibonacci</a>, <a href="prolog.html">Prolog</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://build.pldb.com/edit/clean">Improve our Clean file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://godbolt.org/'>Compiler Explorer</a>:
code
 module example
 
 import StdInt
 
 square :: Int -&gt; Int
 square n = n * n
 
 Start :: Int
 Start = square 3
 

exampleCodeHeader Example from <a href='https://riju.codes/clean'>Riju</a>:
code
 module main
 
 import StdEnv
 
 Start world
   #(console, world) = stdio world
   #console = fwrites &quot;Hello, world!\n&quot; console
   #(ok, world) = fclose console world
   = world
 

exampleCodeHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/c/Clean.icl'>hello-world</a>:
code
 module hello
 Start :: {#Char}
 Start = &quot;Hello World&quot;
 

exampleCodeHeader Example from <a href='http://helloworldcollection.de/#Clean'>the Hello World Collection</a>:
code
 // Hello World in Clean
 
 module hello
 
 Start :: String
 Start = &quot;Hello World!\n&quot;
 

exampleCodeHeader Example from <a href='https://github.com/timjs/atom-language-clean.git'>Linguist</a>:
code
 definition module GenMap
 
 import StdGeneric
 
 generic gMap a b :: .a -&gt; .b
 derive gMap c, UNIT, PAIR, EITHER, CONS, FIELD, OBJECT, {}, {!} 
 
 derive gMap [], (,), (,,),  (,,,), (,,,,), (,,,,,), (,,,,,,), (,,,,,,,)
 
 

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/Clean_(programming_language)'>Wikipedia</a>:
code
 (^) infixr 8 :: Int Int -&gt; Int
   (^) x 0 = 1
   (^) x n = x * x ^ (n-1)

## <a href="../lists/keywords.html?filter=clean">Keywords</a> in Clean
* case ccall class code code inline derive export foreign generic if in infix infixl infixr instance let of otherwise special stdcall where with

foldBreak
## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Conditionals
  FeatureLink ../languages/conditionals-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Classes
  FeatureLink ../languages/classes-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Strings
  FeatureLink ../languages/strings-feature.html
  Supported ✓
  Example
   "Hello world"
  Token "
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   // A comment
  Token //
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 

foldBreak
## Books about Clean from ISBNdb
pipeTable
 title|titleLink|authors|year|publisher
 The Clean Coder: A Code of Conduct for Professional Programmers|https://isbndb.com/book/9780137081073|Martin, Robert|2011|Pearson
 Beyond the Basic Stuff with Python: Best Practices for Writing Clean Code|https://isbndb.com/book/9781593279677|Sweigart, Al|2020|No Starch Press
 Clean Architecture: A Craftsman's Guide to Software Structure and Design (Robert C. Martin Series)|https://isbndb.com/book/9780134494326|C., Martin Robert|2017|Pearson
 Reactive Programming with Swift 4: Build asynchronous reactive applications with easy-to-maintain and clean code using RxSwift and Xcode 9|https://isbndb.com/book/9781787120211|Singh, Navdeep|2018|Packt Publishing
 Clean Code in Python: Refactor your legacy code base|https://isbndb.com/book/9781788837064|Anaya, Mariano|2018|Packt Publishing
 Beyond the Basic Stuff with Python: Best Practices for Writing Clean Code|https://isbndb.com/book/9781593279660|Sweigart, Al|2020|No Starch Press
 Clean Agile: Back to Basics (Robert C. Martin Series)|https://isbndb.com/book/9780135781999|C., Martin Robert|2019|Pearson
 Clean Code in Python: Develop maintainable and efficient code, 2nd Edition|https://isbndb.com/book/9781800562097|Anaya, Mariano|2021|Packt Publishing
 Clean Craftsmanship: Disciplines, Standards, and Ethics (Robert C. Martin Series)|https://isbndb.com/book/9780136915836|Martin, Robert C.|2021|Addison-Wesley Professional

foldBreak
## Publications about Clean from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 The ins and outs of Clean I/O|https://www.semanticscholar.org/paper/4124fc65e84e6232b6e00ebbe5233ba421ef806f|P. Achten and M. J. Plasmeijer|1995|90|8
 Interactive Functional Objects in Clean|https://www.semanticscholar.org/paper/494110f72ac432c12d716be98b08c268f15f0cc2|P. Achten and M. J. Plasmeijer|1997|44|2
 Clean Translation of an Imperative Reversible Programming Language|https://www.semanticscholar.org/paper/6a98a6e70a1d3c21ad583ef6a83a83224d18c524|Holger Bock Axelsen|2011|31|2
 Luandri: A Clean Lua Interface to the Indri Search Engine|https://www.semanticscholar.org/paper/0af8eea643b0391fb552db4828d7706366ee546f|Bhaskar Mitra and Fernando Diaz and Nick Craswell|2017|5|0
 Exchanging sources between clean and Haskell: a double-edged front end for the clean compiler|https://www.semanticscholar.org/paper/acfddf78d7f34f83eafd13a9ee70d52c79af3ae7|John H. G. van Groningen and T. V. Noort and P. Achten and P. Koopman and M. J. Plasmeijer|2010|4|0

keyboardNav lolcode.html j.html
