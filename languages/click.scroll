title Click

import settings.scroll
htmlTitle Click - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/click.pldb

paragraph
 Click is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=1999">1999</a>.

kpiTable
 #210 <span title="TotalRank: 510 Jobs: 62 Users: 359 Facts: 89 Links: 950">on PLDB</span>
 23 Years Old
 1.8k <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging Click">Books</span>
 0 <span title="Academic publications about or leveraging Click">Papers</span>
 39 <span title="Click repos on GitHub.">Repos</span>







paragraph
 The Click modular router: fast modular packet processing and analysis

list
 - the <a href="https://github.com/kohler/click/wiki/Language">Click website</a>
 - Click is developed on <a href="https://github.com/kohler/click">GitHub</a> and has 667 stars
 - There are at least 39 Click repos on <a href="https://github.com/search?q=language:Click">GitHub</a>
 - Click first developed in <a href="../lists/originCommunities.html#Massachusetts_Institute_of_Technology">Massachusetts Institute of Technology</a>
 - file extensions for Click include click
 - The  Google BigQuery Public Dataset GitHub snapshot shows 115 users using Click in 127 repos on <a href="https://api.github.com/search/repositories?q=language:Click">GitHub</a>
 - GitHub supports <a href="https://github.com/stenverbois/language-click.git" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Click
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/click">Improve our Click file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://github.com/stenverbois/language-click.git'>Linguist</a>:
code
 rates :: AvailableRates
 elementclass sr2 {
   $sr2_ip, $sr2_nm, $wireless_mac, $gateway, $probes|
 
 
 arp :: ARPTable();
 lt :: LinkTable(IP $sr2_ip);
 
 
 gw :: SR2GatewaySelector(ETHTYPE 0x062c,
 		      IP $sr2_ip,
 		      ETH $wireless_mac,
 		      LT lt,
 		      ARP arp,
 		      PERIOD 15,
 		      GW $gateway);
 
 
 gw -&gt; SR2SetChecksum -&gt; [0] output;
 
 set_gw :: SR2SetGateway(SEL gw);
 
 
 es :: SR2ETTStat(ETHTYPE 0x0641, 
 	      ETH $wireless_mac, 
 	      IP $sr2_ip, 
 	      PERIOD 30000,
 	      TAU 300000,
 	      ARP arp,
 	      PROBES $probes,
 	      ETT metric,
 	      RT rates);
 
 
 metric :: SR2ETTMetric(LT lt);
 
 
 forwarder :: SR2Forwarder(ETHTYPE 0x0643, 
 			      IP $sr2_ip, 
 			      ETH $wireless_mac, 
 			      ARP arp, 
 			      LT lt);
 
 
 querier :: SR2Querier(ETH $wireless_mac, 
 		     SR forwarder,
 		     LT lt, 
 		     ROUTE_DAMPENING true,
 		     TIME_BEFORE_SWITCH 5,
 		     DEBUG true);
 
 
 query_forwarder :: SR2MetricFlood(ETHTYPE 0x0644,
 			       IP $sr2_ip, 
 			       ETH $wireless_mac, 
 			       LT lt, 
 			       ARP arp,
 			       DEBUG false);
 
 query_responder :: SR2QueryResponder(ETHTYPE 0x0645,
 				    IP $sr2_ip, 
 				    ETH $wireless_mac, 
 				    LT lt, 
 				    ARP arp,
 				    DEBUG true);
 
 
 query_responder -&gt; SR2SetChecksum -&gt; [0] output;
 query_forwarder -&gt; SR2SetChecksum -&gt; SR2Print(forwarding) -&gt; [0] output;
 query_forwarder [1] -&gt; query_responder;
 
 data_ck :: SR2SetChecksum() 
 
 input [1] 
 -&gt; host_cl :: IPClassifier(dst net $sr2_ip mask $sr2_nm,
 				-)
 -&gt; querier
 -&gt; data_ck;
 
 
 host_cl [1] -&gt; [0] set_gw [0] -&gt; querier;
 
 forwarder[0] 
   -&gt; dt ::DecIPTTL
   -&gt; data_ck
   -&gt; [2] output;
 
 
 dt[1] 
 -&gt; Print(ttl-error) 
 -&gt; ICMPError($sr2_ip, timeexceeded, 0) 
 -&gt; querier;
 
 
 // queries
 querier [1] -&gt; [1] query_forwarder;
 es -&gt; SetTimestamp() -&gt; [1] output;
 
 
 forwarder[1] //ip packets to me
   -&gt; SR2StripHeader()
   -&gt; CheckIPHeader()
   -&gt; from_gw_cl :: IPClassifier(src net $sr2_ip mask $sr2_nm,
 				-)
   -&gt; [3] output;
 
 from_gw_cl [1] -&gt; [1] set_gw [1] -&gt; [3] output;
 
  input [0]
    -&gt; ncl :: Classifier(
 			12/0643 , //sr2_forwarder
 			12/0644 , //sr2
 			12/0645 , //replies
 			12/0641 , //sr2_es
 			12/062c , //sr2_gw
 			);
  
  
  ncl[0] -&gt; SR2CheckHeader() -&gt; [0] forwarder;
  ncl[1] -&gt; SR2CheckHeader() -&gt; PrintSR(query) -&gt; query_forwarder
  ncl[2] -&gt; SR2CheckHeader() -&gt; query_responder;
  ncl[3] -&gt; es;
  ncl[4] -&gt; SR2CheckHeader() -&gt; gw;
  
 }
 
 
 
 Idle -&gt; s :: sr2(2.0.0.1, 255.0.0.0, 00:00:00:00:00:01, false, &quot;12 60 12 1500&quot;) -&gt; Discard;
 Idle -&gt; [1] s;
 s[1] -&gt; Discard;
 s[2] -&gt; Discard;
 s[3] -&gt; Discard;
 





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Booleans
  FeatureLink ../languages/booleans-feature.html
  Supported ✓
  Example
  Token true false
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   // A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   // A comment
  Token //
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 













keyboardNav ibm-rpg.html xbase.html
