title CLOS

import settings.scroll
htmlTitle CLOS - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/clos.pldb

paragraph
 CLOS is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=1988">1988</a>.

kpiTable
 #587 <span title="TotalRank: 1111 Jobs: 69 Users: 1565 Facts: 772 Links: 270">on PLDB</span>
 34 Years Old
 70 <span title="Crude user estimate from a linear model.">Users</span>
 3 <span title="Books about or leveraging CLOS">Books</span>
 0 <span title="Academic publications about or leveraging CLOS">Papers</span>







paragraph
 The Common Lisp Object System (CLOS) is the facility for object-oriented programming which is part of ANSI Common Lisp. CLOS is a powerful dynamic object system which differs radically from the OOP facilities found in more static languages such as C++ or Java. CLOS was inspired by earlier Lisp object systems such as MIT Flavors and CommonLoops, although it is more general than either. <a href="https://en.wikipedia.org/wiki/CLOS">Read more on Wikipedia...</a>

list
 - the <a href="https://en.wikipedia.org/wiki/CLOS">CLOS Wikipedia page</a>
 - CLOS is listed on <a href="https://hopl.info/showlanguage.prx?exp=1389">HOPL</a>
 - See also: (11 related languages)<a href="common-lisp.html">Common Lisp</a>, <a href="java.html">Java</a>, <a href="commonloops.html">CommonLoops</a>, <a href="eulisp.html">EuLisp</a>, <a href="emacs-lisp.html">Emacs Lisp</a>, <a href="flavors.html">Flavors</a>, <a href="interlisp.html">Interlisp</a>, <a href="dylan.html">Dylan</a>, <a href="guile.html">Guile</a>, <a href="islisp.html">ISLISP</a>, <a href="cadence-skill.html">Cadence SKILL</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/clos">Improve our CLOS file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/CLOS'>Wikipedia</a>:
code
 ; declare the common argument structure prototype
 (defgeneric f (x y))
 
 ; define an implementation for (f integer t), where t matches all types
 (defmethod f ((x integer) y) 1)
 
 (f 1 2.0) =&gt; 1
 
 ; define an implementation for (f integer real)
 (defmethod f ((x integer) (y real)) 2)
 
 (f 1 2.0) =&gt; 2 ; dispatch changed at runtime





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   ; A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   ; A comment
  Token ;
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 





foldBreak
subsection Books about CLOS from ISBNdb
pipeTable
 title|titleLink|authors|year|publisher
 Object-Oriented Programming: The CLOS Perspective|https://isbndb.com/book/9780262161367||1993|The MIT Press
 Object-Oriented Programming in COMMON LISP: A Programmer's Guide to CLOS|https://isbndb.com/book/9780201175899|Keene, Sonya E.|1988-08-01T00:00:01Z|Addison-Wesley Professional
 Object-Oriented Programming: The CLOS Perspective (The MIT Press)|https://isbndb.com/book/9780262661751||1993|The MIT Press








keyboardNav arexx.html lotusscript.html
