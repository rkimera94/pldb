title Classroom Object Oriented Language

import settings.scroll
htmlTitle Classroom Object Oriented Language - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/cool.pldb

paragraph
 Classroom Object Oriented Language, aka Classroom Object Oriented Language, is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=1996">1996</a> by <a href="../lists/creators.html#Alexander_Aiken">Alexander Aiken</a>.

kpiTable
 #365 <span title="TotalRank: 780 Jobs: 65 Users: 850 Facts: 229 Links: 486">on PLDB</span>
 26 Years Old
 345 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging Classroom Object Oriented Language">Books</span>
 0 <span title="Academic publications about or leveraging Classroom Object Oriented Language">Papers</span>
 102 <span title="Classroom Object Oriented Language repos on GitHub.">Repos</span>







paragraph
 Cool, an acronym for Classroom Object Oriented Language, is a computer programming language designed by Alexander Aiken for use in an undergraduate compiler course project. While small enough for a one term project, Cool still has many of the features of modern programming languages, including objects, automatic memory management, strong static typing and simple reflection. The reference Cool compiler is written in C++, built fully on the public domain tools. <a href="https://en.wikipedia.org/wiki/Cool_(programming_language)">Read more on Wikipedia...</a>

list
 - the <a href="https://en.wikipedia.org/wiki/Cool_(programming_language)">Classroom Object Oriented Language Wikipedia page</a>
 - There are at least 102 Classroom Object Oriented Language repos on <a href="https://github.com/search?q=language:Cool">GitHub</a>
 - Classroom Object Oriented Language first developed in <a href="../lists/originCommunities.html#Stanford_University">Stanford University</a>
 - file extensions for Classroom Object Oriented Language include cl
 - The  Google BigQuery Public Dataset GitHub snapshot shows 56 users using Classroom Object Oriented Language in 57 repos on <a href="https://api.github.com/search/repositories?q=language:Cool">GitHub</a>
 - GitHub supports <a href="https://github.com/anunayk/cool-tmbundle" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Classroom Object Oriented Language
 - See also: (7 related languages)<a href="clips.html">CLIPS</a>, <a href="sather.html">Sather</a>, <a href="java.html">Java</a>, <a href="ml.html">ML</a>, <a href="pascal.html">Pascal</a>, <a href="ocaml.html">OCaml</a>, <a href="mips.html">MIPS architecture</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/cool">Improve our Classroom Object Oriented Language file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/c/Cool.cl'>hello-world</a>:
code
 class Main inherits IO {
    main(): Object {
 	out_string(&quot;Hello World.\n&quot;)
    };
 };
 

exampleCodeHeader Example from <a href='https://github.com/anunayk/cool-tmbundle'>Linguist</a>:
code
 (* This simple example of a list class is adapted from an example in the
    Cool distribution. *)
 
 class List {
    isNil() : Bool { true };
    head()  : Int { { abort(); 0; } };
    tail()  : List { { abort(); self; } };
    cons(i : Int) : List {
       (new Cons).init(i, self)
    };
 };
 
 class Cons inherits List {
    car : Int;	-- The element in this list cell
    cdr : List;	-- The rest of the list
    isNil() : Bool { false };
    head()  : Int { car };
    tail()  : List { cdr };
    init(i : Int, rest : List) : List {
       {
 	 car &lt;- i;
 	 cdr &lt;- rest;
 	 self;
       }
    };
 };
 

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/Cool_(programming_language)'>Wikipedia</a>:
code
 class Main inherits IO {
   main(): Object {{
     out_string(&quot;Enter an integer greater-than or equal-to 0: &quot;);
 
     let input: Int &lt;- in_int() in
       if input &lt; 0 then
         out_string(&quot;ERROR: Number must be greater-than or equal-to 0\n&quot;)
       else {
         out_string(&quot;The factorial of &quot;).out_int(input);
         out_string(&quot; is &quot;).out_int(factorial(input));
         out_string(&quot;\n&quot;);
       }
       fi;
   }};
 
   factorial(num: Int): Int {
     if num = 0 then 1 else num * factorial(num - 1) fi
   };
 };





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Booleans
  FeatureLink ../languages/booleans-feature.html
  Supported ✓
  Example
  Token true false
 row
  Feature MultiLine Comments
  FeatureLink ../languages/multiline-comments-feature.html
  Supported ✓
  Example
   (* A comment
   *)
  Token (* *)
 row
  Feature Print() Debugging
  FeatureLink ../languages/print-debugging-feature.html
  Supported ✓
  Example
  Token out_string
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   -- A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   -- A comment
  Token --
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 













keyboardNav max.html thrift.html
