title COWSEL

import settings.scroll
htmlTitle COWSEL - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/cowsel.pldb

paragraph
 COWSEL is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=1964">1964</a>.

kpiTable
 #1202 <span title="TotalRank: 1714 Jobs: 101 Users: 1687 Facts: 1226 Links: 387">on PLDB</span>
 58 Years Old
 60 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging COWSEL">Books</span>
 0 <span title="Academic publications about or leveraging COWSEL">Papers</span>







paragraph
 COWSEL (COntrolled Working SpacE Language) is a programming language designed between 1964 and 1966 by Robin Popplestone. It was based on an RPN form of Lisp combined with some ideas from CPL. COWSEL was initially implemented on a Ferranti Pegasus computer at the University of Leeds and on a Stantec Zebra at the Bradford Institute of Technology; later, Rod Burstall implemented it on an Elliot 4120 at the University of Edinburgh. <a href="https://en.wikipedia.org/wiki/COWSEL">Read more on Wikipedia...</a>

list
 - the <a href="https://en.wikipedia.org/wiki/COWSEL">COWSEL Wikipedia page</a>
 - COWSEL first developed in <a href="../lists/originCommunities.html#University_of_Edinburgh">University of Edinburgh</a>
 - COWSEL is listed on <a href="https://hopl.info/showlanguage.prx?exp=196">HOPL</a>
 - See also: (6 related languages)<a href="cpl.html">CPL</a>, <a href="lisp.html">Lisp</a>, <a href="pop-2.html">POP-2</a>, <a href="reverse-polish-notation.html">Reverse Polish notation</a>, <a href="pop-11.html">Pop-11</a>, <a href="poplog.html">POPLOG</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/cowsel">Improve our COWSEL file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/COWSEL'>Wikipedia</a>:
code
 function member
 lambda x y
 comment Is x a member of list y;
 define      y atom then *0 end
             y hd x equal then *1 end
             y tl -&gt; y repeat up



















keyboardNav minizinc.html hocon.html
