title Crema

import settings.scroll
htmlTitle Crema - Programming language

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/crema.pldb

* Crema is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 2014 by Jacob Torrey and Jared Wright.
 link ../lists/languages.html?filter=2014 2014
 link ../lists/creators.html#Jacob_Torrey Jacob Torrey
 link ../lists/creators.html#Jared_Wright Jared Wright
 

kpiTable
 #1229 <span title="TotalRank: 1742 Jobs: 101 Users: 1431 Facts: 688 Links: 953">on PLDB</span>
 8 Years Old
 99 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging Crema">Books</span>
 0 <span title="Academic publications about or leveraging Crema">Papers</span>

* Crema is a LLVM front-end that aims to specifically execute in sub-Turing Complete space. Designed to be simple to learn, and practical for the majority of programming tasks needed, Crema can restrict the computational complexity of the program to the minimum needed to improve security.

- the <a href="https://github.com/ainfosec/crema/wiki">Crema website</a>
- Crema is developed on <a href="https://github.com/ainfosec/crema">GitHub</a> and has 64 stars
- Crema first developed in <a href="../lists/originCommunities.html#Assured_Information_Security,_Inc.">Assured Information Security, Inc.</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://build.pldb.com/edit/crema">Improve our Crema file</a>

html
 <br>

exampleCodeHeader Example from the web:
code
 def int binarySearch(int values[], int searchTarget){
     int upperBound = list_length(values) - 1    # Upper index of seach region
     int lowerBound = 0                       # Lower index of seach region
     int delta = list_length(values)     # Distance between upperBound and lowerBound
     int middleValueIndex = 0    # Mid-point index between upper and lower bounds
     int middleValue = 0         # Value at the mid-point index
     int foundIndex = -1         # The index of the target number after finding
 
     foreach(values as value){
         # Check middle value to see if it matches target number
         middleValueIndex = ((upperBound + lowerBound) / 2)
         middleValue = values[middleValueIndex]
         if(middleValue == searchTarget){
             foundIndex = middleValueIndex
             break
         }
 
         #Re-adjust the lower and upper bounds for next itteration
         if(middleValue &gt;= searchTarget){
             upperBound = middleValueIndex - 1
         }else{
             lowerBound = middleValueIndex + 1
         }
         delta = upperBound - lowerBound
     }
     return foundIndex
 }

## <a href="../lists/keywords.html?filter=crema">Keywords</a> in Crema
* as bool break char def double else eq extern false foreach ge gt if int le lt neq return sdef string struct true uint void

keyboardNav multiaddr.html nwscript.html
