title CUDA

import settings.scroll
htmlTitle CUDA - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/cuda.pldb

paragraph
 CUDA, aka Compute Unified Device Architecture, is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=2007">2007</a>.

kpiTable
 #45 <span title="TotalRank: 143 Jobs: 39 Users: 47 Facts: 57 Links: 175">on PLDB</span>
 15 Years Old
 38.6k <span title="Crude user estimate from a linear model.">Users</span>
 35 <span title="Books about or leveraging CUDA">Books</span>
 29 <span title="Academic publications about or leveraging CUDA">Papers</span>
 18k <span title="CUDA repos on GitHub.">Repos</span>







paragraph
 CUDA is a parallel computing platform and application programming interface (API) model created by Nvidia. It allows software developers and software engineers to use a CUDA-enabled graphics processing unit (GPU) for general purpose processing – an approach termed GPGPU (General-Purpose computing on Graphics Processing Units). The CUDA platform is a software layer that gives direct access to the GPU's virtual instruction set and parallel computational elements, for the execution of compute kernels. <a href="https://en.wikipedia.org/wiki/CUDA">Read more on Wikipedia...</a>

list
 - the <a href="https://developer.nvidia.com/cuda-zone">CUDA website</a>
 - the <a href="https://en.wikipedia.org/wiki/CUDA">CUDA Wikipedia page</a>
 - There are at least 18,135 CUDA repos on <a href="https://github.com/search?q=language:Cuda">GitHub</a>
 - CUDA first developed in <a href="../lists/originCommunities.html#Nvidia">Nvidia</a>
 - PLDB estimates there are currently 769 job openings for CUDA programmers.
 - file extensions for CUDA include cu and cuh
 - The  Google BigQuery Public Dataset GitHub snapshot shows 4k users using CUDA in 4k repos on <a href="https://api.github.com/search/repositories?q=language:Cuda">GitHub</a>
 - Check out the 32 <a href="https://www.meetup.com/topics/cuda/">CUDA meetup groups</a> on Meetup.com.
 - <a href="languages/pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/c_like.py">syntax highlighting</a> for CUDA
 - GitHub supports <a href="https://github.com/harrism/sublimetext-cuda-cpp" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for CUDA
 - Indeed.com has 483 matches for <a href="https://www.indeed.com/jobs?q=cuda engineer">"cuda engineer"</a>.
 - See also: (18 related languages)<a href="linux.html">Linux</a>, <a href="c.html">C</a>, <a href="fortran.html">Fortran</a>, <a href="opengl.html">OpenGL</a>, <a href="opencl.html">OpenCL</a>, <a href="llvmir.html">LLVM IR</a>, <a href="python.html">Python</a>, <a href="perl.html">Perl</a>, <a href="java.html">Java</a>, <a href="ruby.html">Ruby</a>, <a href="lua.html">Lua</a>, <a href="haskell.html">Haskell</a>, <a href="r.html">R</a>, <a href="matlab.html">MATLAB</a>, <a href="idl.html">IDL</a>, <a href="mathematica.html">Mathematica</a>, <a href="common-lisp.html">Common Lisp</a>, <a href="f-sharp.html">F#</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/cuda">Improve our CUDA file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/c/Cuda.cu'>hello-world</a>:
code
 #include &lt;stdio.h&gt;
 
 __global__ void hello_world(){
     printf(&quot;Hello World\n&quot;);
 }
 
 int main() {
     hello_world&lt;&lt;&lt;1,1&gt;&gt;&gt;();
     return 0;
 }
 

exampleCodeHeader Example from <a href='http://helloworldcollection.de/#Compute'>the Hello World Collection</a>:
code
 // Hello world in CUDA
 
 #include &lt;stdio.h&gt;
  
 const int N = 16; 
 const int blocksize = 16; 
  
 __global__ 
 void hello(char *a, int *b) 
 {
 	a[threadIdx.x] += b[threadIdx.x];
 }
  
 int main()
 {
 	char a[N] = &quot;Hello \0\0\0\0\0\0&quot;;
 	int b[N] = {15, 10, 6, 0, -11, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
  
 	char *ad;
 	int *bd;
 	const int csize = N*sizeof(char);
 	const int isize = N*sizeof(int);
  
 	printf(&quot;%s&quot;, a);
  
 	cudaMalloc( (void**)&amp;ad, csize ); 
 	cudaMalloc( (void**)&amp;bd, isize ); 
 	cudaMemcpy( ad, a, csize, cudaMemcpyHostToDevice ); 
 	cudaMemcpy( bd, b, isize, cudaMemcpyHostToDevice ); 
 	
 	dim3 dimBlock( blocksize, 1 );
 	dim3 dimGrid( 1, 1 );
 	hello&lt;&lt;&lt;dimGrid, dimBlock&gt;&gt;&gt;(ad, bd);
 	cudaMemcpy( a, ad, csize, cudaMemcpyDeviceToHost ); 
 	cudaFree( ad );
 	cudaFree( bd );
 	
 	printf(&quot;%s\n&quot;, a);
 	return EXIT_SUCCESS;
 }

exampleCodeHeader Example from <a href='https://github.com/harrism/sublimetext-cuda-cpp'>Linguist</a>:
code
 #include &lt;stdio.h&gt;
 #include &lt;cuda_runtime.h&gt;
 
 /**
  * CUDA Kernel Device code
  *
  * Computes the vector addition of A and B into C. The 3 vectors have the same
  * number of elements numElements.
  */
 __global__ void
 vectorAdd(const float *A, const float *B, float *C, int numElements)
 {
     int i = blockDim.x * blockIdx.x + threadIdx.x;
 
     if (i &lt; numElements)
     {
         C[i] = A[i] + B[i];
     }
 }
 
 /**
  * Host main routine
  */
 int
 main(void)
 {
     // Error code to check return values for CUDA calls
     cudaError_t err = cudaSuccess;
 
     // Launch the Vector Add CUDA Kernel
     int threadsPerBlock = 256;
     int blocksPerGrid =(numElements + threadsPerBlock - 1) / threadsPerBlock;
     vectorAdd&lt;&lt;&lt;blocksPerGrid, threadsPerBlock&gt;&gt;&gt;(d_A, d_B, d_C, numElements);
     err = cudaGetLastError();
 
     if (err != cudaSuccess)
     {
         fprintf(stderr, &quot;Failed to launch vectorAdd kernel (error code %s)!\n&quot;, cudaGetErrorString(err));
         exit(EXIT_FAILURE);
     }
 
     // Reset the device and exit
     err = cudaDeviceReset();
 
     return 0;
 }

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/CUDA'>Wikipedia</a>:
code
 import numpy
 from pycublas import CUBLASMatrix
 A = CUBLASMatrix( numpy.mat([[1,2,3]],[[4,5,6]],numpy.float32) )
 B = CUBLASMatrix( numpy.mat([[2,3]],[4,5],[[6,7]],numpy.float32) )
 C = A*B
 print C.np_mat()





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   /* A comment
   */
  Token 
 row
  Feature MultiLine Comments
  FeatureLink ../languages/multiline-comments-feature.html
  Supported ✓
  Example
   /* A comment
   */
  Token /* */
 row
  Feature Print() Debugging
  FeatureLink ../languages/print-debugging-feature.html
  Supported ✓
  Example
  Token printf
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 



foldBreak
subsection Books about CUDA on goodreads
pipeTable
 title|titleLink|author|year|reviews|ratings|rating
 Cuda by Example: An Introduction to General-Purpose Gpu Programming|https://www.goodreads.com/search?q=Cuda by Example: An Introduction to General-Purpose Gpu Programming Jason Sanders|Jason Sanders|2010|13|131|4.03
 Professional Cuda C Programming|https://www.goodreads.com/search?q=Professional Cuda C Programming John Cheng|John Cheng|2014|0|7|4.14


foldBreak
subsection Books about CUDA from ISBNdb
pipeTable
 title|titleLink|authors|year|publisher
 CUDA by Example: An Introduction to General-Purpose GPU Programming|https://isbndb.com/book/9780131387683|Sanders / Kandrot, Jason|2010|Addison-Wesley Professional
 Cuda Handbook|https://isbndb.com/book/9780133261493|Nicholas Wilt|2013|Pearson
 CUDA Programming: A Developers Guide to Parallel Computing with GPUs(Chinese Edition)|https://isbndb.com/book/9787111448617|[ MEI ] KU KE ( Shane Cook )|2014|Machinery Industry Press
 CUDA by Example: An Introduction to General-Purpose GPU Programming|https://isbndb.com/book/9780132180139|Sanders, Jason and Kandrot, Edward|2010|Addison-Wesley Professional
 Learn CUDA Programming: A beginner's guide to GPU programming and parallel computing with CUDA 10.x and C/C++|https://isbndb.com/book/9781788996242|Han, Jaegeun and Sharma, Bharatkumar|2019-09-27T00:00:01Z|Packt Publishing
 Hands-On GPU Programming with Python and CUDA: Explore high-performance parallel computing with CUDA|https://isbndb.com/book/9781788993913|Tuomanen, Dr. Brian|2018|Packt Publishing
 Professional CUDA C Programming|https://isbndb.com/book/9781118739327|Cheng, John and Grossman, Max and McKercher, Ty|2014|Wrox
 Professional CUDA C Programming|https://isbndb.com/book/9781118739310|Cheng, John and Grossman, Max and McKercher, Ty|2014|Wrox
 The CUDA Handbook: A Comprehensive Guide to GPU Programming|https://isbndb.com/book/9780321809469|Wilt, Nicholas Wilt|2013|Addison-Wesley Professional
 CUDA Fortran for Scientists and Engineers: Best Practices for Efficient CUDA Fortran Programming|https://isbndb.com/book/9780124169708|Ruetsch, Gregory and Fatica, Massimiliano|2013|Morgan Kaufmann
 CUDA Programming: A Developer's Guide to Parallel Computing with GPUs (Applications of Gpu Computing)|https://isbndb.com/book/9780124159884|Cook, Shane|2012|Morgan Kaufmann
 CUDA Application Design and Development|https://isbndb.com/book/9780123884329|Farber, Rob|2011|Morgan Kaufmann
 CUDA Handbook, The: A Comprehensive Guide to GPU Programming|https://isbndb.com/book/9780133261509|Wilt, Nicholas|2013|Addison-Wesley Professional
 CUDA Programming: A Developer's Guide to Parallel Computing with GPUs (Applications of Gpu Computing)|https://isbndb.com/book/9780124159334|Cook, Shane|2012|Morgan Kaufmann
 CUDA Application Design and Development|https://isbndb.com/book/9780123884268|Farber, Rob|2011|Morgan Kaufmann
 Deep Belief Nets in C++ and CUDA C: Volume 2: Autoencoding in the Complex Domain|https://isbndb.com/book/9781484236468|Masters, Timothy|2018|Apress
 Image Processing Using CUDA: Designing an object oriented framework for CUDA based image processing|https://isbndb.com/book/9783659135569|Shete, Pritam and Bose, Surojit Kumar|2012|LAP LAMBERT Academic Publishing
 Cuda Winner|https://isbndb.com/book/9781540660251|Charles Brown|2016|Createspace Independent Publishing Platform
 Cuda For Newbies|https://isbndb.com/book/9781540604323|Dylan Skinner|2016|Createspace Independent Publishing Platform
 Cuda For Engineers|https://isbndb.com/book/9780134177519|Duane Storti|2015|Addison-Wesley Longman, Incorporated
 CUDA by Example|https://isbndb.com/book/9780132180146|Jason Sanders and Edward Kandrot|2010|Pearson
 Learn CUDA Programming|https://isbndb.com/book/9781788991292|Jaegeun Han and Bharatkumar Sharma|2019-09-27|Packt Publishing
 CUDA for Engineers|https://isbndb.com/book/9780134177557|Duane Storti; Mete Yurtoglu|20151102|Pearson Technology Group
 Professional CUDA C Programming|https://isbndb.com/book/9781118739273|John Cheng, Max Grossman, Ty McKercher|2014-09-02|Wiley Professional Development (P&T)
 Programming in Parallel with CUDA Programming in Parallel with CUDA|https://isbndb.com/book/9781108858885|Richard Ansorge|20220602|Cambridge University Press
 CUDA Fortran for Scientists and Engineers: Best Practices for Efficient CUDA Fortran Programming|https://isbndb.com/book/9780124169722|Ruetsch, Gregory; Fatica, Massimiliano|09/2013|Elsevier S & T
 GPU Parallel Program Development Using CUDA|https://isbndb.com/book/9781498750806|Tolga Soyata|20180119|Taylor & Francis
 Hands-On GPU Programming with Python and CUDA|https://isbndb.com/book/9781788995221|Dr. Brian Tuomanen|27-11-2018|Packt Publishing
 Nvidia Gpu Programming: Massively Parallel Programming With Cuda|https://isbndb.com/book/9780470939055|Cook and Shane||Wrox
 The Cuda Handbook: A Comprehensive Guide To Gpu Programming|https://isbndb.com/book/9780133261516|Wilt, Nicholas , 1970-|2013|Addison-wesley
 Deep Belief Nets in C   and CUDA C: Volume 3|https://isbndb.com/book/9781484237212|Timothy Masters|20180704|Springer Nature
 Deep Belief Nets in C   and CUDA C: Volume 1|https://isbndb.com/book/9781484235911|Timothy Masters|20180423|Springer Nature
 Novel Open Source Morphology Using GPU Processing With LTU- CUDA|https://isbndb.com/book/9786139444151|Jagannathan Gnanasekaran|2019-01-23|LAP LAMBERT Academic Publishing


foldBreak
subsection Publications about CUDA from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 CUDA by Example: An Introduction to General-Purpose GPU Programming|https://www.semanticscholar.org/paper/64ce52ec9f550ddd980e209ca68ff38947cf9061|Jie Cheng|2010|1084|118
 accULL: An OpenACC Implementation with CUDA and OpenCL Support|https://www.semanticscholar.org/paper/871d9641582562f9a83ed785ce3051f3e9e95483|Ruymán Reyes and I. López-Rodríguez and J. Fumero and F. Sande|2012|84|2
 GPU programming in a high level language: compiling X10 to CUDA|https://www.semanticscholar.org/paper/c0f1c45ef7c9fb9751fdcc268daac62b70a7bd78|D. Cunningham and R. Bordawekar and V. Saraswat|2011|59|8
 GPU-accelerated SART reconstruction using the CUDA programming environment|https://www.semanticscholar.org/paper/e7b73201f2763e2e7b6d828b6dfa95fdbe31ba17|B. Keck and H. Hofmann and H. Scherl and M. Kowarschik and J. Hornegger|2009|49|5
 CAMPARY: Cuda Multiple Precision Arithmetic Library and Applications|https://www.semanticscholar.org/paper/1f324e5b66a3710250b44db80506fd8fde4c712f|M. Joldes and J. Muller and V. Popescu and W. Tucker|2016|37|4
 Overview and comparison of OpenCL and CUDA technology for GPGPU|https://www.semanticscholar.org/paper/f88d8ee763f8fc5e80a59be045926f6df13ac9fc|Ching-Lung Su and Po-Yu Chen and Chun-Chieh Lan and Lung-Sheng Huang and Kuo-Hsuan Wu|2012|34|1
 BARRACUDA: binary-level analysis of runtime RAces in CUDA programs|https://www.semanticscholar.org/paper/069794b44b81c8b0651c8ea39594a91cd6081142|Ariel Eizenberg and Yuanfeng Peng and Toma Pigli and William Mansky and Joseph Devietti|2017|25|7
 Efficient compilation of CUDA kernels for high-performance computing on FPGAs|https://www.semanticscholar.org/paper/f24f326226d8143a1ff0afed7042edcd85534a3b|Alexandros Papakonstantinou and Karthik Gururaj and J. Stratton and Deming Chen and J. Cong and W. Hwu|2013|22|0
 Evolving CUDA PTX programs by quantum inspired linear genetic programming|https://www.semanticscholar.org/paper/78c1cb63859f9ea84c772c8ec4fc72c7791a2a7c|L. F. Cupertino and C. D. Silva and D. M. Dias and M. Pacheco and C. Bentes|2011|14|0
 CUDA Expression Templates for Electromagnetic Applications on GPUs [EM Programmer's Notebook]|https://www.semanticscholar.org/paper/becd4d7bad6d6b316e755b4038fa3cccd00662f0|A. Breglia and A. Capozzoli and C. Curcio and A. Liseno|2013|12|0
 C2CU : A CUDA C Program Generator for Bulk Execution of a Sequential Algorithm|https://www.semanticscholar.org/paper/827cf47256651fc955ce880efc65e8292d445401|Daisuke Takafuji and K. Nakano and Yasuaki Ito|2014|11|0
 Parallelized Seeded Region Growing Using CUDA|https://www.semanticscholar.org/paper/9c2bc31d176bbea810a7c1b654054271efd75135|Seongjin Park and Jeongjin Lee and Hyunna Lee and Juneseuk Shin and Jinwook Seo and K. Lee and Y. Shin and B. H. Kim|2014|9|1
 Porting a Legacy CUDA Stencil Code to oneAPI|https://www.semanticscholar.org/paper/8a91d5e27422f66ecbf4d24965484a7a778e74f9|Steffen Christgau and T. Steinke|2020|9|0
 Computer vision algorithms acceleration using graphic processors NVIDIA CUDA|https://www.semanticscholar.org/paper/e3adb20131eedbbdb31befa59e40a1d32a3c4847|Mouna Afif and Yahia Said and M. Atri|2020|9|0
 SciPAL: Expression Templates and Composition Closure Objects for High Performance Computational Physics with CUDA and OpenMP|https://www.semanticscholar.org/paper/ad752065baa739eac4144fc98ce595cd6a68dfa2|S. Kramer and J. Hagemann|2015|8|0
 Real-time moving human detection using HOG and Fourier descriptor based on CUDA implementation|https://www.semanticscholar.org/paper/5eea36b60acc51b215442d4e04875d97066b59b6|Haythem Bahri and Marwa Chouchene and F. Sayadi and Mohamed Atri|2019|7|0
 Using a commercial graphical processing unit and the CUDA programming language to accelerate scientific image processing applications|https://www.semanticscholar.org/paper/af5e6a48632822ddff4d961f97a79bfedb58d4aa|R. Broussard and R. Ives|2011|7|0
 Efficient 2D Convolution Filters Implementations on Graphics Processing Unit Using NVIDIA CUDA|https://www.semanticscholar.org/paper/29958dcd1f577c4961d495c203871028c8b23538|Mouna Afif and Yahia Said and Mohamed Atri|2018|6|0
 Breast Cancer Prediction by Logistic Regression with CUDA Parallel Programming Support|https://www.semanticscholar.org/paper/d28520dd4a74a1768a205fc0cedaae33a2a81758|Aless and R. Peretti and F. Amenta|2016|5|0
 Efficient implementation of integrall image algorithm on NVIDIA CUDA|https://www.semanticscholar.org/paper/92787e77b59c0a25b8b39d18f33981a12cd50748|Mouna Afif and Yahia Said and Mohamed Atri|2018|3|0
 Document clustering using Multi-Objective Genetic Algorithms with parallel programming based on CUDA|https://www.semanticscholar.org/paper/4d06b455d105dd62d35197dc7b5df463f7a25ca4|Jung Song Lee and Soon-cheol Park and Jong-Joo Lee and Han-hee Ham|2014|3|0
 Programming in CUDA for Kepler and Maxwell Architecture|https://www.semanticscholar.org/paper/a3f9bb343703d6cb8a5f772bc99fa0c9013b1ecd|E. Clua and M. Zamith|2015|3|1
 Research on Matrix Multiplication Based on the Combination of OpenACC and CUDA|https://www.semanticscholar.org/paper/ad94df1c7457f50fde21feda7b646a3d681c10b0|Yuexing Wang|2018|2|0
 A Performance Study of Random Neural Network as Supervised Learning Tool Using CUDA|https://www.semanticscholar.org/paper/c175a68fbf783a77d34357ae0977ecf1824aaf5c|S. Basterrech and J. Janousek and V. Snášel|2016|2|0
 GPU accelerated foreground segmentation using CodeBook model and shadow removal using CUDA|https://www.semanticscholar.org/paper/088708e87e9e34445bcccd414ab4b729acd9219c|Praveen Gudivaka and N. Mishra and A. Agrawal|2017|2|0
 Impact of CUDA and OpenCL on Parallel and Distributed Computing|https://www.semanticscholar.org/paper/b8dd58407502f25fdc07b2ae83659e247c4b1f9b|A. Asaduzzaman and Alec Trent and S. Osborne and C. Aldershof and F. Sibai|2021|2|0
 Cuda Parallelization of Commit Framework for Efficient Microstructure-Informed Tractography|https://www.semanticscholar.org/paper/65c7d25ad189d1d58232eb304035f22f0ee3c59e|Erick Hernandez-Gutierrez and Alonso Ramirez-Manzanares and J. Marroquín and Mario Ocampo-Pineda and Alessandro Daducci|2019|1|0
 Detecting Undefined Behaviors in CUDA C|https://www.semanticscholar.org/paper/00add03c6fa715baf0ad2798848ffc1817bf6a7e|Wentao Li and Jianhua Sun and Hao Chen|2019|1|0
 A Compiler Translate Directive-Based Language to Optimized CUDA|https://www.semanticscholar.org/paper/2b948c35fdb64183cc0a88fc9a84960187a15d6d|Feng Li and Hong An and Weihao Liang and Xiaoqiang Li and Yichao Cheng and Xia Jiang|2014|1|0






keyboardNav julia.html nodejs.html
