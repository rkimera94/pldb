title D3.js

import settings.scroll
htmlTitle D3.js - Library

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/d3.pldb

paragraph
 D3.js is a <a href="../lists/languages.html?filter=library">library</a> created in <a href="../lists/languages.html?filter=2011">2011</a> by <a href="../lists/creators.html#Mike_Bostock">Mike Bostock</a>.

kpiTable
 #299 on PLDB
 11 Years Old
 172.5k <span title="Crude user estimate from a linear model.">Users</span>







paragraph
 D3.js (or just D3 for Data-Driven Documents) is a JavaScript library for producing dynamic, interactive data visualizations in web browsers. It makes use of the widely implemented SVG, HTML5, and CSS standards. It is the successor to the earlier Protovis framework. <a href="https://en.wikipedia.org/wiki/D3.js">Read more on Wikipedia...</a>

list
 - the <a href="https://d3js.org/">D3.js website</a>
 - the <a href="https://en.wikipedia.org/wiki/D3.js">D3.js Wikipedia page</a>
 - D3.js is developed on <a href="https://github.com/d3/d3">GitHub</a> and has 101,774 stars
 - the D3.js team is on <a href="https://twitter.com/d3js_org">Twitter</a>
 - <a href="https://d3js.org/">d3js.org</a> was registered in 2011
 - See also: <a href="javascript.html">JavaScript</a>, <a href="svg.html">SVG</a>, <a href="css.html">CSS</a>, <a href="actionscript.html">ActionScript</a>, <a href="html.html">HTML</a>, <a href="json.html">JSON</a>, <a href="csv.html">CSV</a>, <a href="geojson.html">GeoJSON</a>, <a href="jquery.html">JQuery</a>, <a href="observable-lang.html">Observable</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/d3">Improve our D3.js file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/D3.js'>Wikipedia</a>:
code
 // Data
   var countriesData = [
      { name:&quot;Ireland&quot;,  income:53000, life: 78, pop:6378, color: &quot;black&quot;},
      { name:&quot;Norway&quot;,   income:73000, life: 87, pop:5084, color: &quot;blue&quot; },
      { name:&quot;Tanzania&quot;, income:27000, life: 50, pop:3407, color: &quot;grey&quot; }
   ];
 // Create SVG container
   var svg = d3.select(&quot;#hook&quot;).append(&quot;svg&quot;)
         .attr(&quot;width&quot;, 120)
         .attr(&quot;height&quot;, 120)
         .style(&quot;background-color&quot;, &quot;#D0D0D0&quot;);
 // Create SVG elements from data 
     svg.selectAll(&quot;circle&quot;)                  // create virtual circle template
       .data(countriesData)                   // bind data
     .enter()                                 // for each row in data...
       .append(&quot;circle&quot;)                      // bind circle &amp; data row such that... 
         .attr(&quot;id&quot;, function(d) { return d.name })            // set the circle&#39;s id according to the country name
         .attr(&quot;cx&quot;, function(d) { return d.income / 1000  })  // set the circle&#39;s horizontal position according to income 
         .attr(&quot;cy&quot;, function(d) { return d.life })            // set the circle&#39;s vertical position according to life expectancy 
         .attr(&quot;r&quot;,  function(d) { return d.pop / 1000 *2 })   // set the circle&#39;s radius according to country&#39;s population 
         .attr(&quot;fill&quot;, function(d) { return d.color });        // set the circle&#39;s color according to country&#39;s color



















keyboardNav ntfs.html raml.html
