title Dart

import settings.scroll
htmlTitle Dart - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/dart.pldb

paragraph
 Dart is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=2011">2011</a> by <a href="../lists/creators.html#Lars_Bak">Lars Bak</a>.

kpiTable
 #49 <span title="TotalRank: 159 Jobs: 65 Users: 48 Facts: 46 Links: 97">on PLDB</span>
 11 Years Old
 38.3k <span title="Crude user estimate from a linear model.">Users</span>
 30 <span title="Books about or leveraging Dart">Books</span>
 6 <span title="Academic publications about or leveraging Dart">Papers</span>
 738k <span title="Dart repos on GitHub.">Repos</span>

paragraph
 Try now: <a href="https://riju.codes/dart">Riju</a> · <a href="https://tio.run/#dart">TIO</a>

monacoEditor dart
 // Type your code here, or load an example.
 int square(int num) {
   return num * num;
 }
 
 int main(List<String> args) {
     return square(int.fromEnvironment("input"));
 }
 



paragraph
 Dart is a general-purpose programming language originally developed by Google and later approved as a standard by Ecma (ECMA-408). It is used to build web, server and mobile applications, and for Internet of Things (IoT) devices. It is open-source software under a permissive free software license (modified BSD license). <a href="https://en.wikipedia.org/wiki/Dart_(programming_language)">Read more on Wikipedia...</a>

list
 - the <a href="http://www.dartlang.org">Dart website</a>
 - the <a href="https://en.wikipedia.org/wiki/Dart_(programming_language)">Dart Wikipedia page</a>
 - There are at least 737,948 Dart repos on <a href="https://github.com/search?q=language:Dart">GitHub</a>
 - Dart first developed in <a href="../lists/originCommunities.html#Google">Google</a>
 - file extensions for Dart include dart
 - the Dart team is on <a href="https://twitter.com/dart_lang">Twitter</a>
 - The  Google BigQuery Public Dataset GitHub snapshot shows 3k users using Dart in 6k repos on <a href="https://api.github.com/search/repositories?q=language:Dart">GitHub</a>
 - There are 35,109 members in the <a href="https://reddit.com/r/dartlang">Dart subreddit</a>
 - There are 54 <a href="https://projecteuler.net/language=Dart">Project Euler</a> users using Dart
 - In the 2021 StackOverflow <a href="https://insights.stackoverflow.com/survey">developer survey</a> Dart programmers reported a median salary of $32,986. 6% of respondents reported using Dart. 4,965 programmers reported using Dart, and 7,018 said they wanted to use it
 - Explore Dart snippets on <a href="http://www.rosettacode.org/wiki/Category:Dart">Rosetta Code</a>
 - Dart ranks #22 in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
 - Here is a Dart <a href="language-server-protocol.html">LSP</a> <a href="https://github.com/natebosch/dart_language_server">implementation</a>
 - There is a <a href="codemirror.html">CodeMirror</a> <a href="https://github.com/codemirror/codemirror5/tree/master/mode/dart">package</a> for syntax highlighting Dart
 - There is a <a href="monaco.html">Monaco</a> <a href="https://github.com/microsoft/monaco-editor/tree/main/src/basic-languages/dart">package</a> for syntax highlighting Dart
 - <a href="languages/pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/javascript.py">syntax highlighting</a> for Dart
 - GitHub supports <a href="https://github.com/dart-atom/dartlang" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Dart
 - There is a <a href="https://pub.dartlang.org/">central package repository</a> for Dart
 - <a href="http://www.dartlang.org">dartlang.org</a> was registered in 2011
 - See also: (24 related languages)<a href="csharp.html">C#</a>, <a href="erlang.html">Erlang</a>, <a href="javascript.html">JavaScript</a>, <a href="smalltalk.html">Smalltalk</a>, <a href="strongtalk.html">Strongtalk</a>, <a href="c.html">C</a>, <a href="android.html">Android</a>, <a href="ios.html">iOS</a>, <a href="eclipse-editor.html">Eclipse</a>, <a href="linux.html">Linux</a>, <a href="sublime-editor.html">Sublime Text</a>, <a href="emacs-editor.html">Emacs</a>, <a href="vim-editor.html">Vim</a>, <a href="visual-studio-code-editor.html">Visual Studio Code</a>, <a href="algol.html">Algol</a>, <a href="ruby.html">Ruby</a>, <a href="self.html">Self</a>, <a href="coffeescript.html">CoffeeScript</a>, <a href="elm.html">Elm</a>, <a href="fantom.html">Fantom</a>, <a href="go.html">Go</a>, <a href="haxe.html">Haxe</a>, <a href="opa.html">Opa</a>, <a href="typescript.html">TypeScript</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/dart">Improve our Dart file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://godbolt.org/'>Compiler Explorer</a>:
code
 // Type your code here, or load an example.
 int square(int num) {
   return num * num;
 }
 
 int main(List&lt;String&gt; args) {
     return square(int.fromEnvironment(&quot;input&quot;));
 }
 

exampleCodeHeader Example from <a href='https://riju.codes/dart'>Riju</a>:
code
 void main() {
   print(&#39;Hello, world!&#39;);
 }
 

exampleCodeHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/d/Dart.dart'>hello-world</a>:
code
 main() {
   print(&#39;Hello World&#39;);
 }
 

exampleCodeHeader Example from <a href='http://helloworldcollection.de/#Dart'>the Hello World Collection</a>:
code
 // Hello world in Dart
 
 main() {
    print(&#39;Hello world!&#39;);
 }

exampleCodeHeader Example from <a href='https://github.com/dart-atom/dartlang'>Linguist</a>:
code
 import &#39;dart:math&#39; as math;
 
 class Point {
   num x, y;
 
   Point(this.x, this.y);
 
   num distanceTo(Point other) {
     var dx = x - other.x;
     var dy = y - other.y;
     return math.sqrt(dx * dx + dy * dy);
   }
 }
 
 void main() {
   var p = new Point(2, 3);
   var q = new Point(3, 4);
   print(&#39;distance from p to q = ${p.distanceTo(q)}&#39;);
 }
 

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/Dart_(programming_language)'>Wikipedia</a>:
code
 // Import the math library to get access to the sqrt function.
 import &#39;dart:math&#39; as math;
 
 // Create a class for Point.
 class Point {
 
   // Final variables cannot be changed once they are assigned.
   // Create two instance variables.
   final num x, y;
 
   // A constructor, with syntactic sugar for setting instance variables.
   Point(this.x, this.y);
 
   // A named constructor with an initializer list.
   Point.origin()
       : x = 0,
         y = 0;
 
   // A method.
   num distanceTo(Point other) {
     var dx = x - other.x;
     var dy = y - other.y;
     return math.sqrt(dx * dx + dy * dy);
   }
 
   // Example of Operator Overloading
   Point operator +(Point other) =&gt; new Point(x + other.x, y + other.y);
 }
 
 // All Dart programs start with main().
 void main() {
   // Instantiate point objects.
   var p1 = new Point(10, 10);
   var p2 = new Point.origin();
   var distance = p1.distanceTo(p2);
   print(distance);
 }



subsection <a href="../lists/keywords.html?filter=dart">Keywords</a> in Dart
paragraph
 abstract as assert async await break case catch class const continue covariant default deferred do dynamic else enum export extends external factory false final finally for get if implements import in is library new null operator part rethrow return set static super switch sync this throw true try typedef var void while with yield

foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Hexadecimals
  FeatureLink ../languages/hexadecimals-feature.html
  Supported ✓
  Example
   // 0[xX][0-9a-fA-F]+
  Token 
 row
  Feature Conditionals
  FeatureLink ../languages/conditionals-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Async Await
  FeatureLink ../languages/async-await-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Inheritance
  FeatureLink ../languages/inheritance-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Switch Statements
  FeatureLink ../languages/switch-statements-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Exceptions
  FeatureLink ../languages/exceptions-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Constants
  FeatureLink ../languages/constants-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Classes
  FeatureLink ../languages/classes-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature While Loops
  FeatureLink ../languages/while-loops-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Booleans
  FeatureLink ../languages/booleans-feature.html
  Supported ✓
  Example
  Token true false
 row
  Feature Strings
  FeatureLink ../languages/strings-feature.html
  Supported ✓
  Example
   'Hello world'
  Token '
 row
  Feature Regular Expression Syntax Sugar
  FeatureLink ../languages/regular-expressions-syntax-sugar-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Print() Debugging
  FeatureLink ../languages/print-debugging-feature.html
  Supported ✓
  Example
  Token print
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   // A comment
  Token //
 row
  Feature Operator Overloading
  FeatureLink ../languages/operator-overloading-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature File Imports
  FeatureLink ../languages/file-imports-feature.html
  Supported ✓
  Example
   import 'file-system.dart';
   import 'dart:math' as math;
  Token 
 row
  Feature MultiLine Comments
  FeatureLink ../languages/multiline-comments-feature.html
  Supported ✓
  Example
   /* A comment
   */
  Token /* */
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   // Hi
   /* Assume address is not null. */
  Token 
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 





foldBreak
subsection Books about Dart from ISBNdb
pipeTable
 title|titleLink|authors|year|publisher
 Dart for Absolute Beginners|https://isbndb.com/book/9781430264811|Kopec, David|2014|Apress
 Web Programming with Dart|https://isbndb.com/book/9781484205570|Belchin, Moises and Juberias, Patricia|2014|Apress
 Learning Dart|https://isbndb.com/book/9781849697422|Balbaert, Ivo and Ridjanovic, Dzenan|2014|Packt Publishing
 Dart for Absolute Beginners|https://isbndb.com/book/9781430264828|Kopec, David|2014|Apress
 Web Programming with Dart|https://isbndb.com/book/9781484205563|Belchin, Moises and Juberias, Patricia|2015|Apress
 Flutter Cookbook: Over 100 proven techniques and solutions for app development with Flutter 2.2 and Dart|https://isbndb.com/book/9781838827373|Alessandria, Simone and Kayfitz, Brian|2021|Packt Publishing
 Dart Apprentice (First Edition): Beginning Programming with Dart|https://isbndb.com/book/9781950325320|Tutorial Team, raywenderlich and Sande, Jonathan and Galloway, Matt|2021|Bowker
 Dart Programming Language, The|https://isbndb.com/book/9780133429954|Bracha, Gilad|2015|Addison-Wesley Professional
 Flutter for Beginners: An introductory guide to building cross-platform mobile applications with Flutter and Dart 2|https://isbndb.com/book/9781788990523|Biessek, Alessandro|2019|Packt Publishing
 Mastering Dart|https://isbndb.com/book/9781783989577|Akopkokhyants,  Sergey|2014|Packt Publishing
 Learning Dart|https://isbndb.com/book/9781849697439|Balbaert,  Ivo and Ridjanovic, Dzenan|2014|Packt Publishing
 Quick Start Guide to Dart Programming: Create High-Performance Applications for the Web and Mobile|https://isbndb.com/book/9781484255629|Sinha, Sanjib|2019|Apress
 Dart Cookbook|https://isbndb.com/book/9781783989638|Balbaert, Ivo|2014|Packt Publishing
 The Dart Programming Language|https://isbndb.com/book/9780321927705|Bracha, Gilad|2015|Addison-Wesley Professional
 Introducing Dart Sass: A Practical Introduction to the Replacement for Sass, Built on Dart|https://isbndb.com/book/9781484243725|Libby, Alex|2019|Apress
 Dart By Example|https://isbndb.com/book/9781785289798|Mitchell, Davy|2015|Packt Publishing
 Quick Start Guide to Dart Programming: Create High-Performance Applications for the Web and Mobile|https://isbndb.com/book/9781484255612|Sinha, Sanjib|2019|Apress
 Dart Cookbook|https://isbndb.com/book/9781783989621|Balbaert, Ivo|2014|Packt Publishing
 Dart By Example|https://isbndb.com/book/9781785282478|Mitchell, Davy|2015|Packt Publishing
 Dart 1 for Everyone: Fast, Flexible, Structured Code for the Modern Web|https://isbndb.com/book/9781941222256|Strom, Chris|2014|Pragmatic Bookshelf
 Modern App Development with Dart and Flutter 2: A Comprehensive Introduction to Flutter (de Gruyter Stem)|https://isbndb.com/book/9783110721270|Meiller, Dieter|2021|De Gruyter Oldenbourg
 Dart Essentials|https://isbndb.com/book/9781783989614|Martin Sikora|20150525|Packt Publishing
 Beginning Dart|https://isbndb.com/book/9781430257974|Dylan McClung|2013|Apress
 Dart in Action|https://isbndb.com/book/9781638352846|Chris Buckett|20130115|Simon & Schuster
 Learning Dart - Second Edition|https://isbndb.com/book/9781785288531|Ivo Balbaert; Dzenan Ridjanovic|20150925|Packt Publishing
 Learn Dart The Hard Way|https://isbndb.com/book/9781074723538|Sanjib Sinha|2019|
 App-Entwicklung mit Dart und Flutter 2|https://isbndb.com/book/9783110753172|Dieter Meiller|20210920|De Gruyter
 Moderne App-Entwicklung mit Dart und Flutter|https://isbndb.com/book/9783110690705|Dieter Meiller|20200505|De Gruyter
 Modern App Development With Dart And Flutter 2|https://isbndb.com/book/9783110721331|Dieter Meiller|2021|Walter De Gruyter Gmbh & Co Kg
 Modern App Development with Dart and Flutter 2|https://isbndb.com/book/9783110721607|Dieter Meiller|20210621|De Gruyter


foldBreak
subsection Publications about Dart from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 Spicing Up Dart with Side Effects|https://www.semanticscholar.org/paper/a3cd2932e0511bc9603395791a8f14e1fb78ecda|E. Meijer and K. Millikin and Gilad Bracha|2015|8|2
 Type unsoundness in practice: an empirical study of Dart|https://www.semanticscholar.org/paper/0675029b48e3d49abde25b71de11681d952c4c65|Gianluca Mezzetti and Anders Møller and Fabio Strocco|2016|6|0
 Message safety in Dart|https://www.semanticscholar.org/paper/1220a095ecabbd68b84112990be1f7363adda3f0|Erik Ernst and Anders Møller and Mathias Schwarz and Fabio Strocco|2015|5|0
 A Freights Status Management System Based on Dart and Flutter Programming Language|https://www.semanticscholar.org/paper/6a772efe74fee9b0c1f8194e3337666a80b11e8f|Ghusoon Idan Arb and K. Al-Majdi|2020|3|0
 JAVA and DART programming languages: conceptual comparison|https://www.semanticscholar.org/paper/4aa90271fcb9625127f1aa3c280ecee1d40a35ea|A. M. Hassan|2020|2|0
 Ensuring that your dart will hit the mark: An introduction to dart contracts|https://www.semanticscholar.org/paper/e42a5d2cb0beb083db8236809b3105f98ad274eb|Patrice Chalin|2014|1|0






keyboardNav tcl.html scheme.html
