title Elixir

import settings.scroll
htmlTitle Elixir - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/elixir.pldb

paragraph
 Elixir is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=2011">2011</a> by <a href="../lists/creators.html#José_Valim">José Valim</a>.

kpiTable
 #45 <span title="TotalRank: 151 Jobs: 64 Users: 41 Facts: 46 Links: 145">on PLDB</span>
 11 Years Old
 55.9k <span title="Crude user estimate from a linear model.">Users</span>
 31 <span title="Books about or leveraging Elixir">Books</span>
 3 <span title="Academic publications about or leveraging Elixir">Papers</span>
 89k <span title="Elixir repos on GitHub.">Repos</span>

paragraph
 Try now: <a href="https://riju.codes/elixir">Riju</a> · <a href="https://tio.run/#elixir">TIO</a>

monacoEditor elixir
 IO.puts("Hello, world!")
 



paragraph
 Elixir is a functional, concurrent, general-purpose programming language that runs on the Erlang virtual machine (BEAM). Elixir builds on top of Erlang and shares the same abstractions for building distributed, fault-tolerant applications. Elixir also provides a productive tooling and an extensible design. <a href="https://en.wikipedia.org/wiki/Elixir_(programming_language)">Read more on Wikipedia...</a>

list
 - the <a href="https://elixir-lang.org">Elixir website</a>
 - the <a href="https://en.wikipedia.org/wiki/Elixir_(programming_language)">Elixir Wikipedia page</a>
 - Elixir is developed on <a href="https://github.com/elixir-lang/elixir">GitHub</a> and has 20,394 stars
 - There are at least 89,242 Elixir repos on <a href="https://github.com/search?q=language:Elixir">GitHub</a>
 - PLDB estimates there are currently 214 job openings for Elixir programmers.
 - file extensions for Elixir include ex, exs and eex
 - Elixir is written in <a href="elixir.html">Elixir</a>
 - the Elixir team is on <a href="https://twitter.com/elixirlang">Twitter</a>
 - The  Google BigQuery Public Dataset GitHub snapshot shows 5k users using Elixir in 7k repos on <a href="https://api.github.com/search/repositories?q=language:Elixir">GitHub</a>
 - Check out the 211 <a href="https://www.meetup.com/topics/elixir/">Elixir meetup groups</a> on Meetup.com.
 - There are 23,468 members in the <a href="https://reddit.com/r/elixir">Elixir subreddit</a>
 - There are 173 <a href="https://projecteuler.net/language=Elixir">Project Euler</a> users using Elixir
 - In the 2021 StackOverflow <a href="https://insights.stackoverflow.com/survey">developer survey</a> Elixir programmers reported a median salary of $80,077. 2% of respondents reported using Elixir. 1,438 programmers reported using Elixir, and 3,374 said they wanted to use it
 - Explore Elixir snippets on <a href="http://www.rosettacode.org/wiki/Category:Elixir">Rosetta Code</a>
 - Elixir appears in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
 - There is an <a href="https://packages.ubuntu.com/jammy/elixir">Ubuntu package</a> for Elixir
 - Here is a Elixir <a href="language-server-protocol.html">LSP</a> <a href="https://github.com/elixir-lsp/elixir-ls">implementation</a>
 - There is a <a href="monaco.html">Monaco</a> <a href="https://github.com/microsoft/monaco-editor/tree/main/src/basic-languages/elixir">package</a> for syntax highlighting Elixir
 - <a href="languages/pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/erlang.py">syntax highlighting</a> for Elixir
 - GitHub supports <a href="https://github.com/elixir-editors/elixir-tmbundle" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Elixir
 - Elixir appears in the <a href="https://github.com/mame/quine-relay">Quine Relay</a> project
 - There is 1 <a href="jupyter-notebook.html">Jupyter</a> <a href="https://github.com/pprzetacznik/IElixir">Kernel</a> for Elixir
 - There is a <a href="https://hex.pm/">central package repository</a> for Elixir
 - Indeed.com has 214 matches for <a href="https://www.indeed.com/jobs?q=elixir developer">"elixir developer"</a>.
 - See also: (6 related languages)<a href="erlang.html">Erlang</a>, <a href="ruby.html">Ruby</a>, <a href="clojure.html">Clojure</a>, <a href="lfe.html">LFE</a>, <a href="unicode.html">Unicode</a>, <a href="utf-8.html">UTF-8</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/elixir">Improve our Elixir file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://riju.codes/elixir'>Riju</a>:
code
 IO.puts(&quot;Hello, world!&quot;)
 

exampleCodeHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/e/Elixir.exs'>hello-world</a>:
code
 #!/usr/bin/env elixir
 IO.puts &quot;Hello World&quot;
 

exampleCodeHeader Example from <a href='http://helloworldcollection.de/#Elixir'>the Hello World Collection</a>:
code
 # Hello world in Elixir
 
 defmodule HelloWorld do
   IO.puts &quot;Hello, World!&quot;
 end

exampleCodeHeader Example from <a href='https://github.com/elixir-editors/elixir-tmbundle'>Linguist</a>:
code
 %{&quot;cowboy&quot;: {:hex, :cowboy, &quot;1.0.0&quot;},
   &quot;cowlib&quot;: {:hex, :cowlib, &quot;1.0.1&quot;},
   &quot;hackney&quot;: {:hex, :hackney, &quot;0.14.3&quot;},
   &quot;hound&quot;: {:hex, :hound, &quot;0.6.0&quot;},
   &quot;httpoison&quot;: {:hex, :httpoison, &quot;0.5.0&quot;},
   &quot;idna&quot;: {:hex, :idna, &quot;1.0.1&quot;},
   &quot;phoenix&quot;: {:hex, :phoenix, &quot;0.10.0&quot;},
   &quot;plug&quot;: {:hex, :plug, &quot;0.11.1&quot;},
   &quot;poison&quot;: {:hex, :poison, &quot;1.3.1&quot;},
   &quot;ranch&quot;: {:hex, :ranch, &quot;1.0.0&quot;}}
 

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/Elixir_(programming_language)'>Wikipedia</a>:
code
 task = Task.async fn -&gt; perform_complex_action() end
 other_time_consuming_action()
 Task.await task



subsection <a href="../lists/keywords.html?filter=elixir">Keywords</a> in Elixir
paragraph
 after and catch do else end false fn in nil not or rescue true when

foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Unicode Identifers
  FeatureLink ../languages/unicode-identifiers-feature.html
  Supported ✓
  Example
   δ = 0.00001
  Token 
 row
  Feature Case Sensitivity
  FeatureLink ../languages/case-sensitivity-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Exceptions
  FeatureLink ../languages/exceptions-feature.html
  Supported ✓
  Example
   raise "oops, something went wrong"
  Token 
 row
  Feature Pattern Matching
  FeatureLink ../languages/pattern-matching-feature.html
  Supported ✓
  Example
   def fib(0), do: 1
   def fib(1), do: 1
   def fib(n) when n >= 2, do: fib(n-1) + fib(n-2)
  Token 
 row
  Feature Runtime Guards
  FeatureLink ../languages/runtime-guards-feature.html
  Supported ✓
  Example
   def abs(number) when number > 0, do: number
   def abs(number), do: -number
  Token 
 row
  Feature Garbage Collection
  FeatureLink ../languages/garbage-collection-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Multiline Strings
  FeatureLink ../languages/multiline-strings-feature.html
  Supported ✓
  Example
   template = """
   This is the first line.
   This is the second line.
   This is the third line.
   """
  Token 
 row
  Feature Infix Notation
  FeatureLink ../languages/infix-notation-feature.html
  Supported ✓
  Example
   seven = 3 + 4
  Token 
 row
  Feature Scientific Notation
  FeatureLink ../languages/scientific-notation-feature.html
  Supported ✓
  Example
   1.23e45
  Token 
 row
  Feature Anonymous Functions
  FeatureLink ../languages/anonymous-functions-feature.html
  Supported ✓
  Example
   fn -> IO.puts("hello world") end
  Token 
 row
  Feature Pipes
  FeatureLink ../languages/pipes-feature.html
  Supported ✓
  Example
   "Elixir" |> String.graphemes() |> Enum.frequencies()
  Token 
 row
  Feature Streams
  FeatureLink ../languages/streams-feature.html
  Supported ✓
  Example
   https://hexdocs.pm/elixir/Stream.html
  Token 
 row
  Feature Macros
  FeatureLink ../languages/macros-feature.html
  Supported ✓
  Example
   https://hexdocs.pm/elixir/Macro.html
  Token 
 row
  Feature Polymorphism
  FeatureLink ../languages/polymorphism-feature.html
  Supported ✓
  Example
   https://hexdocs.pm/elixir/Protocol.html
  Token 
 row
  Feature Range Operator
  FeatureLink ../languages/range-operator-feature.html
  Supported ✓
  Example
   1..3
  Token 
 row
  Feature Single Dispatch
  FeatureLink ../languages/single-dispatch-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Maps
  FeatureLink ../languages/maps-feature.html
  Supported ✓
  Example
   %{key: "value"}
  Token 
 row
  Feature Booleans
  FeatureLink ../languages/booleans-feature.html
  Supported ✓
  Example
  Token true false
 row
  Feature Binary Literals
  FeatureLink ../languages/binary-numbers-feature.html
  Supported ✓
  Example
   # 0b[01]+
  Token 
 row
  Feature Integers
  FeatureLink ../languages/integers-feature.html
  Supported ✓
  Example
   # \d(_?\d)*
  Token 
 row
  Feature Floats
  FeatureLink ../languages/floats-feature.html
  Supported ✓
  Example
   # \d(_?\d)*\.\d(_?\d)*([eE][-+]?\d(_?\d)*)?
  Token 
 row
  Feature Hexadecimals
  FeatureLink ../languages/hexadecimals-feature.html
  Supported ✓
  Example
   # 0x[\da-fA-F]+
  Token 
 row
  Feature Octals
  FeatureLink ../languages/octals-feature.html
  Supported ✓
  Example
   # 0o[0-7]+
  Token 
 row
  Feature Strings
  FeatureLink ../languages/strings-feature.html
  Supported ✓
  Example
   "Hello world"
  Token "
 row
  Feature Lists
  FeatureLink ../languages/lists-feature.html
  Supported ✓
  Example
   my_list = [1, 2, 3, 4, 5]
  Token 
 row
  Feature Regular Expression Syntax Sugar
  FeatureLink ../languages/regular-expressions-syntax-sugar-feature.html
  Supported ✓
  Example
   ~r/integer: \d+/
  Token 
 row
  Feature Print() Debugging
  FeatureLink ../languages/print-debugging-feature.html
  Supported ✓
  Example
  Token IO.puts
 row
  Feature Message Passing
  FeatureLink ../languages/message-passing-feature.html
  Supported ✓
  Example
   send(pid, :ping)
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   # A comment
  Token #
 row
  Feature Default Parameters Pattern
  FeatureLink ../languages/default-parameters-feature.html
  Supported ✓
  Example
   def multiply(a, b \\ 1) do
     a * b
   end
  Token 
 row
  Feature Conditionals
  FeatureLink ../languages/conditionals-feature.html
  Supported ✓
  Example
   if true do
     IO.puts("Hello world")
   end
  Token 
 row
  Feature Assignment
  FeatureLink ../languages/assignment-feature.html
  Supported ✓
  Example
   name = "John"
  Token 
 row
  Feature File Imports
  FeatureLink ../languages/file-imports-feature.html
  Supported ✓
  Example
   # Alias the module so it can be called as Bar instead of Foo.Bar
   alias Foo.Bar, as: Bar
   
   # Require the module in order to use its macros
   require Foo
   
   # Import functions from Foo so they can be called without the `Foo.` prefix
   import Foo
   
   # Invokes the custom code defined in Foo as an extension point
   use Foo
  Token 
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   # this is a comment
  Token 
 row
  Feature Disk Output
  FeatureLink ../languages/disk-output-feature.html
  Supported ✓
  Example
   File.write!("helloworld.txt", "Hello, world!\n")
  Token 
 row
  Feature Shebang
  FeatureLink ../languages/shebang-feature.html
  Supported ✓
  Example
   #!/usr/bin/env elixir
  Token 
 row
  Feature Case Insensitive Identifiers
  FeatureLink ../languages/case-insensitive-identifiers-feature.html
  Supported ϴ
  Example
  Token 
 row
  Feature Multiple Dispatch
  FeatureLink ../languages/multiple-dispatch-feature.html
  Supported ϴ
  Example
  Token 
 row
  Feature Units of Measure
  FeatureLink ../languages/units-of-measure-feature.html
  Supported ϴ
  Example
  Token 
 row
  Feature Pointers
  FeatureLink ../languages/pointers-feature.html
  Supported ϴ
  Example
  Token 
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 
 row
  Feature MultiLine Comments
  FeatureLink ../languages/multiline-comments-feature.html
  Supported ϴ
  Example
  Token 





foldBreak
subsection Books about Elixir from ISBNdb
pipeTable
 title|titleLink|authors|year|publisher
 Learning Elixir|https://isbndb.com/book/9781785881749|Ballou, Kenny|2016|Packt Publishing
 "Programming Elixir 1.2: Functional |> Concurrent |> Pragmatic |> Fun"|https://isbndb.com/book/9781680501667|Thomas, Dave|2016|Pragmatic Bookshelf
 "Programming Elixir 1.3: Functional |> Concurrent |> Pragmatic |> Fun"|https://isbndb.com/book/9781680502008|Thomas, Dave|2016|Pragmatic Bookshelf
 "Programming Elixir ≥ 1.6: Functional |> Concurrent |> Pragmatic |> Fun"|https://isbndb.com/book/9781680502992|Thomas, Dave|2018|Pragmatic Bookshelf
 The Little Elixir & OTP Guidebook|https://isbndb.com/book/9781633430112|Tan Wei Hao, Benjamin|2016|Manning Publications
 Elixir Cookbook|https://isbndb.com/book/9781784397517|Pereira, Paulo A|2015|Packt Publishing
 Elixir in Action|https://isbndb.com/book/9781617292019|Juric, Saša|2015|Manning
 Programming Phoenix LiveView: Interactive Elixir Web Programming Without Writing Any JavaScript|https://isbndb.com/book/9781680508215|Tate, Bruce A. and DeBenedetto, Sophie|2022|Pragmatic Bookshelf
 Learning Elixir|https://isbndb.com/book/9781785883477|Ballou, Kenny|2016|Packt Publishing
 Erlang and Elixir for Imperative Programmers|https://isbndb.com/book/9781484223949|Loder, Wolfgang|2016|Apress
 Phoenix Web Development: Create rich web applications using functional programming techniques with Phoenix and Elixir|https://isbndb.com/book/9781787284777|Voloz, Mike and Richey, Brandon|2018|Packt Publishing
 Adopting Elixir|https://isbndb.com/book/9781680505849|Ben Marx; Jose Valim; Bruce Tate|20180314|Pragmatic Bookshelf
 Introducing Elixir|https://isbndb.com/book/9781491956854|Simon St. Laurent; J. David Eisenberg|20161222|O'Reilly Media, Inc.
 Introducing Elixir|https://isbndb.com/book/9781449369996|Laurent, Simon St.; Eisenberg, J. David|20151216|O'Reilly Media, Inc.
 Introducing Elixir|https://isbndb.com/book/9781449369972|Simon St. Laurent|20140910|O'Reilly Media, Inc.
 Mastering Elixir|https://isbndb.com/book/9781788472241|Andre Albuquerque; Daniel Caixinha|30-07-2018|Packt Publishing
 Programming Ecto: Build Database Apps in Elixir for Scalability and Performance|https://isbndb.com/book/9781680502824|Wilson, Darin and Meadows-Jonsson, Eric|20190416|Pragmatic Bookshelf
 Programmer Passport: Elixir|https://isbndb.com/book/9781680509625|Bruce Tate|20220622|Pragmatic Bookshelf
 Designing Elixir Systems With OTP|https://isbndb.com/book/9781680507379|James Edward Gray II; Bruce A. Tate|20191202|Pragmatic Bookshelf
 Concurrent Data Processing in Elixir|https://isbndb.com/book/9781680508963|Svilen Gospodinov|20210725|Pragmatic Bookshelf
 Craft GraphQL APIs in Elixir with Absinthe|https://isbndb.com/book/9781680505931|Bruce Williams; Ben  Wilson|20180327|Pragmatic Bookshelf
 Build a Weather Station with Elixir and Nerves|https://isbndb.com/book/9781680509472|Alexander Koutmos; Bruce Tate; Frank Hunleth|20220106|Pragmatic Bookshelf
 Build a Binary Clock with Elixir and Nerves|https://isbndb.com/book/9781680509236|Frank Hunleth; Bruce Tate|20220802|Pragmatic Bookshelf
 Property-Based Testing with PropEr, Erlang, and Elixir|https://isbndb.com/book/9781680506549|Fred Hebert|20190117|Pragmatic Bookshelf
 Designing Elixir Systems With OTP|https://isbndb.com/book/9781680507379|James Edward Gray II; Bruce A. Tate|20191202|Pragmatic Bookshelf
 Genetic Algorithms in Elixir|https://isbndb.com/book/9781680507942|Sean Moriarity|20210120|Pragmatic Bookshelf
 Exploring Graphs With Elixir|https://isbndb.com/book/9781680508406|Tony Hammond|20221025|Pragmatic Bookshelf
 Testing Elixir|https://isbndb.com/book/9781680507829|Andrea Leopardi; Jeffrey Matthias|20210330|Pragmatic Bookshelf
 Metaprogramming Elixir|https://isbndb.com/book/9781680500417|Chris McCord|20150129|Pragmatic Bookshelf
 Learn Functional Programming with Elixir|https://isbndb.com/book/9781680502459|Ulisses Almeida|20180201|Pragmatic Bookshelf
 Functional Web Development with Elixir, OTP, and Phoenix|https://isbndb.com/book/9781680502435|Lance Halvorsen|20180101|Pragmatic Bookshelf


foldBreak
subsection Publications about Elixir from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 Elixir programming language evaluation for IoT|https://www.semanticscholar.org/paper/bb548cf88bde14637e67dce390ed5c4b1e339d11|Geovane Fedrecheski and L. Costa and M. Zuffo|2016|6|0
 A Gradual Type System for Elixir|https://www.semanticscholar.org/paper/2f7b1940b91bc5a13cc44e0dc6ff0fa26298de3d|Mauricio Cassola and Agustín Talagorria and Alberto Pardo and Marcos Viera|2020|2|0
 An Elixir library for programming concurrent and distributed embedded systems|https://www.semanticscholar.org/paper/8b499715223c14b95dcbac77fdf03c0bb285a833|Humberto Rodríguez-Avila and E. G. Boix and W. Meuter|2017|1|0






keyboardNav nodejs.html cuda.html
