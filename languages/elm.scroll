title Elm

import settings.scroll
htmlTitle Elm - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/elm.pldb

paragraph
 Elm is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=2012">2012</a> by <a href="../lists/creators.html#Evan_Czaplicki">Evan Czaplicki</a>.

kpiTable
 #71 <span title="TotalRank: 221 Jobs: 52 Users: 104 Facts: 65 Links: 119">on PLDB</span>
 10 Years Old
 11.4k <span title="Crude user estimate from a linear model.">Users</span>
 5 <span title="Books about or leveraging Elm">Books</span>
 2 <span title="Academic publications about or leveraging Elm">Papers</span>
 20k <span title="Elm repos on GitHub.">Repos</span>

paragraph
 Try now: <a href="http://elm-lang.org/try">Web</a> · <a href="https://riju.codes/elm">Riju</a>





paragraph
 Elm is a domain-specific programming language for declaratively creating web browser-based graphical user interfaces. Elm is purely functional, and is developed with emphasis on usability, performance, and robustness. It advertises "no runtime exceptions in practice," made possible by the Elm compiler's static type checking.. <a href="https://en.wikipedia.org/wiki/Elm_(programming_language)">Read more on Wikipedia...</a>

list
 - the <a href="http://elm-lang.org">Elm website</a>
 - the <a href="https://en.wikipedia.org/wiki/Elm_(programming_language)">Elm Wikipedia page</a>
 - Elm is developed on <a href="https://github.com/elm-lang/elm-compiler">GitHub</a> and has 6,875 stars
 - There are at least 19,905 Elm repos on <a href="https://github.com/search?q=language:Elm">GitHub</a>
 - PLDB estimates there are currently 127 job openings for Elm programmers.
 - file extensions for Elm include elm
 - Elm compiles to <a href="javascript.html">JavaScript</a>
 - Elm is written in <a href="haskell.html">Haskell</a>
 - the Elm team is on <a href="https://twitter.com/elmlang">Twitter</a>
 - The  Google BigQuery Public Dataset GitHub snapshot shows 2k users using Elm in 3k repos on <a href="https://api.github.com/search/repositories?q=language:Elm">GitHub</a>
 - There are 4 <a href="https://projecteuler.net/language=Elm">Project Euler</a> users using Elm
 - Explore Elm snippets on <a href="http://www.rosettacode.org/wiki/Category:Elm">Rosetta Code</a>
 - Elm appears in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
 - Here is a Elm <a href="language-server-protocol.html">LSP</a> <a href="https://github.com/elm-tooling/elm-language-server">implementation</a>
 - There is a <a href="codemirror.html">CodeMirror</a> <a href="https://github.com/codemirror/codemirror5/tree/master/mode/elm">package</a> for syntax highlighting Elm
 - <a href="languages/pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/elm.py">syntax highlighting</a> for Elm
 - GitHub supports <a href="https://github.com/elm-community/Elm.tmLanguage" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Elm
 - There is a <a href="https://package.elm-lang.org/">central package repository</a> for Elm
 - Indeed.com has 127 matches for <a href="https://www.indeed.com/jobs?q=elm engineer">"elm engineer"</a>.
 - <a href="http://elm-lang.org">elm-lang.org</a> was registered in 2011
 - See also: (7 related languages)<a href="haskell.html">Haskell</a>, <a href="standard-ml.html">Standard ML</a>, <a href="ocaml.html">OCaml</a>, <a href="f-sharp.html">F#</a>, <a href="vuejs.html">Vue</a>, <a href="javascript.html">JavaScript</a>, <a href="typescript.html">TypeScript</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/elm">Improve our Elm file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://riju.codes/elm'>Riju</a>:
code
 module Main exposing (..)
 
 output : String
 output = &quot;Hello, world!&quot;
 

exampleCodeHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/e/Elm.elm'>hello-world</a>:
code
 import Html exposing (text)
 
 main =
   text &quot;Hello World&quot;
 

exampleCodeHeader Example from <a href='http://helloworldcollection.de/#Elm'>the Hello World Collection</a>:
code
 -- Hello world in Elm
 
 import Text
 
 main = Text.plainText &quot;Hello, world!&quot;

exampleCodeHeader Example from <a href='https://github.com/elm-community/Elm.tmLanguage'>Linguist</a>:
code
 
 main = asText (qsort [3,9,1,8,5,4,7])
 
 qsort lst =
   case lst of
     x:xs -&gt; qsort (filter ((&gt;=)x) xs) ++ [x] ++ qsort (filter ((&lt;)x) xs)
     [] -&gt; []
 
 
 {---------------------
 
 QuickSort works as follows:
  - Choose a pivot element which be placed in the &quot;middle&quot; of the sorted list.
    In our case we are choosing the first element as the pivot.
  - Gather all of the elements less than the pivot (the first filter).
    We know that these must come before our pivot element in the sorted list.
    Note: ((&gt;=)x) === (\y -&gt; (&gt;=) x y) === (\y -&gt; x &gt;= y)
  - Gather all of the elements greater than the pivot (the second filter).
    We know that these must come after our pivot element in the sorted list.
  - Run `qsort` on the lesser elements, producing a sorted list that contains
    only elements less than the pivot. Put these before the pivot.
  - Run `qsort` on the greater elements, producing a sorted list. Put these
    after the pivot.
 
 Note that choosing a bad pivot can have bad effects. Take a sorted list with
 N elements. The pivot will always be the lowest member, meaning that it does
 not divide the list very evenly. The list of lessers has 0 elements
 and the list of greaters has N-1 elemens. This means qsort will be called
 N times, each call looking through the entire list. This means, in the worst
 case, QuickSort will make N^2 comparisons.
 
 ----------------------}
 

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/Elm_(programming_language)'>Wikipedia</a>:
code
 -- This is a single line comment
 
 {- This is a multi-line comment.
    It can span multiple lines.
 -}
 
 {- It is possible to {- nest -} multi-line comments -}
 
 -- Here we define a value named &#39;&#39;greeting&#39;&#39;. The type is inferred as a String.
 greeting =
     &quot;Hello World!&quot;
 
  -- It is best to add type annotations to top-level declarations.
 hello : String
 hello =
     &quot;Hi there.&quot;
 
 -- Functions are declared the same way, with arguments following the function name.
 add x y =
     x + y
 
 -- Again, it is best to add type annotations.
 hypotenuse : Float -&gt; Float -&gt; Float
 hypotenuse a b =
     sqrt (a^2 + b^2)
 
 -- Functions are also curried; here we&#39;ve curried the multiplication 
 -- infix operator with a `2`
 multiplyBy2 : number -&gt; number
 multiplyBy2 =
     (*) 2
 
 -- If-expressions are used to branch on values
 absoluteValue : number -&gt; number
 absoluteValue number =
     if number &lt; 0 then negate number else number
 
  -- Records are used to hold values with named fields
 book : { title : String, author : String, pages : Int }
 book =
     { title = &quot;Steppenwolf&quot;
     , author = &quot;Hesse&quot;
     , pages = 237 
     }
 
 -- Record access is done with `.`
 title : String
 title =
     book.title
 
 -- Record access `.` can also be used as a function
 author : String
 author =
     .author book
 
 -- We can create entirely new types with the `type` keyword.
 -- The following value represents a binary tree.
 type Tree a
     = Empty
     | Node a (Tree a) (Tree a)
 
 -- It is possible to inspect these types with case-expressions.
 depth : Tree a -&gt; Int
 depth tree =
     case tree of
         Empty -&gt;
             0
 
         Node value left right -&gt;
             1 + max (depth left) (depth right)





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Integers
  FeatureLink ../languages/integers-feature.html
  Supported ✓
  Example
   -- _?\d+
  Token 
 row
  Feature Floats
  FeatureLink ../languages/floats-feature.html
  Supported ✓
  Example
   -- _?\d+\.(?=\d+)
  Token 
 row
  Feature Strings
  FeatureLink ../languages/strings-feature.html
  Supported ✓
  Example
   "Hello world"
  Token "
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature MultiLine Comments
  FeatureLink ../languages/multiline-comments-feature.html
  Supported ✓
  Example
   {- A comment
   -}
  Token {- -}
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   -- A comment
  Token --
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
  Token 





foldBreak
subsection Books about Elm from ISBNdb
pipeTable
 title|titleLink|authors|year|publisher
 Practical Elm For A Busy Developer|https://isbndb.com/book/9780473484309|Alex S. Korban|2019|
 Programming Elm|https://isbndb.com/book/9781680507171|Jeremy Fairbank|20190702|O'Reilly Media, Inc.
 Elm Web Development|https://isbndb.com/book/9781788292375|Ajdin Imsirovic|2018-03-30|Packt Publishing
 Elm in Action|https://isbndb.com/book/9781638355885|Richard Feldman|20200404|Manning Publications
 Web Applications with Elm|https://isbndb.com/book/9781484226100|Wolfgang Loder|20180821|Springer Nature


foldBreak
subsection Publications about Elm from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 Model-View-Update-Communicate: Session Types meet the Elm Architecture|https://www.semanticscholar.org/paper/0c500a3661fe5ef06e09ccc26e9252863d499ca6|S. Fowler|2019|5|2
 Using Elm to Introduce Algebraic Thinking to K-8 Students|https://www.semanticscholar.org/paper/9b5288f0d7cbdc8481abb055574008c8e34dd1c2|Curtis D'Alves and Tanya Bouman and Christopher W. Schankula and J. Hogg and Levin Noronha and Emily Horsman and R. Siddiqui and C. Anand|2018|4|0






keyboardNav powerpc.html x86-isa.html
