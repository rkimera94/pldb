title FaCT

import settings.scroll
htmlTitle FaCT - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/fact-lang.pldb

paragraph
 FaCT is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=2017">2017</a> by <a href="../lists/creators.html#Deian_Stefan">Deian Stefan</a>.

kpiTable
 #1417 <span title="TotalRank: 1887 Jobs: 62 Users: 1280 Facts: 875 Links: 950">on PLDB</span>
 5 Years Old
 126 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging FaCT">Books</span>
 1 <span title="Academic publications about or leveraging FaCT">Papers</span>







paragraph
 FaCT is a domain-specific language that aids you in writing constant-time code for cryptographic routines that need to be free from timing side channels. This is the compiler for the Flexible and Constant Time cryptographic programming language. Real-world cryptographic code is often written in a subset of C intended to execute in constant-time, thereby avoiding timing side channel vulnerabilities. This C subset eschews structured programming as we know it: if-statements, looping constructs, and procedural abstractions can leak timing information when handling sensitive data. The resulting obfuscation has led to subtle bugs, even in widely-used high-profile libraries like OpenSSL. To address the challenge of writing constant-time cryptographic code, we present FaCT, a crypto DSL that provides high-level but safe language constructs. The FaCT compiler uses a secrecy type system to automatically transform potentially timing-sensitive high-level code into low-level, constant-time LLVM bitcode. We develop the language and type system, formalize the constant-time transformation, and present an empirical evaluation that uses FaCT to implement core crypto routines from several open-source projects including OpenSSL, libsodium, and curve25519-donna. Our evaluation shows that FaCT's design makes it possible to write \emph{readable}, high-level cryptographic code, with \emph{efficient}, \emph{constant-time} behavior.

list
 - FaCT is developed on <a href="https://github.com/PLSysSec/FaCT">GitHub</a> and has 92 stars
 - Read more about FaCT on the web: <a href="https://ranjitjhala.github.io/static/fact_dsl.pdf">1</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/fact-lang">Improve our FaCT file</a>

html
 <br>

exampleCodeHeader Example from the web:
code
 void
 swap_conditional(secret mut uint64[5] a, secret mut uint64[5] b, secret uint64 swapi) {
   if (swapi == 1) {
     for (uint32 i from 0 to 5) {
       secret uint64 x = a[i];
       a[i] = b[i];
       b[i] = x;
     }
   }
 }













foldBreak
subsection Publications about FaCT from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 DeFacto: Language-Parametric Fact Extraction from Source Code|https://www.semanticscholar.org/paper/a25ddb85adfff458d4829bcbf16db3d64fce7517|H. Basten and P. Klint|2009|14|1






keyboardNav ld-json.html mdl.html
