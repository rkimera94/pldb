title Frege

import settings.scroll
htmlTitle Frege - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/frege.pldb

paragraph
 Frege is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=2011">2011</a>.

kpiTable
 #176 <span title="TotalRank: 489 Jobs: 101 Users: 216 Facts: 172 Links: 665">on PLDB</span>
 11 Years Old
 4.4k <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging Frege">Books</span>
 0 <span title="Academic publications about or leveraging Frege">Papers</span>
 223 <span title="Frege repos on GitHub.">Repos</span>







paragraph
 Frege is a non-strict, purely functional programming language for the Java virtual machine in the spirit of Haskell. It is considered a Haskell dialect or simply "a" Haskell for the Java virtual machine. Frege has a strong static type system with type inference. <a href="https://en.wikipedia.org/wiki/Frege_(programming_language)">Read more on Wikipedia...</a>

list
 - the <a href="https://github.com/Frege/frege">Frege website</a>
 - the <a href="https://en.wikipedia.org/wiki/Frege_(programming_language)">Frege Wikipedia page</a>
 - Frege is developed on <a href="https://github.com/frege/frege">GitHub</a> and has 3,546 stars
 - There are at least 223 Frege repos on <a href="https://github.com/search?q=language:Frege">GitHub</a>
 - file extensions for Frege include fr
 - the Frege team is on <a href="https://twitter.com/fregelang">Twitter</a>
 - The  Google BigQuery Public Dataset GitHub snapshot shows 142 users using Frege in 160 repos on <a href="https://api.github.com/search/repositories?q=language:Frege">GitHub</a>
 - There are 3 <a href="https://projecteuler.net/language=Frege">Project Euler</a> users using Frege
 - Explore Frege snippets on <a href="http://www.rosettacode.org/wiki/Category:Frege">Rosetta Code</a>
 - GitHub supports <a href="https://github.com/atom-haskell/language-haskell" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Frege
 - See also: (7 related languages)<a href="haskell.html">Haskell</a>, <a href="jvm.html">JVM</a>, <a href="java.html">Java</a>, <a href="java-bytecode.html">Java Bytecode</a>, <a href="linux.html">Linux</a>, <a href="unix.html">Unix</a>, <a href="eclipse-editor.html">Eclipse</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/frege">Improve our Frege file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://github.com/atom-haskell/language-haskell'>Linguist</a>:
code
 {-- 
     This program displays the
     current time on stdandard output
     every other second.
     -}
     
 module examples.CommandLineClock where
 
 data Date = native java.util.Date where
     native new :: () -&gt; IO (MutableIO Date)     -- new Date()
     native toString :: Mutable s Date -&gt; ST s String    -- d.toString()
 
 --- &#39;IO&#39; action to give us the current time as &#39;String&#39;
 current :: IO String
 current = do
     d &lt;- Date.new ()
     d.toString
 
 {- 
     &quot;java.lang.Thread.sleep&quot; takes a &quot;long&quot; and
     returns nothing, but may throw an InterruptedException.
     This is without doubt an IO action.
     
     public static void sleep(long millis)
                   throws InterruptedException
     
     Encoded in Frege:
     - argument type  long   Long
     - result         void   ()
     - does IO               IO ()
     - throws ...            throws ....
      
 -}
 -- .... defined in frege.java.Lang
 -- native sleep java.lang.Thread.sleep :: Long -&gt; IO () throws InterruptedException
 
       
 main args =  
     forever do
         current &gt;&gt;= print
         print &quot;\r&quot;
         stdout.flush
         Thread.sleep 999
                 

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/Frege_(programming_language)'>Wikipedia</a>:
code
 {-- 
     This program displays the
     current time on standard output
     every other second.
     -}
     
 module examples.CommandLineClock where
 
 data Date = native java.util.Date where
     native new :: () -&gt; IO (MutableIO Date)             -- new Date()
     native toString :: Mutable s Date -&gt; ST s String    -- d.toString()
 
 --- &#39;IO&#39; action to give us the current time as &#39;String&#39;
 current :: IO String
 current = do
     d &lt;- Date.new ()  -- reads system timer, hence IO
     d.toString
 
 main args =  
     forever do
         current &gt;&gt;= print   -- print formatted date
         print &quot;\r&quot;          -- followed by carriage return
         stdout.flush        -- make sure it&#39;s shown
         Thread.sleep 999L   -- wait 0.999 seconds





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature MultiLine Comments
  FeatureLink ../languages/multiline-comments-feature.html
  Supported ✓
  Example
   {- A comment
   -}
  Token {- -}
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   -- A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   -- A comment
  Token --
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 













keyboardNav ballerina.html coldfusion.html
