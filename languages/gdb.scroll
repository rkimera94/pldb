title GDB

import settings.scroll
htmlTitle GDB - Object object

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/gdb.pldb

paragraph
 GDB is an <a href="../lists/languages.html?filter=application">object object</a> created in <a href="../lists/languages.html?filter=1986">1986</a>.

kpiTable
 #386 on PLDB
 36 Years Old
 1.2k <span title="Crude user estimate from a linear model.">Users</span>

paragraph
 Try now: <a href="https://riju.codes/gdb">Riju</a>





paragraph
 The GNU Debugger (GDB) is a portable debugger that runs on many Unix-like systems and works for many programming languages, including Ada, C, C++, Objective-C, Free Pascal, Fortran, Java and partially others.. <a href="https://en.wikipedia.org/wiki/GNU_Debugger">Read more on Wikipedia...</a>

list
 - the <a href="https://www.gnu.org/software/gdb">GDB website</a>
 - the <a href="https://en.wikipedia.org/wiki/GNU_Debugger">GDB Wikipedia page</a>
 - GDB first developed in <a href="../lists/originCommunities.html#GNU_Project">GNU Project</a>
 - file extensions for GDB include gdb and gdbinit
 - The  Google BigQuery Public Dataset GitHub snapshot shows 2k users using GDB in 3k repos on <a href="https://api.github.com/search/repositories?q=language:GDB">GitHub</a>
 - There is an <a href="https://packages.ubuntu.com/jammy/gdb">Ubuntu package</a> for GDB
 - GitHub supports <a href="https://github.com/quarnster/SublimeGDB" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for GDB
 - GDB appears in the <a href="https://github.com/mame/quine-relay">Quine Relay</a> project
 - See also: (18 related languages)<a href="c.html">C</a>, <a href="ada.html">Ada</a>, <a href="objective-c.html">Objective-C</a>, <a href="free-pascal.html">Free Pascal</a>, <a href="fortran.html">Fortran</a>, <a href="java.html">Java</a>, <a href="arm.html">ARM</a>, <a href="atmel-avr.html">Atmel AVR</a>, <a href="x86-isa.html">X86</a>, <a href="mips.html">MIPS architecture</a>, <a href="powerpc.html">PowerPC</a>, <a href="sparc.html">SPARC</a>, <a href="arc-isa.html">ARC processor</a>, <a href="python.html">Python</a>, <a href="guile.html">Guile</a>, <a href="freebsd.html">FreeBSD</a>, <a href="vim-editor.html">Vim</a>, <a href="linux.html">Linux</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/gdb">Improve our GDB file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://riju.codes/gdb'>Riju</a>:
code
 p &quot;Hello, world!&quot;
 

exampleCodeHeader Example from <a href='https://github.com/quarnster/SublimeGDB'>Linguist</a>:
code
 #
 # MicropendousX LPC17xx Development Board
 #
 # http://www.MicropendousX.org
 #
 # Connect to a debugger controlling a LPC17xx
 # and download firmware.
 #
 # Start your OpenOCD gdb server before running
 # this script with:  arm-none-eabi-gdb -x gdb_lpc17xx_program.gdb
 #
 # Note the &#39;monitor&#39; command just passes its
 # arguments to OpenOCD
 #
 # This file is released under the MIT License
 #
 
 # Connect to OpenOCD gdb server
 target remote localhost:3333
 
 # reset the LPC17xx IC with the OpenOCD reset command
 monitor reset
 
 # the following are OpenOCD commands as in OpenOCD_program.script
 # which will download a hex file into your LPC17xx
 monitor halt
 monitor sleep 200
 monitor wait_halt
 monitor flash probe 0
 monitor flash info 0
 monitor flash write_image erase unlock USBtoSerial.hex
 monitor sleep 200
 monitor reset run
 monitor exit
 
 quit
 

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/GNU_Debugger'>Wikipedia</a>:
code
 GNU gdb (GDB) Fedora (7.3.50.20110722-13.fc16)
 Copyright (C) 2011 Free Software Foundation, Inc.
 License GPLv3+: GNU GPL version 3 or later &lt;https://gnu.org/licenses/gpl.html&gt;
 This is free software: you are free to change and redistribute it.
 There is NO WARRANTY, to the extent permitted by law.  Type &quot;show copying&quot;
 and &quot;show warranty&quot; for details.
 This GDB was configured as &quot;x86_64-redhat-linux-gnu&quot;.
 For bug reporting instructions, please see:
 &lt;https://www.gnu.org/software/gdb/bugs/&gt;...
 Reading symbols from /path/example...done.
 (gdb) run
 Starting program: /path/example
 size of a = 21
 [Inferior 1 (process 14290) exited normally]









foldBreak
subsection Books about GDB on goodreads
pipeTable
 title|titleLink|author|year|reviews|ratings|rating
 C Prog - Using gdb (C Programming)|https://www.goodreads.com/search?q=C Prog - Using gdb (C Programming) Subbu Dykes|Subbu Dykes||0|0|0.0
 Linux Embedded Programming: Using Gcc & Gdb|https://www.goodreads.com/search?q=Linux Embedded Programming: Using Gcc & Gdb Robert Wehrli|Robert Wehrli|2001|0|0|0.0
 Accelerated Linux Core Dump Analysis: Training Course Transcript with GDB Practice Exercises (Pattern-Oriented Software Diagnostics, Forensics, Prognostics, Root Cause Analysis, Debugging Courses)|https://www.goodreads.com/search?q=Accelerated Linux Core Dump Analysis: Training Course Transcript with GDB Practice Exercises (Pattern-Oriented Software Diagnostics, Forensics, Prognostics, Root Cause Analysis, Debugging Courses) Dmitry Vostokov|Dmitry Vostokov||0|0|0.0
 Accelerated Mac OS X Core Dump Analysis, Second Edition: Training Course Transcript with GDB and LLDB Practice Exercises (Pattern-Oriented Software Diagnostics, ... Root Cause Analysis, Debugging Courses)|https://www.goodreads.com/search?q=Accelerated Mac OS X Core Dump Analysis, Second Edition: Training Course Transcript with GDB and LLDB Practice Exercises (Pattern-Oriented Software Diagnostics, ... Root Cause Analysis, Debugging Courses) Dmitry Vostokov|Dmitry Vostokov||0|0|0.0










keyboardNav puppet.html bicep.html
