title Go

import settings.scroll
htmlTitle Go - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/go.pldb

paragraph
 Go is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=2009">2009</a> by <a href="../lists/creators.html#Rob_Pike">Rob Pike</a> and <a href="../lists/creators.html#Ken_Thompson">Ken Thompson</a> and <a href="../lists/creators.html#Robert_Griesemer">Robert Griesemer</a>.

kpiTable
 #20 <span title="TotalRank: 69 Jobs: 26 Users: 14 Facts: 30 Links: 29">on PLDB</span>
 13 Years Old
 525.2k <span title="Crude user estimate from a linear model.">Users</span>
 5 <span title="Books about or leveraging Go">Books</span>
 26 <span title="Academic publications about or leveraging Go">Papers</span>
 1m <span title="Go repos on GitHub.">Repos</span>

paragraph
 Try now: <a href="https://go.dev/play">Web</a> · <a href="https://riju.codes/go">Riju</a> · <a href="https://tio.run/#go">TIO</a> · <a href="https://repl.it/languages/go">Replit</a>

monacoEditor go
 // Type your code here, or load an example.
 // Your function name should start with a capital letter.
 package main
 
 func Square(x int) int {
     return x * x
 }
 
 func main() {}
 



paragraph
 Go (often referred to as golang) is a programming language created at Google in 2009 by Robert Griesemer, Rob Pike, and Ken Thompson. It is a compiled, statically typed language in the tradition of Algol and C, with garbage collection, limited structural typing, memory safety features and CSP-style concurrent programming features added. The compiler and other language tools originally developed by Google are all free and open source.. <a href="https://en.wikipedia.org/wiki/Go_(programming_language)">Read more on Wikipedia...</a>

list
 - the <a href="https://go.dev/">Go website</a>
 - the <a href="https://en.wikipedia.org/wiki/Go_(programming_language)">Go Wikipedia page</a>
 - the <a href="https://devdocs.io/go/">Go docs</a>
 - There are at least 1,083,789 Go repos on <a href="https://github.com/search?q=language:Go">GitHub</a>
 - Go first developed in <a href="../lists/originCommunities.html#Google">Google</a>
 - PLDB estimates there are currently 6k job openings for Go programmers.
 - file extensions for Go include go
 - the Go team is on <a href="https://twitter.com/golang">Twitter</a>
 - The  Google BigQuery Public Dataset GitHub snapshot shows 45k users using Go in 91k repos on <a href="https://api.github.com/search/repositories?q=language:Go">GitHub</a>
 - Check out the 315 <a href="https://www.meetup.com/topics/golang/">Go meetup groups</a> on Meetup.com.
 - There are 1,768 <a href="https://projecteuler.net/language=Go">Project Euler</a> users using Go
 - In the 2021 StackOverflow <a href="https://insights.stackoverflow.com/survey">developer survey</a> Go programmers reported a median salary of $75,669. 9% of respondents reported using Go. 7,879 programmers reported using Go, and 15,788 said they wanted to use it
 - Explore Go snippets on <a href="http://www.rosettacode.org/wiki/Category:Go">Rosetta Code</a>
 - Go is supported by the <a href="https://www.sourceware.org/gdb/">GDB</a>
 - Go ranks #14 in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
 - There is an <a href="https://packages.ubuntu.com/jammy/golang">Ubuntu package</a> for Go
 - Here is an <a href="antlr.html">ANTLR</a> <a href="https://github.com/antlr/grammars-v4/tree/master/golang">grammar</a> for Go
 - Here is a Go <a href="language-server-protocol.html">LSP</a> <a href="https://github.com/sourcegraph/go-langserver">implementation</a>
 - There is a <a href="codemirror.html">CodeMirror</a> <a href="https://github.com/codemirror/codemirror5/tree/master/mode/go">package</a> for syntax highlighting Go
 - There is a <a href="monaco.html">Monaco</a> <a href="https://github.com/microsoft/monaco-editor/tree/main/src/basic-languages/go">package</a> for syntax highlighting Go
 - <a href="languages/pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/go.py">syntax highlighting</a> for Go
 - GitHub supports <a href="https://github.com/AlanQuatermain/go-tmbundle" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Go
 - Go appears in the <a href="https://github.com/mame/quine-relay">Quine Relay</a> project
 - PLDB has 4 <a href="jupyter-notebook.html">Jupyter</a> Kernels for Go: <a href="https://github.com/yunabe/lgo">github.com</a>, <a href="https://github.com/takluyver/igo">github.com</a>, <a href="https://github.com/fabian-z/gopherlab">github.com</a>, <a href="https://github.com/gopherdata/gophernotes">github.com</a>
 - Indeed.com has 1,284 matches for <a href="https://www.indeed.com/jobs?q=go engineer">"go engineer"</a>.
 - See also: (33 related languages)<a href="assembly-language.html">Assembly language</a>, <a href="linux.html">Linux</a>, <a href="freebsd.html">FreeBSD</a>, <a href="solaris.html">Solaris</a>, <a href="alef.html">ALEF</a>, <a href="apl.html">APL</a>, <a href="bcpl.html">BCPL</a>, <a href="c.html">C</a>, <a href="csp.html">CSP</a>, <a href="limbo.html">Limbo</a>, <a href="modula.html">Modula</a>, <a href="newsqueak.html">Newsqueak</a>, <a href="oberon.html">Oberon</a>, <a href="occam.html">Occam</a>, <a href="pascal.html">Pascal</a>, <a href="python.html">Python</a>, <a href="smalltalk.html">Smalltalk</a>, <a href="crystal.html">Crystal</a>, <a href="algol.html">Algol</a>, <a href="unix.html">Unix</a>, <a href="java.html">Java</a>, <a href="utf-8.html">UTF-8</a>, <a href="csharp.html">C#</a>, <a href="rust.html">Rust</a>, <a href="erlang.html">Erlang</a>, <a href="chapel.html">Chapel</a>, <a href="cilk.html">CIL</a>, <a href="mongodb.html">MongoDB</a>, <a href="standard-ml.html">Standard ML</a>, <a href="cobol.html">COBOL</a>, <a href="fortran.html">Fortran</a>, <a href="scala.html">Scala</a>, <a href="dart.html">Dart</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/go">Improve our Go file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://godbolt.org/'>Compiler Explorer</a>:
code
 // Type your code here, or load an example.
 // Your function name should start with a capital letter.
 package main
 
 func Square(x int) int {
     return x * x
 }
 
 func main() {}
 

exampleCodeHeader Example from <a href='https://riju.codes/go'>Riju</a>:
code
 package main
 
 import &quot;fmt&quot;
 
 func main() {
 	fmt.Println(&quot;Hello, world!&quot;)
 }

exampleCodeHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/g/Go.go'>hello-world</a>:
code
 package main
 
 import &quot;fmt&quot;
 
 func main() {
   fmt.Println(&quot;Hello World&quot;)
 }
 

exampleCodeHeader Example from <a href='http://helloworldcollection.de/#Go'>the Hello World Collection</a>:
code
 // Hello world in Go
 
 package main
 import &quot;fmt&quot;
 func main() {
  fmt.Printf(&quot;Hello World\n&quot;)
 }

exampleCodeHeader Example from <a href='https://github.com/AlanQuatermain/go-tmbundle'>Linguist</a>:
code
 // Autogenerated by Thrift Compiler (1.0.0-dev)
 // DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 
 package linguist
 
 import (
 	&quot;bytes&quot;
 	&quot;fmt&quot;
 	&quot;git.apache.org/thrift.git/lib/go/thrift&quot;
 )
 
 // (needed to ensure safety because of naive import list construction.)
 var _ = thrift.ZERO
 var _ = fmt.Printf
 var _ = bytes.Equal
 
 func init() {
 }
 

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/Go_(programming_language)'>Wikipedia</a>:
code
 package main
 
 import (
     &quot;fmt&quot;
     &quot;time&quot;
 )
 
 func readword(ch chan string) {
     fmt.Println(&quot;Type a word, then hit Enter.&quot;)
     var word string
     fmt.Scanf(&quot;%s&quot;, &amp;word)
     ch &lt;- word
 }
 
 func timeout(t chan bool) {
     time.Sleep(5 * time.Second)
     t &lt;- true
 }
 
 func main() {
     t := make(chan bool)
     go timeout(t)
 
     ch := make(chan string)
     go readword(ch)
 
     select {
     case word := &lt;-ch:
         fmt.Println(&quot;Received&quot;, word)
     case &lt;-t:
         fmt.Println(&quot;Timeout.&quot;)
     }
 }



subsection <a href="../lists/keywords.html?filter=go">Keywords</a> in Go
paragraph
 break case chan const continue default defer else fallthrough for func go goto if import interface map package range return select struct switch type var

foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Floats
  FeatureLink ../languages/floats-feature.html
  Supported ✓
  Example
   // \d+(\.\d+[eE][+\-]?\d+|\.\d*|[eE][+\-]?\d+)
  Token 
 row
  Feature Hexadecimals
  FeatureLink ../languages/hexadecimals-feature.html
  Supported ✓
  Example
   // 0[xX][0-9a-fA-F]+
  Token 
 row
  Feature Octals
  FeatureLink ../languages/octals-feature.html
  Supported ✓
  Example
   // 0[0-7]+
  Token 
 row
  Feature Conditionals
  FeatureLink ../languages/conditionals-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Switch Statements
  FeatureLink ../languages/switch-statements-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Constants
  FeatureLink ../languages/constants-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Case Sensitivity
  FeatureLink ../languages/case-sensitivity-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Assignment
  FeatureLink ../languages/assignment-feature.html
  Supported ✓
  Example
  Token =
 row
  Feature Print() Debugging
  FeatureLink ../languages/print-debugging-feature.html
  Supported ✓
  Example
  Token fmt.Println
 row
  Feature Message Passing
  FeatureLink ../languages/message-passing-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   // A comment
  Token //
 row
  Feature Variadic Functions
  FeatureLink ../languages/variadic-functions-feature.html
  Supported ✓
  Example
   // This variadic function takes an arbitrary number of ints as arguments.
   func sum(nums ...int) {
     fmt.Print("The sum of ", nums) // Also a variadic function.
     total := 0
     for _, num := range nums {
       total += num
     }
     fmt.Println(" is", total) // Also a variadic function.
   }
  Token 
 row
  Feature Lists
  FeatureLink ../languages/lists-feature.html
  Supported ✓
  Example
   myList := []int{1, 2, 3}
  Token 
 row
  Feature File Imports
  FeatureLink ../languages/file-imports-feature.html
  Supported ✓
  Example
   import (
      "fmt"
      "math"
   )
   import . "fmt"
   import _ "io"
   import log "github.com/foo/bar"
   import m "math"
  Token 
 row
  Feature Increment and decrement operators
  FeatureLink ../languages/increment-and-decrement-operators-feature.html
  Supported ✓
  Example
   i := 0
   i++
   i--
  Token 
 row
  Feature Integers
  FeatureLink ../languages/integers-feature.html
  Supported ✓
  Example
   i, j := 42, 2701
  Token 
 row
  Feature Booleans
  FeatureLink ../languages/booleans-feature.html
  Supported ✓
  Example
   c := true
  Token 
 row
  Feature MultiLine Comments
  FeatureLink ../languages/multiline-comments-feature.html
  Supported ✓
  Example
   /* A comment
   */
  Token /* */
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   // This is a comment
  Token 
 row
  Feature Pointers
  FeatureLink ../languages/pointers-feature.html
  Supported ✓
  Example
   package main
   
   import "fmt"
   
   func main() {
     i, j := 42, 2701
   
     p := &i         // point to i
     fmt.Println(*p) // read i through the pointer
     *p = 21         // set i through the pointer
     fmt.Println(i)  // see the new value of i
   
     p = &j         // point to j
     *p = *p / 37   // divide j through the pointer
     fmt.Println(j) // see the new value of j
   }
   
  Token 
 row
  Feature Strings
  FeatureLink ../languages/strings-feature.html
  Supported ✓
  Example
   "hello world"
  Token "
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 
 row
  Feature Operator Overloading
  FeatureLink ../languages/operator-overloading-feature.html
  Supported ϴ
  Example
  Token 





foldBreak
subsection Books about Go from ISBNdb
pipeTable
 title|titleLink|authors|year|publisher
 The Way To Go: A Thorough Introduction To The Go Programming Language|https://isbndb.com/book/9781469769165|Balbaert, Ivo|2012|iUniverse
 Go Programming Blueprints: Build real-world, production-ready solutions in Go using cutting-edge technology and techniques, 2nd Edition|https://isbndb.com/book/9781786468949|Ryer, Mat|2016|Packt Publishing
 TouchDevelop: Programming on the Go (Expert's Voice in Web Development)|https://isbndb.com/book/9781430261360|Horspool, Nigel and Tillmann, Nikolai and Bishop, Judith|2013|Apress
 Go Web Programming|https://isbndb.com/book/9781617292569|Chang, Sau Sheong|2016|Manning Publications
 Go Programming Blueprints|https://isbndb.com/book/9781783988020|Ryer, Mat|2015|Packt Publishing


foldBreak
subsection Publications about Go from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 Structured Programming with go to Statements|https://www.semanticscholar.org/paper/3fdae4603265209ddf420cfaa9cbd0286c567c6c|D. Knuth|1974|685|25
 When good instructions go bad: generalizing return-oriented programming to RISC|https://www.semanticscholar.org/paper/bc6be5f3f1cf582c3613e3c7de6a793947335854|E. Buchanan and Ryan Roemer and H. Shacham and S. Savage|2008|403|28
 The Go Programming Language|https://www.semanticscholar.org/paper/e2c3ace95d91ea0d25abce56d7c3e71201c87229|Jeffrey H. Meyerson|2014|278|7
 Static deadlock detection for concurrent go by global session graph synthesis|https://www.semanticscholar.org/paper/f3902b140f40cf972cb4f3a5489c9ca45b9ed867|Nicholas Ng and N. Yoshida|2016|54|2
 A Static Verification Framework for Message Passing in Go Using Behavioural Types|https://www.semanticscholar.org/paper/e1a8c301be733b9a413dc21c45c1f013c5f81f94|J. Lange and Nicholas Ng and Bernardo Toninho and N. Yoshida|2018|50|2
 Understanding Real-World Concurrency Bugs in Go|https://www.semanticscholar.org/paper/246a2af5c477396f52a7af39e3c6a26049ae3310|Tengfei Tu and Xiaoyu Liu and Linhai Song and Yiying Zhang|2019|45|4
 GoHotDraw: evaluating the Go programming language with design patterns|https://www.semanticscholar.org/paper/ae564736323308356b53aefc2afc67a0764555f2|Frank Schmager and N. Cameron and J. Noble|2010|23|1
 Go at Google|https://www.semanticscholar.org/paper/8d058d199185c3cbb9446a4ce486a765bd242aa2|R. Pike|2012|22|0
 An Empirical Study of Messaging Passing Concurrency in Go Projects|https://www.semanticscholar.org/paper/a7029d89d1032c66412872fd17caa45ae635d6f6|Nicolas Dilley and J. Lange|2019|22|1
 Here We Go Again: Why Is It Difficult for Developers to Learn Another Programming Language?|https://www.semanticscholar.org/paper/112353453760498067a78e5e53220b7a11df9db4|Nischal Shrestha and Colton Botta and Titus Barik and Chris Parnin|2020|19|1
 Concurrency in Go and Java: Performance analysis|https://www.semanticscholar.org/paper/4b73e80c19f9cbb3881379f73e4bb134ea9d3cf8|Naohiro Togashi and V. Klyuev|2014|16|4
 Architecture-Based Code Generation: From π-ADL Architecture Descriptions to Implementations in the Go Language|https://www.semanticscholar.org/paper/b52c76f904dfd05395d17e2489614bc59ca99f29|Everton Cavalcante and F. Oquendo and T. Batista|2014|14|1
 bíogo: a simple high-performance bioinformatics toolkit for the Go language|https://www.semanticscholar.org/paper/92c2f9e43a3799392a963d437adf3901ea6dc3d1|R. Kortschak and Josh Bleecher Snyder and Manolis Maragkakis and D. Adelson|2014|12|1
 Deferred gratification: engineering for high performance garbage collection from the get go|https://www.semanticscholar.org/paper/6d712e3ccc708a2e7bcda5c2056ccfab43af8270|Ivan Jibaja and S. Blackburn and M. Haghighat and K. McKinley|2011|11|0
 FML-based Dynamic Assessment Agent for Human-Machine Cooperative System on Game of Go|https://www.semanticscholar.org/paper/2e99badd048590ded429bb08889538270241bbfd|Chang-Shing Lee and Mei-Hui Wang and Sheng-Chi Yang and Pi-Hsia Hung and Su-Wei Lin and Nan Shuo and N. Kubota and Chun-Hsun Chou and P. Chou and Chia-Hsiu Kao|2017|11|0
 Static Race Detection and Mutex Safety and Liveness for Go Programs (Artifact)|https://www.semanticscholar.org/paper/a5c89ffa3121aec2eace5f64cb75d915ee12a21c|Julia Gabet and N. Yoshida|2020|10|1
 goDASH — GO Accelerated HAS Framework for Rapid Prototyping|https://www.semanticscholar.org/paper/90e3d263241111cff7064037a0ade6b00323bb80|Darijo Raca and Maëlle Manifacier and Jason J. Quinlan|2020|7|0
 GoBench: A Benchmark Suite of Real-World Go Concurrency Bugs|https://www.semanticscholar.org/paper/c1bcb1da18bda80a92790a79bdff362980f731fd|Ting Yuan and Guangwei Li and Jie Lu and Chen Liu and Lian Li and Jingling Xue|2021|7|3
 Two-Phase Dynamic Analysis of Message-Passing Go Programs Based on Vector Clocks|https://www.semanticscholar.org/paper/e1116fdac1e58415c62e21c83f2d6bc5aab08035|M. Sulzmann and K. Stadtmüller|2018|6|0
 Trace-Based Run-Time Analysis of Message-Passing Go Programs|https://www.semanticscholar.org/paper/8185a6664d62ae017910c8960c302ed7ffac8e40|M. Sulzmann and K. Stadtmüller|2017|5|1
 Bounded verification of message-passing concurrency in Go using Promela and Spin|https://www.semanticscholar.org/paper/d98f1cf4376c7de5e65391c3d1fa372b03540b49|Nicolas Dilley and J. Lange|2020|4|0
 PARAGON: an approach for parallelization of power system contingency analysis using Go programming language|https://www.semanticscholar.org/paper/aec59c18d84b2544e119a6ad663b4c5865cca060|S. Khaitan and J. McCalley|2015|4|1
 Static Race Detection and Mutex Safety and Liveness for Go Programs (extended version)|https://www.semanticscholar.org/paper/6eef6ecf97976770bc407850aeb6f47ee8ccb19c|Julia Gabet and N. Yoshida|2020|3|1
 Overview of the Go Language|https://www.semanticscholar.org/paper/e8230750cd61b5972228841186cacfdb856fa4d1|J. Newmarch|2017|3|1
 Pattern matching for object-like structures in the Go programming language|https://www.semanticscholar.org/paper/1787cbbc350b8f812633b14dba353cc4659bccfa|Chanwit Kaewkasi and Pitchaya Kaewkasi|2011|2|0
 Evaluating the GO Programming Language with Design Patterns|https://www.semanticscholar.org/paper/ab5a1cf83194c5180bf9d0d992fe2514dfd54fe3|Frank Schmager|null|1|0






keyboardNav cobol.html ada.html
