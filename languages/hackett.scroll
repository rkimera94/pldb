title Hackett

import settings.scroll
htmlTitle Hackett - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/hackett.pldb

paragraph
 Hackett is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=2017">2017</a> by <a href="../lists/creators.html#Alexis_King">Alexis King</a>.

kpiTable
 #831 <span title="TotalRank: 1378 Jobs: 101 Users: 458 Facts: 819 Links: 952">on PLDB</span>
 5 Years Old
 1.2k <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging Hackett">Books</span>
 0 <span title="Academic publications about or leveraging Hackett">Papers</span>







paragraph
 Hackett is an attempt to implement a Haskell-like language with support for Racket’s macro system, built using the techniques described in the paper Type Systems as Macros.

list
 - the <a href="https://lexi-lambda.github.io/hackett/">Hackett website</a>
 - Hackett is developed on <a href="https://github.com/lexi-lambda/hackett">GitHub</a> and has 1,094 stars
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/hackett">Improve our Hackett file</a>

html
 <br>

exampleCodeHeader Example from the web:
code
 #lang hackett
 
 (data (Maybe a)
   Nothing
   (Just a))
 
 (def x : Integer
   (let ([y 3]
         [z 7])
     {y + z}))
 
 (class (Show a)
   [show : {a -&gt; String}])
 
 (instance (forall [a] (Show a) =&gt; (Show (Maybe a)))
   [show (λ* [[(Just x)] {&quot;(Just &quot; ++ (show x) ++ &quot;)&quot;}]
             [[Nothing ] &quot;Nothing&quot;])])



















keyboardNav 1620sps.html roku-brightscript.html
