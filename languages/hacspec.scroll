title hacspec

import settings.scroll
htmlTitle hacspec - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/hacspec.pldb

paragraph
 hacspec is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=2018">2018</a> by <a href="../lists/creators.html#Franziskus_Kiefer">Franziskus Kiefer</a>.

kpiTable
 #1328 <span title="TotalRank: 1815 Jobs: 69 Users: 1031 Facts: 794 Links: 952">on PLDB</span>
 4 Years Old
 219 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging hacspec">Books</span>
 0 <span title="Academic publications about or leveraging hacspec">Papers</span>







paragraph
 A specification language for crypto primitives and more in Rust.

list
 - the <a href="https://hacspec.org">hacspec website</a>
 - hacspec is developed on <a href="https://github.com/hacspec/hacspec">GitHub</a> and has 133 stars
 - <a href="https://www.franziskuskiefer.de/publications/hacspec18/">First announcement of</a> hacspec
 - <a href="https://hacspec.org">hacspec.org</a> was registered in 2020
 - See also: (1 related languages)<a href="rust.html">Rust</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/hacspec">Improve our hacspec file</a>

html
 <br>

exampleCodeHeader Example from the web:
code
 pub type Res = (usize, usize);
 pub enum ResTyp {
     Ok(Res),
 }
 
 pub fn test_simpl_fails() -&gt; Res {
     match ResTyp::Ok((42, 42)) {
         ResTyp::Ok(res) =&gt; res,
     }
 }
 
 #[derive(Clone)]
 pub struct MyTupleType(u16, u8);
 
 pub fn test_tuple_destructuring() {
     let tuple = MyTupleType(1u16, 2u8).clone();
     let MyTupleType(_a, _b) = tuple;
 }



















keyboardNav notation3.html manool.html
