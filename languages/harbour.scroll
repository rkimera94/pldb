title Harbour

import settings.scroll
htmlTitle Harbour - Programming language

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/harbour.pldb

* Harbour is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 1999 by Antonio Linares.
 link ../lists/languages.html?filter=1999 1999
 link ../lists/creators.html#Antonio_Linares Antonio Linares
 

kpiTable
 #713 <span title="TotalRank: 1263 Jobs: 101 Users: 1019 Facts: 209 Links: 953">on PLDB</span>
 23 Years Old
 231 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging Harbour">Books</span>
 0 <span title="Academic publications about or leveraging Harbour">Papers</span>
 45 <span title="Harbour repos on GitHub.">Repos</span>

* Harbour is a modern computer programming language, primarily used to create database/business programs. It is a modernized, open sourced and cross-platform version of the older Clipper system, which in turn developed from the dBase database market of the 1980s and 90s. Harbour code using the same databases can be compiled under a wide variety of platforms, including Microsoft Windows, Linux, Unix variants, several BSD descendants, Mac OS X, MINIX 3, Windows CE, Pocket PC, Symbian, iOS, Android, QNX, VxWorks, OS/2/eComStation, BeOS/Haiku,  AIX and MS-DOS.. <a href="https://en.wikipedia.org/wiki/Harbour_(programming_language)">Read more on Wikipedia...</a>

- the <a href="https://harbour.github.io/">Harbour website</a>
- the <a href="https://en.wikipedia.org/wiki/Harbour_(programming_language)">Harbour Wikipedia page</a>
- There are at least 45 Harbour repos on <a href="https://github.com/search?q=language:Harbour">GitHub</a>
- file extensions for Harbour include hb, prg, ch and hbp
- The  Google BigQuery Public Dataset GitHub snapshot shows 80 users using Harbour in 86 repos on <a href="https://api.github.com/search/repositories?q=language:Harbour">GitHub</a>
- Explore Harbour snippets on <a href="http://www.rosettacode.org/wiki/Category:Harbour">Rosetta Code</a>
- GitHub supports <a href="https://github.com/hernad/atom-language-harbour" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Harbour
- See also: (16 related languages)<a href="clipper.html">Clipper</a>, <a href="dbase.html">DBase</a>, <a href="linux.html">Linux</a>, <a href="unix.html">Unix</a>, <a href="ios.html">iOS</a>, <a href="android.html">Android</a>, <a href="tcp.html">TCP</a>, <a href="mysql.html">MySQL</a>, <a href="postgresql.html">PostgreSQL</a>, <a href="sqlite.html">SQLite</a>, <a href="xbase.html">xBase</a>, <a href="c.html">C</a>, <a href="java.html">Java</a>, <a href="visual-foxpro.html">Visual FoxPro</a>, <a href="visual-objects.html">Visual Objects</a>, <a href="xbasepp.html">XBase++</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://build.pldb.com/edit/harbour">Improve our Harbour file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/h/Harbour.prg'>hello-world</a>:
code
 PROCEDURE Main()
 
    ? &quot;Hello World&quot;
 
    RETURN
 

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/Harbour_(programming_language)'>Wikipedia</a>:
code
 #include &quot;hbclass.ch&quot;
 
  PROCEDURE Main()
 
     LOCAL oPerson
 
     CLS
 
     oPerson := Person():New( &quot;Dave&quot; )
 
     oPerson:Eyes := &quot;Invalid&quot;
 
     oPerson:Eyes := &quot;Blue&quot;
 
     Alert( oPerson:Describe() )
 
     RETURN
 
  CREATE CLASS Person
 
     VAR Name INIT &quot;&quot;
 
     METHOD New( cName )
     METHOD Describe()
 
     ACCESS Eyes INLINE ::pvtEyes
     ASSIGN Eyes( x ) INLINE iif( HB_ISSTRING( x ) .AND. x $ &quot;Blue,Brown,Green&quot;, ::pvtEyes := x, Alert( &quot;Invalid value&quot; ) )
 
     PROTECTED:
 
     VAR pvtEyes
 
  ENDCLASS
 
  // Sample of normal Method definition
  METHOD New( cName ) CLASS Person
 
     ::Name := cName
 
     RETURN Self
 
  METHOD Describe() CLASS Person
 
     LOCAL cDescription
 
     IF Empty( ::Name )
        cDescription := &quot;I have no name yet.&quot;
     ELSE
        cDescription := &quot;My name is: &quot; + ::Name + &quot;;&quot;
     ENDIF
 
     IF ! Empty( ::Eyes )
        cDescription += &quot;my eyes&#39; color is: &quot; + ::Eyes
     ENDIF
 
     RETURN cDescription

foldBreak
## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Strings
  FeatureLink ../languages/strings-feature.html
  Supported ✓
  Example
   "Hello world"
  Token "
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   // A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   // A comment
  Token //
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 

keyboardNav binary-notation.html gold.html
