title Qualcomm Hexagon

import settings.scroll
htmlTitle Qualcomm Hexagon - Assembly language

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/hexagon.pldb

* Qualcomm Hexagon is an <a href="../lists/languages.html?filter=assembly">assembly language</a> created in 2006.
 link ../lists/languages.html?filter=2006 2006

 

kpiTable
 #453 <span title="TotalRank: 966 Jobs: 89 Users: 391 Facts: 1229 Links: 486">on PLDB</span>
 16 Years Old
 1.6k <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging Qualcomm Hexagon">Books</span>
 0 <span title="Academic publications about or leveraging Qualcomm Hexagon">Papers</span>

* Hexagon (QDSP6) is the brand for a family of 32-bit multi-threaded microarchitectures implementing the same instruction set for a digital signal processor (DSP) developed by Qualcomm. According to 2012 estimation, Qualcomm shipped 1.2 billion DSP cores inside its system on a chip (SoCs) (average 2.3 DSP core per SoC) in 2011 year, and 1.5 billion cores were planned for 2012, making the QDSP6 the most shipped architecture of DSP (CEVA had around 1 billion of DSP cores shipped in 2011 with 90% of IP-licenseable DSP market). The Hexagon architecture is designed to deliver performance with low power over a variety of applications. <a href="https://en.wikipedia.org/wiki/Qualcomm_Hexagon">Read more on Wikipedia...</a>

- the <a href="https://en.wikipedia.org/wiki/Qualcomm_Hexagon">Qualcomm Hexagon Wikipedia page</a>
- Qualcomm Hexagon first developed in <a href="../lists/originCommunities.html#Qualcomm">Qualcomm</a>
- See also: (2 related languages)<a href="linux.html">Linux</a>, <a href="llvmir.html">LLVM IR</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://build.pldb.com/edit/hexagon">Improve our Qualcomm Hexagon file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/Qualcomm_Hexagon'>Wikipedia</a>:
code
 { R17:16 = MEMD(R0++M1)
   MEMD(R6++M1) = R25:24
   R20 = CMPY(R20, R8):&lt;&lt;1:rnd:sat
   R11:10 = VADDH(R11:10, R13:12)
 }:endloop0

keyboardNav asmjs.html geojson.html
