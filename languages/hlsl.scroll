title HLSL

import settings.scroll
htmlTitle HLSL - Programming language

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/hlsl.pldb

* HLSL is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 2002.
 link ../lists/languages.html?filter=2002 2002

 

kpiTable
 #451 <span title="TotalRank: 961 Jobs: 101 Users: 642 Facts: 218 Links: 665">on PLDB</span>
 20 Years Old
 640 <span title="Crude user estimate from a linear model.">Users</span>
 8 <span title="Books about or leveraging HLSL">Books</span>
 0 <span title="Academic publications about or leveraging HLSL">Papers</span>
 2k <span title="HLSL repos on GitHub.">Repos</span>

* The High-Level Shader Language or High-Level Shading Language (HLSL) is a proprietary shading language developed by Microsoft for the Direct3D 9 API to augment the shader assembly language, and went on to become the required shading language for the unified shader model of Direct3D 10 and higher. HLSL is analogous to the GLSL shading language used with the OpenGL standard. It is very similar to the Nvidia Cg shading language, as it was developed alongside it. <a href="https://en.wikipedia.org/wiki/High-Level_Shading_Language">Read more on Wikipedia...</a>

- the <a href="https://en.wikipedia.org/wiki/High-Level_Shading_Language">HLSL Wikipedia page</a>
- There are at least 2,093 HLSL repos on <a href="https://github.com/search?q=language:HLSL">GitHub</a>
- file extensions for HLSL include hlsl, cginc, fx, fxh and hlsli
- The  Google BigQuery Public Dataset GitHub snapshot shows 2k users using HLSL in 2k repos on <a href="https://api.github.com/search/repositories?q=language:HLSL">GitHub</a>
- <a href="languages/pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/graphics.py">syntax highlighting</a> for HLSL
- GitHub supports <a href="https://github.com/tgjones/shaders-tmLanguage" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for HLSL
- See also: (2 related languages)<a href="opengl.html">OpenGL</a>, <a href="cg.html">Cg</a>
- Read more about HLSL on the web: <a href="https://docs.microsoft.com/en-us/windows/desktop/direct3dhlsl/dx-graphics-hlsl">1</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://build.pldb.com/edit/hlsl">Improve our HLSL file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://godbolt.org/'>Compiler Explorer</a>:
code
 // The entry point and target profile are needed to compile this example:
 // -T ps_6_6 -E PSMain
 
 struct PSInput
 {
     float4 position : SV_Position;
     float4 color    : COLOR0;
 };
 
 float4 PSMain(PSInput input) : SV_Target0
 {
     return input.color * input.color;
 }
 

exampleCodeHeader Example from <a href='https://github.com/tgjones/shaders-tmLanguage'>Linguist</a>:
code
 float alpha = 1.f;
 
 texture tex;
 sampler tex_sampler = sampler_state
 {
 	Texture = (tex);
 	MipFilter = LINEAR;
 	MinFilter = LINEAR;
 	MagFilter = LINEAR;
 	
 	AddressU = WRAP;
 	AddressV = WRAP;
 };
 
 struct VS_OUTPUT
 {
 	float4 pos  : POSITION;
 	float2 tex  : TEXCOORD1;
 };
 
 VS_OUTPUT vertex(float4 ipos : POSITION, float2 tex  : TEXCOORD0)
 {
 	VS_OUTPUT Out;
 	Out.pos = ipos;
 	Out.tex = tex * 2;
 	return Out;
 }
 
 float4 pixel(VS_OUTPUT In) : COLOR
 {
 	return tex2D(tex_sampler, In.tex) * alpha;
 }
 
 technique blur_ps_vs_2_0
 {
 	pass P0
 	{
 		VertexShader = compile vs_2_0 vertex();
 		PixelShader  = compile ps_2_0 pixel();
 	}
 }
 

foldBreak
## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature MultiLine Comments
  FeatureLink ../languages/multiline-comments-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Integers
  FeatureLink ../languages/integers-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Floats
  FeatureLink ../languages/floats-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Hexadecimals
  FeatureLink ../languages/hexadecimals-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Octals
  FeatureLink ../languages/octals-feature.html
  Supported ✓
  Example
  Token 

foldBreak
## Books about HLSL on goodreads
pipeTable
 title|titleLink|author|year|reviews|ratings|rating
 HLSL and Pixel Shaders for XAML Developers|https://www.goodreads.com/search?q=HLSL and Pixel Shaders for XAML Developers Walt Ritscher|Walt Ritscher|2012|2|7|3.57
 Hlsl and Pixel Shaders for Xaml Developers|https://www.goodreads.com/search?q=Hlsl and Pixel Shaders for Xaml Developers Walt Ritscher|Walt Ritscher|2012|0|0|0.0
 Real-Time 3D Rendering with DirectX and HLSL: A Practical Guide to Graphics Programming (Game Design)|https://www.goodreads.com/search?q=Real-Time 3D Rendering with DirectX and HLSL: A Practical Guide to Graphics Programming (Game Design) Paul Varcholik|Paul Varcholik|2014|0|2|4.50

foldBreak
## Books about HLSL from ISBNdb
pipeTable
 title|titleLink|authors|year|publisher
 HLSL and Pixel Shaders for XAML Developers: A Comprehensive Guide to Creating HLSL Pixel Shaders for WPF and Silverlight Applications|https://isbndb.com/book/9781449319847|Ritscher, Walt|2012|O'Reilly Media
 HLSL and Pixel Shaders for XAML Developers|https://isbndb.com/book/9781449325022|Walt Ritscher|20120703|O'Reilly Media, Inc.
 HLSL Development Cookbook|https://isbndb.com/book/9781849694216|Doron Feinstein|20130613|Packt Publishing
 HLSL and Pixel Shaders for XAML Developers|https://isbndb.com/book/9781449325015|Walt Ritscher|20120703|O'Reilly Media, Inc.
 Real-Time 3D Rendering with DirectX and HLSL|https://isbndb.com/book/9780133570113|Paul Varcholik|20140503|Pearson Technology Group

keyboardNav koka.html asmjs.html
