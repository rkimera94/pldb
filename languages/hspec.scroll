title Hspec

import settings.scroll
htmlTitle Hspec - Programming language

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/hspec.pldb

* Hspec is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 1990.
 link ../lists/languages.html?filter=1990 1990

 

kpiTable
 #1661 <span title="TotalRank: 2154 Jobs: 101 Users: 2335 Facts: 1100 Links: 953">on PLDB</span>
 32 Years Old
 0 <span title="Books about or leveraging Hspec">Books</span>
 0 <span title="Academic publications about or leveraging Hspec">Papers</span>

* Hspec is a testing framework for Haskell.

- the <a href="https://hspec.github.io/">Hspec website</a>
- <a href="languages/pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/haskell.py">syntax highlighting</a> for Hspec
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://build.pldb.com/edit/hspec">Improve our Hspec file</a>

html
 <br>

exampleCodeHeader Example from the web:
code
 -- file Spec.hs
 import Test.Hspec
 import Test.QuickCheck
 import Control.Exception (evaluate)
 
 main :: IO ()
 main = hspec $ do
   describe &quot;Prelude.head&quot; $ do
     it &quot;returns the first element of a list&quot; $ do
       head [23 ..] `shouldBe` (23 :: Int)
 
     it &quot;returns the first element of an *arbitrary* list&quot; $
       property $ \x xs -&gt; head (x:xs) == (x :: Int)
 
     it &quot;throws an exception if used with an empty list&quot; $ do
       evaluate (head []) `shouldThrow` anyException

keyboardNav dog.html markdeep.html
