title Hspec

import settings.scroll
htmlTitle Hspec - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/hspec.pldb

paragraph
 Hspec is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=1990">1990</a>.

kpiTable
 #1614 <span title="TotalRank: 2077 Jobs: 62 Users: 2273 Facts: 1065 Links: 950">on PLDB</span>
 32 Years Old
 0 <span title="Books about or leveraging Hspec">Books</span>
 0 <span title="Academic publications about or leveraging Hspec">Papers</span>







paragraph
 Hspec is a testing framework for Haskell.

list
 - the <a href="https://hspec.github.io/">Hspec website</a>
 - <a href="languages/pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/haskell.py">syntax highlighting</a> for Hspec
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/hspec">Improve our Hspec file</a>

html
 <br>

exampleCodeHeader Example from the web:
code
 -- file Spec.hs
 import Test.Hspec
 import Test.QuickCheck
 import Control.Exception (evaluate)
 
 main :: IO ()
 main = hspec $ do
   describe &quot;Prelude.head&quot; $ do
     it &quot;returns the first element of a list&quot; $ do
       head [23 ..] `shouldBe` (23 :: Int)
 
     it &quot;returns the first element of an *arbitrary* list&quot; $
       property $ \x xs -&gt; head (x:xs) == (x :: Int)
 
     it &quot;throws an exception if used with an empty list&quot; $ do
       evaluate (head []) `shouldThrow` anyException



















keyboardNav isetl.html markdeep.html
