title Icon

import settings.scroll
htmlTitle Icon - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/icon.pldb

paragraph
 Icon is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=1977">1977</a> by <a href="../lists/creators.html#Ralph_Griswold">Ralph Griswold</a>.

kpiTable
 #199 <span title="TotalRank: 536 Jobs: 101 Users: 958 Facts: 201 Links: 234">on PLDB</span>
 45 Years Old
 271 <span title="Crude user estimate from a linear model.">Users</span>
 3 <span title="Books about or leveraging Icon">Books</span>
 19 <span title="Academic publications about or leveraging Icon">Papers</span>

paragraph
 Try now: <a href="https://riju.codes/icon">Riju</a> · <a href="https://tio.run/#icon">TIO</a>





paragraph
 Icon is a very high-level programming language featuring goal-directed execution and many facilities for managing strings and textual patterns. It is related to SNOBOL and SL5, string processing languages. Icon is not object-oriented, but an object-oriented extension called Idol was developed in 1996 which eventually became Unicon.. <a href="https://en.wikipedia.org/wiki/Icon_(programming_language)">Read more on Wikipedia...</a>

list
 - the <a href="http://www.cs.arizona.edu/icon">Icon website</a>
 - the <a href="https://en.wikipedia.org/wiki/Icon_(programming_language)">Icon Wikipedia page</a>
 - the <a href="https://www2.cs.arizona.edu/icon/">Icon docs</a>
 - file extensions for Icon include icon and ICON
 - Explore Icon snippets on <a href="http://www.rosettacode.org/wiki/Category:Icon">Rosetta Code</a>
 - Icon is listed on <a href="https://hopl.info/showlanguage.prx?exp=510">HOPL</a>
 - Icon appears in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
 - There is an <a href="https://packages.ubuntu.com/jammy/icont">Ubuntu package</a> for Icon
 - <a href="languages/pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/unicon.py">syntax highlighting</a> for Icon
 - Icon appears in the <a href="https://github.com/mame/quine-relay">Quine Relay</a> project
 - See also: (9 related languages)<a href="snobol.html">SNOBOL</a>, <a href="algol.html">Algol</a>, <a href="python.html">Python</a>, <a href="unicon.html">Unicon</a>, <a href="c.html">C</a>, <a href="pascal.html">Pascal</a>, <a href="java.html">Java</a>, <a href="smalltalk.html">Smalltalk</a>, <a href="clu.html">CLU</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/icon">Improve our Icon file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://riju.codes/icon'>Riju</a>:
code
 procedure main ()
     write(&quot;Hello, world!&quot;)
 end
 

exampleCodeHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/i/Icon.icn'>hello-world</a>:
code
 procedure main()
     write(&quot;Hello World&quot;);
 end

exampleCodeHeader Example from <a href='http://helloworldcollection.de/#Icon'>the Hello World Collection</a>:
code
 # Hello world in Icon (http://www.cs.arizona.edu/icon/)
 
 procedure main()
     write(&quot;Hello world&quot;)
 end
 

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/Icon_(programming_language)'>Wikipedia</a>:
code
 procedure main()
      s := &quot;Mon Dec 8&quot;
      s ? write(Mdate() | &quot;not a valid date&quot;)
  end
  # Define a matching function that returns
  # a string that matches a day month dayofmonth
  procedure Mdate()
  # Define some initial values
  static dates
  static days
  initial {
         days := [&quot;Mon&quot;,&quot;Tue&quot;,&quot;Wed&quot;,&quot;Thr&quot;,&quot;Fri&quot;,&quot;Sat&quot;,&quot;Sun&quot;]
         dates := [&quot;Jan&quot;,&quot;Feb&quot;,&quot;Mar&quot;,&quot;Apr&quot;,&quot;May&quot;,&quot;Jun&quot;,
                   &quot;Jul&quot;,&quot;Aug&quot;,&quot;Sep&quot;,&quot;Oct&quot;,&quot;Nov&quot;,&quot;Dec&quot;]
  }
  every suspend   (retval &lt;-  tab(match(!days)) ||     # Match a day
                              =&quot; &quot; ||                  # Followed by a blank
                              tab(match(!dates)) ||    # Followed by the month
                              =&quot; &quot; ||                  # Followed by a blank
                              matchdigits(2)           # Followed by at least 2 digits
                  ) &amp;
                  (=&quot; &quot; | pos(0) ) &amp;                   # Either a blank or the end of the string
                  retval                               # And finally return the string
  end
  # Matching function that returns a string of n digits
  procedure matchdigits(n)
      suspend (v := tab(many(&amp;digits)) &amp; *v &lt;= n) &amp; v
  end





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Integers
  FeatureLink ../languages/integers-feature.html
  Supported ✓
  Example
   # \b([+-]?[0-9]+[KMGTPkmgtp]?)\b
  Token 
 row
  Feature Floats
  FeatureLink ../languages/floats-feature.html
  Supported ✓
  Example
   # [+-]?[0-9]*\.([0-9]*)([Ee][+-]?[0-9]*)?
  Token 
 row
  Feature Hexadecimals
  FeatureLink ../languages/hexadecimals-feature.html
  Supported ✓
  Example
   # \b([+-]?([2-9]|[12][0-9]|3[0-6])[rR][0-9a-zA-Z]+)\b
  Token 
 row
  Feature Strings
  FeatureLink ../languages/strings-feature.html
  Supported ✓
  Example
   "Hello world"
  Token "
 row
  Feature Print() Debugging
  FeatureLink ../languages/print-debugging-feature.html
  Supported ✓
  Example
  Token write
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   # A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   # A comment
  Token #
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 





foldBreak
subsection Books about Icon from ISBNdb
pipeTable
 title|titleLink|authors|year|publisher
 The Icon Book: Visual Symbols for Computer Systems and Documentation|https://isbndb.com/book/9780471599005|Horton, William|1994|Wiley
 Graphics Programming In Icon|https://isbndb.com/book/9781573980098|Ralph E. Griswold and Gregg M. Townsend and Clinton L. Jeffery|1998|Peer To Peer Communications
 The Icon Programming Language (prentice-hall Software Series)|https://isbndb.com/book/9780134497778|Ralph E Griswold|1983|Prentice-hall


foldBreak
subsection Publications about Icon from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 Generators in Icon|https://www.semanticscholar.org/paper/58e38b184055909109cc30da6ce3f1a002eae242|R. Griswold and D. R. Hanson and John T. Korb|1981|52|2
 A portable storage management system for the icon programming language|https://www.semanticscholar.org/paper/832ce1c8ffed3006738fe3df7ee22e017e3f09c9|D. R. Hanson|1980|27|3
 The icon programming language: an overview|https://www.semanticscholar.org/paper/208d59a0d3972f13928d9faccdaa349e4994765a|R. Griswold and D. R. Hanson and John T. Korb|1979|21|1
 Measuring the Performance and Behavior of Icon Programs|https://www.semanticscholar.org/paper/44524266fe1762db18c784521cd02dc8937b812b|Cary A. Coutant and R. Griswold and D. R. Hanson|1983|20|0
 The Evaluation of Expressions in Icon|https://www.semanticscholar.org/paper/e407c3e678d961acc9762efc61b3169dbd4998f4|R. Griswold|1982|15|1
 A framework for execution monitoring in icon|https://www.semanticscholar.org/paper/219ecaedc38688bb39af5bdc2ea87ee5c9c5ee9c|C. Jeffery and R. Griswold|1994|13|2
 The implementation of generators and goal‐directed evaluation in icon|https://www.semanticscholar.org/paper/8911415a3dc4dc4255c19aba2597eaabf3a1de10|S. Wampler and R. Griswold|1983|11|0
 String Scanning in the Icon Programming Language|https://www.semanticscholar.org/paper/a160b5ee89bd7424acf5fe64b6487284484e2f1e|R. Griswold|1990|11|0
 An optimizing compiler for the icon programming language|https://www.semanticscholar.org/paper/ac4ad25831b1d1d26a4498610f070a7481f97bd3|Kenneth Walker and R. Griswold|1992|11|1
 History of the Icon programming language|https://www.semanticscholar.org/paper/b373998ddc18275d1204d3bc8506592c27441512|R. Griswold and Madge T. Griswold|1993|10|0
 A recursive interpreter for the Icon programming language|https://www.semanticscholar.org/paper/8cae0300ac4db01589d408e586210ef83b150ac5|Janalee O'Bagy and R. Griswold|1987|10|0
 The design and implementation of dynamic hashing for sets and tables in icon|https://www.semanticscholar.org/paper/737ddd66e85e40fed99fb00ef0819dd08b617778|W. Griswold and Gregg M. Townsend|1993|9|1
 A new implementation of the Icon language|https://www.semanticscholar.org/paper/6d475fd00ff3a9ac0e4435261ed3de8df13067a7|T. Proebsting and Gregg M. Townsend|2000|9|1
 Co-Expressions in Icon|https://www.semanticscholar.org/paper/9ed1304db28f6a53dbad488b8c40b6d878e00295|S. Wampler and R. Griswold|1983|6|0
 Logicon: An integration of prolog into icon|https://www.semanticscholar.org/paper/9f925f796da32e45b2b92b568ed90d08c29aa9fd|G. Lapalme and S. Chapleau|1986|6|1
 Expression evaluation in the icon programming language|https://www.semanticscholar.org/paper/0f3d8f0d864c9faeefdd02beeadbfa759b969c17|R. Griswold|1984|5|0
 Modeling software tools with ICON|https://www.semanticscholar.org/paper/877572d7c81d2113483a706f902edf318bf41c4a|O. Fonorow|1988|4|0
 The Icon programming language a new approach to high-level string processing|https://www.semanticscholar.org/paper/61791f3b783ed9743b793a191e09dd34e32c3cae|R. Griswold|1979|2|0
 Garbage collection alternatives for icon|https://www.semanticscholar.org/paper/08a9c225357dc043c45c147293488b402724e4c5|M. Fernández and D. R. Hanson|1992|1|1






keyboardNav x10.html pug.html
