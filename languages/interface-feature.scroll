title Interfaces

import settings.scroll
htmlTitle Interfaces - Language feature

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/interface-feature.pldb

* Interfaces is a <a href="../lists/features.html">language feature</a>.
 link ../lists/languages.html?filter=0 0

 

* Aka Protocol pattern.

- the <a href="https://en.wikipedia.org/wiki/Protocol_(object-oriented_programming)">Interfaces Wikipedia page</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://build.pldb.com/edit/interface-feature">Improve our Interfaces file</a>

html
 <br>

* Languages *with* Interfaces include <a href="java.html">Java</a>, <a href="swift.html">Swift</a>, <a href="kotlin.html">Kotlin</a>, <a href="typescript.html">TypeScript</a>, <a href="objective-c.html">Objective-C</a>, <a href="graphql.html">GraphQL</a>

exampleCodeHeader Example from <a href="java.html">Java</a>:

code
 interface MyInterface{  
    /* This is a default method so we need not
     * to implement this method in the implementation 
     * classes  
     */
    default void newMethod(){  
        System.out.println(&quot;Newly added default method&quot;);  
    }  
    /* Already existing public and abstract method
     * We must need to implement this method in 
     * implementation classes.
     */
    void existingMethod(String str);  
 }  
 public class Example implements MyInterface{ 
   // implementing abstract method
     public void existingMethod(String str){           
         System.out.println(&quot;String is: &quot;+str);  
     }  
     public static void main(String[] args) {  
       Example obj = new Example();
       
       //calling the default method of interface
         obj.newMethod();     
         //calling the abstract method of interface
         obj.existingMethod(&quot;Java 8 is easy to learn&quot;); 
   
     }  
 }

exampleCodeHeader Example from <a href="swift.html">Swift</a>:

code
 protocol MyProtocol {
 init(parameter: Int)
 var myVariable: Int { get set }
 var myReadOnlyProperty: Int { get }
 func myMethod()
 func myMethodWithBody()
 }
 extension MyProtocol {
 func myMethodWithBody() {
   // implementation goes here
   }
 }

exampleCodeHeader Example from <a href="kotlin.html">Kotlin</a>:

code
 interface Named {
    val name: String
 }
 interface Person : Named {
     val firstName: String
     val lastName: String
     
     override val name: String get() = &quot;$firstName $lastName&quot;
 }

exampleCodeHeader Example from <a href="typescript.html">TypeScript</a>:

code
 // https://www.typescriptlang.org/docs/handbook/interfaces.html
 interface SquareConfig {
    color?: string;
    width?: number;
 }

exampleCodeHeader Example from <a href="objective-c.html">Objective-C</a>:

code
 @protocol Printing
    -(void) print;
 @end

exampleCodeHeader Example from <a href="graphql.html">GraphQL</a>:

code
 interface Character {
  id: ID!
  name: String!
  friends: [Character]
  appearsIn: [Episode]!
 }
 type Human implements Character {
   id: ID!
   name: String!
   friends: [Character]
   appearsIn: [Episode]!
   starships: [Starship]
   totalCredits: Int
 }
 type Droid implements Character {
   id: ID!
   name: String!
   friends: [Character]
   appearsIn: [Episode]!
   primaryFunction: String
 }

keyboardNav integers-feature.html lazy-evaluation-feature.html
