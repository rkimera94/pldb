title Isabelle

import settings.scroll
htmlTitle Isabelle - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/isabelle.pldb

paragraph
 Isabelle is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=1986">1986</a>.

kpiTable
 #267 <span title="TotalRank: 616 Jobs: 69 Users: 665 Facts: 160 Links: 387">on PLDB</span>
 36 Years Old
 576 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging Isabelle">Books</span>
 4 <span title="Academic publications about or leveraging Isabelle">Papers</span>
 839 <span title="Isabelle repos on GitHub.">Repos</span>







paragraph
 The Isabelle theorem prover is an interactive theorem prover, a Higher Order Logic (HOL) theorem prover. It is an LCF-style theorem prover (written in Standard ML), so it is based on a small logical core to ease logical correctness. Isabelle is generic: it provides a meta-logic (a weak type theory), which is used to encode object logics like first-order logic (FOL), higher-order logic (HOL) or Zermelo–Fraenkel set theory (ZFC). <a href="https://en.wikipedia.org/wiki/Isabelle_(proof_assistant)">Read more on Wikipedia...</a>

list
 - the <a href="http://isabelle.in.tum.de/">Isabelle website</a>
 - the <a href="https://en.wikipedia.org/wiki/Isabelle_(proof_assistant)">Isabelle Wikipedia page</a>
 - There are at least 839 Isabelle repos on <a href="https://github.com/search?q=language:Isabelle">GitHub</a>
 - file extensions for Isabelle include ROOT and thy
 - The  Google BigQuery Public Dataset GitHub snapshot shows 115 users using Isabelle in 137 repos on <a href="https://api.github.com/search/repositories?q=language:Isabelle">GitHub</a>
 - Here is a Isabelle <a href="language-server-protocol.html">LSP</a> <a href="https://isabelle.in.tum.de/repos/isabelle/file/tip/src/Tools/VSCode">implementation</a>
 - <a href="languages/pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/theorem.py">syntax highlighting</a> for Isabelle
 - GitHub supports <a href="https://github.com/lsf37/Isabelle.tmbundle" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Isabelle
 - See also: (2 related languages)<a href="standard-ml.html">Standard ML</a>, <a href="coq.html">Coq</a>
 - Read more about Isabelle on the web: <a href="https://books.google.com/books?id=xwdqCQAAQBAJ&dq=isabelle+language+proof&lr=">1</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/isabelle">Improve our Isabelle file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://github.com/lsf37/Isabelle.tmbundle'>Linguist</a>:
code
 theory HelloWorld
 imports Main
 begin
 
 section{*Playing around with Isabelle*}
 
 text{* creating a lemma with the name hello_world*}
 lemma hello_world: &quot;True&quot; by simp
 
 (*inspecting it*)
 thm hello_world
 
 text{* defining a string constant HelloWorld *}
 
 definition HelloWorld :: &quot;string&quot; where
   &quot;HelloWorld \&lt;equiv&gt; &#39;&#39;Hello World!&#39;&#39;&quot;
 
 (*reversing HelloWorld twice yilds HelloWorld again*)
 theorem &quot;rev (rev HelloWorld) = HelloWorld&quot;
   by (fact List.rev_rev_ident)
 
 text{*now we delete the already proven List.rev_rev_ident lema and show it by hand*}
 declare List.rev_rev_ident[simp del]
 hide_fact List.rev_rev_ident
 
 (*It&#39;s trivial since we can just &#39;execute&#39; it*)
 corollary &quot;rev (rev HelloWorld) = HelloWorld&quot;
   apply(simp add: HelloWorld_def)
   done
 
 text{*does it hold in general?*}
 theorem rev_rev_ident:&quot;rev (rev l) = l&quot;
   proof(induction l)
   case Nil thus ?case by simp
   next
   case (Cons l ls)
     assume IH: &quot;rev (rev ls) = ls&quot;
     have &quot;rev (l#ls) = (rev ls) @ [l]&quot; by simp
     hence &quot;rev (rev (l#ls)) = rev ((rev ls) @ [l])&quot; by simp
     also have &quot;\&lt;dots&gt; = [l] @ rev (rev ls)&quot; by simp
     finally show &quot;rev (rev (l#ls)) = l#ls&quot; using IH by simp
   qed
 
 corollary &quot;\&lt;forall&gt;(l::string). rev (rev l) = l&quot; by(fastforce intro: rev_rev_ident)
 
 end
 

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/Isabelle_(proof_assistant)'>Wikipedia</a>:
code
 theorem sqrt2_not_rational:
   &quot;sqrt (real 2) ∉ ℚ&quot;
 proof
   let ?x = &quot;sqrt (real 2)&quot;
   assume &quot;?x ∈ ℚ&quot;
   then obtain m n :: nat where
     sqrt_rat: &quot;¦?x¦ = real m / real n&quot; and lowest_terms: &quot;coprime m n&quot;
     by (rule Rats_abs_nat_div_natE)
   hence &quot;real (m^2) = ?x^2 * real (n^2)&quot; by (auto simp add: power2_eq_square)
   hence eq: &quot;m^2 = 2 * n^2&quot; using of_nat_eq_iff power2_eq_square by fastforce
   hence &quot;2 dvd m^2&quot; by simp
   hence &quot;2 dvd m&quot; by simp
   have &quot;2 dvd n&quot; proof-
     from ‹2 dvd m› obtain k where &quot;m = 2 * k&quot; ..
     with eq have &quot;2 * n^2 = 2^2 * k^2&quot; by simp
     hence &quot;2 dvd n^2&quot; by simp
     thus &quot;2 dvd n&quot; by simp
   qed
   with ‹2 dvd m› have &quot;2 dvd gcd m n&quot; by (rule gcd_greatest)
   with lowest_terms have &quot;2 dvd 1&quot; by simp
   thus False using odd_one by blast
 qed





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Binary Literals
  FeatureLink ../languages/binary-numbers-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Hexadecimals
  FeatureLink ../languages/hexadecimals-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Octals
  FeatureLink ../languages/octals-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Booleans
  FeatureLink ../languages/booleans-feature.html
  Supported ✓
  Example
  Token True False
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   (* A comment
   *)
  Token 
 row
  Feature MultiLine Comments
  FeatureLink ../languages/multiline-comments-feature.html
  Supported ✓
  Example
   (* A comment
   *)
  Token (* *)
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 







foldBreak
subsection Publications about Isabelle from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 General Bindings and Alpha-Equivalence in Nominal Isabelle|https://www.semanticscholar.org/paper/94d0fe2a93092044729ef1ee299e081087600f4c|Christian Urban and C. Kaliszyk|2011|66|12
 Smart Testing of Functional Programs in Isabelle|https://www.semanticscholar.org/paper/21c3307d6cf498c37d3503a71d11d5aaf351eb55|Lukas Bulwahn|2012|26|4
 A Formalization of the C99 Standard in HOL, Isabelle and Coq|https://www.semanticscholar.org/paper/4f5516f1cc9d97769e44abc5ea6250e050174839|R. Krebbers and F. Wiedijk|2011|14|0
 Isabelle Formalization of Set Theoretic Structures and Set Comprehensions|https://www.semanticscholar.org/paper/4296acda45f0a0b7b92991c2bf9e41a81ba38af8|C. Kaliszyk and Karol Pak|2017|5|0






keyboardNav ini.html flatbuffers.html
