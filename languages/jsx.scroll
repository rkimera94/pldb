title JSX

import settings.scroll
htmlTitle JSX - Template

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/jsx.pldb

paragraph
 JSX is a <a href="../lists/languages.html?filter=template">template</a> created in <a href="../lists/languages.html?filter=2013">2013</a>.

kpiTable
 #1013 <span title="TotalRank: 1520 Jobs: 65 Users: 1054 Facts: 505 Links: 950">on PLDB</span>
 9 Years Old
 201 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging JSX">Books</span>
 0 <span title="Academic publications about or leveraging JSX">Papers</span>







paragraph
 

list
 - the <a href="http://reactjs.org">JSX website</a>
 - file extensions for JSX include jsx
 - the JSX team is on <a href="https://twitter.com/reactjs">Twitter</a>
 - GitHub supports <a href="https://github.com/github-linguist/babel-sublime" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for JSX
 - <a href="http://reactjs.org">reactjs.org</a> was registered in 2013
 - Read more about JSX on the web: <a href="https://en.wikipedia.org/wiki/React_(JavaScript_library)#JSX">1</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/jsx">Improve our JSX file</a>

html
 <br>

exampleCodeHeader Example from the web:
code
 class App extends React.Component {
   render() {
     return (
       &lt;div&gt;
         &lt;p&gt;Header&lt;/p&gt;
         &lt;p&gt;Content&lt;/p&gt;
         &lt;p&gt;Footer&lt;/p&gt;
       &lt;/div&gt;
     );
   }
 }

exampleCodeHeader Example from <a href='https://github.com/github-linguist/babel-sublime'>Linguist</a>:
code
 &#39;use strict&#39;;
 
 const React = require(&#39;react&#39;)
 
 module.exports = React.createClass({
   render: function() {
     let {feeds, log} = this.props;
 
     log.info(feeds);
     return &lt;div className=&quot;feed-list&quot;&gt;
       &lt;h3&gt;News Feed&#39;s&lt;/h3&gt;
       &lt;ul&gt;
         {feeds.map(function(feed) {
           return &lt;li key={feed.name} className={feed.fetched ? &#39;loaded&#39; : &#39;loading&#39;}&gt;
             {feed.data &amp;&amp; feed.data.length &gt; 0 ?
               &lt;span&gt;{feed.name} &lt;span className=&#39;light&#39;&gt;({feed.data.length})&lt;/span&gt;&lt;/span&gt;
               : &#39;feed.name&#39; }
           &lt;/li&gt;
         })}
       &lt;/ul&gt;
     &lt;/div&gt;;
   }
 });



















keyboardNav eex.html krl.html
