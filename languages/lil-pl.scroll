title Lil

import settings.scroll
htmlTitle Lil - Programming language

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/lil-pl.pldb

* Lil is a <a href="../lists/languages.html?filter=pl">programming language</a>.
 link ../lists/languages.html?filter=0 0

 

kpiTable
 #2005 <span title="TotalRank: 2480 Jobs: 102 Users: 2341 Facts: 1425 Links: 953">on PLDB</span>
 0 <span title="Books about or leveraging Lil">Books</span>
 0 <span title="Academic publications about or leveraging Lil">Papers</span>

* Lil is part of the technology that powers Decker, a multimedia creative tool inspired by HyperCard. Decker uses Lil for adding custom behavior to decks and the widgets within. Lil is designed to be learned in layers, but it is a richly multi-paradigm language which incorporates ideas from imperative, functional, declarative, and vector-oriented languages.

- the <a href="https://beyondloom.com/decker/lil.html">Lil website</a>
- the <a href="https://beyondloom.com/decker/lil.html">Lil docs</a>
- See also: (2 related languages)<a href="sql.html">SQL</a>, <a href="lua.html">Lua</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://build.pldb.com/edit/lil-pl">Improve our Lil file</a>

html
 <br>

exampleCodeHeader Example from the web:
code
 on mode a do   # line comment
     r:()
     each x in a
         r[x]:1+r[x]
     end
     extract first key orderby value desc from r
 end
 
 mode[1,2,2,3,4,2,1]

foldBreak
## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Lists
  FeatureLink ../languages/lists-feature.html
  Supported ✓
  Example
   emptyList = ()
  Token 
 row
  Feature Strings
  FeatureLink ../languages/strings-feature.html
  Supported ✓
  Example
  Token 

keyboardNav copilot.html quorum.html
