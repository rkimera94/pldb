title Magic Getters and Setters

import settings.scroll
htmlTitle Magic Getters and Setters - Language feature

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/magic-getters-and-setters-feature.pldb

* Magic Getters and Setters is a <a href="../lists/features.html">language feature</a>.
 link ../lists/languages.html?filter=0 0

 

* Magic getters and setters are a feature in some object-oriented languages that allows you to define a function that will be called when an undefined property on the instance is called in either a getting or setting manner.

- Read more about Magic Getters and Setters on the web: <a href="https://www.php.net/manual/en/language.oop5.overloading.php#object.get">1</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://build.pldb.com/edit/magic-getters-and-setters-feature">Improve our Magic Getters and Setters file</a>

html
 <br>

* Languages *without* Magic Getters and Setters include <a href="cpp.html">C++</a>

* Languages *with* Magic Getters and Setters include <a href="javascript.html">JavaScript</a>, <a href="php.html">PHP</a>

exampleCodeHeader Example from <a href="javascript.html">JavaScript</a>:

code
 // Can be implemented in ES6 using proxies:
 &quot;use strict&quot;;
 if (typeof Proxy == &quot;undefined&quot;) {
     throw new Error(&quot;This browser doesn&#39;t support Proxy&quot;);
 }
 let original = {
     &quot;foo&quot;: &quot;bar&quot;
 };
 let proxy = new Proxy(original, {
     get(target, name, receiver) {
         let rv = Reflect.get(target, name, receiver);
         if (typeof rv === &quot;string&quot;) {
             rv = rv.toUpperCase();
         }
         return rv;
       }
 });
 console.log(`original.foo = ${original.foo}`); // &quot;original.foo = bar&quot;
 console.log(`proxy.foo = ${proxy.foo}`);       // &quot;proxy.foo = BAR&quot;

exampleCodeHeader Example from <a href="php.html">PHP</a>:

code
     public function __set($name, $value)
    {
        echo &quot;Setting &#39;$name&#39; to &#39;$value&#39;\n&quot;;
        $this-&gt;data[$name] = $value;
    }
 
    public function __get($name)
    {
        echo &quot;Getting &#39;$name&#39;\n&quot;;
        if (array_key_exists($name, $this-&gt;data)) {
            return $this-&gt;data[$name];
        }
 
        $trace = debug_backtrace();
        trigger_error(
            &#39;Undefined property via __get(): &#39; . $name .
            &#39; in &#39; . $trace[0][&#39;file&#39;] .
            &#39; on line &#39; . $trace[0][&#39;line&#39;],
            E_USER_NOTICE);
        return null;
    }

keyboardNav implicit-type-casting-feature.html merges-whitespace-feature.html
