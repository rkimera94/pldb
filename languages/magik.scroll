title Magik

import settings.scroll
htmlTitle Magik - Programming language

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/magik.pldb

* Magik is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 1989.
 link ../lists/languages.html?filter=1989 1989

 

kpiTable
 #1759 <span title="TotalRank: 2251 Jobs: 101 Users: 1197 Facts: 1272 Links: 953">on PLDB</span>
 33 Years Old
 165 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging Magik">Books</span>
 0 <span title="Academic publications about or leveraging Magik">Papers</span>

* Magik is an object-oriented programming language that supports multiple inheritance, polymorphism and is dynamically typed. It was designed implemented in 1989 by Arthur Chance, of Smallworld Systems Ltd, as part of Smallworld Geographical Information System (GIS). Following Smallworld's acquisition in 2000, Magik is now is provided by GE Energy, still as part of its Smallworld technology platform. <a href="https://en.wikipedia.org/wiki/Magik_(programming_language)">Read more on Wikipedia...</a>

- the <a href="https://en.wikipedia.org/wiki/Magik_(programming_language)">Magik Wikipedia page</a>
- Magik is listed on <a href="https://hopl.info/showlanguage.prx?exp=3912">HOPL</a>
- Magik appears in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
- See also: (7 related languages)<a href="jvm.html">JVM</a>, <a href="smalltalk.html">Smalltalk</a>, <a href="unix.html">Unix</a>, <a href="linux.html">Linux</a>, <a href="c.html">C</a>, <a href="csharp.html">C#</a>, <a href="java.html">Java</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://build.pldb.com/edit/magik">Improve our Magik file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/Magik_(programming_language)'>Wikipedia</a>:
code
 my_procedure &lt;&lt; _proc @my_procedure(a, b, c)
     _return a + b + c
   _endproc
 
   x &lt;&lt; my_procedure(1, 2, 3) # x = 6

keyboardNav kawa-scheme-implementation.html isbl.html
