title Mary

import settings.scroll
htmlTitle Mary - Programming language

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/mary.pldb

* Mary is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 1970.
 link ../lists/languages.html?filter=1970 1970

 

kpiTable
 #900 <span title="TotalRank: 1454 Jobs: 101 Users: 1744 Facts: 688 Links: 665">on PLDB</span>
 52 Years Old
 55 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging Mary">Books</span>
 0 <span title="Academic publications about or leveraging Mary">Papers</span>

* Mary was a programming language designed and implemented by RUNIT at Trondheim, Norway in the 1970s. It borrowed many features from ALGOL 68 but was designed for machine-oriented programming. An unusual feature of its syntax was that expressions were constructed using the conventional infix operators, but all of them had the same precedence and evaluation went from left to right unless there were brackets. <a href="https://en.wikipedia.org/wiki/Mary_(programming_language)">Read more on Wikipedia...</a>

- the <a href="https://en.wikipedia.org/wiki/Mary_(programming_language)">Mary Wikipedia page</a>
- Mary is listed on <a href="https://hopl.info/showlanguage.prx?exp=647">HOPL</a>
- See also: (4 related languages)<a href="sparc.html">SPARC</a>, <a href="algol-68.html">ALGOL 68</a>, <a href="c.html">C</a>, <a href="algol.html">Algol</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://build.pldb.com/edit/mary">Improve our Mary file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/Mary_(programming_language)'>Wikipedia</a>:
code
 BEGIN
    INT i := 10;          %% Variable with initial value.
    REF INT ri := i;      %% Pointer initialized to point to i.
    INT j := 11;
    j :- REF INT =: ri;   %% Type conversion and assignment
                          %% ri now points to j.
    i =: (ri :- VAL REF INT);     
                          %% Assignment and type conversion
                          %% ri points to j so j is changed.
    IF j &gt; 10             %% Conditional statement with result
    THEN                  %% used inside an arithmetic expression.
       1
    ELSE
       2
    FI + j =: j;
 END

foldBreak
## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Assignment
  FeatureLink ../languages/assignment-feature.html
  Supported ✓
  Example
  Token :=
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   % A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   % A comment
  Token %
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 

keyboardNav ip-pascal.html fetlang.html
