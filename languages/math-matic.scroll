title MATH-MATIC

import settings.scroll
htmlTitle MATH-MATIC - Programming language

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/math-matic.pldb

* MATH-MATIC is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 1957.
 link ../lists/languages.html?filter=1957 1957

 

kpiTable
 #931 <span title="TotalRank: 1481 Jobs: 102 Users: 1520 Facts: 893 Links: 486">on PLDB</span>
 65 Years Old
 80 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging MATH-MATIC">Books</span>
 0 <span title="Academic publications about or leveraging MATH-MATIC">Papers</span>

* MATH-MATIC is the marketing name for the AT-3 (Algebraic Translator 3) compiler, an early programming language for the UNIVAC I and UNIVAC II. MATH-MATIC was written beginning around 1955 by a team led by Charles Katz under the direction of Grace Hopper. A preliminary manual was produced in 1957 and a final manual the following year. <a href="https://en.wikipedia.org/wiki/MATH-MATIC">Read more on Wikipedia...</a>

- the <a href="https://en.wikipedia.org/wiki/MATH-MATIC">MATH-MATIC Wikipedia page</a>
- MATH-MATIC first developed in <a href="../lists/originCommunities.html#Remington_Rand">Remington Rand</a>
- MATH-MATIC is listed on <a href="https://hopl.info/showlanguage.prx?exp=435">HOPL</a>
- See also: (4 related languages)<a href="flow-matic.html">FLOW-MATIC</a>, <a href="arith-matic.html">ARITH-MATIC</a>, <a href="algol-58.html">ALGOL 58</a>, <a href="fortran.html">Fortran</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://build.pldb.com/edit/math-matic">Improve our MATH-MATIC file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/MATH-MATIC'>Wikipedia</a>:
code
 (2)  TYPE-IN ALPHA . 
 (2A) READ A B C SERVO 4 STORAGE A IF SENTINEL JUMP TO SENTENCE 8 . 
 (3)  READ D F SERVO 5 . 
 (4)  VARY Y 1 (0.1) 3 SENTENCE 5 THRU 6 . 
 (5)  X1 = (7*103*Y*A*SIN ALPHA)3 / (B POW D+C POW E) . 
 (6)  WRITE AND EDIT A Y D E X1 SERVO 6 . 
 (7)  JUMP TO SENTENCE 2A . 
 (8)  CLOSE-INPUT AND REWIND SENTENCE 3 . 
 (9)  CLOSE-OUTPUT SENTENCE 6 . 
 (10) READ F G H N SERVO 4 STORAGE A IF SENTINEL JUMP TO SENTENCE 20 . 
 (11) EXECUTE SENTENCE 3 . 
 (12) X2 = (3 ROOT (E-G)+LOG (D+N)) / (F2.6*EXP H) . 
 (13) WRITE EDIT F D F X2 SERVO 6 . 
 (16) JUMP TO SENTENCE 10 . 
 (20) STOP .

keyboardNav grass.html earl-grey.html
