title Mech

import settings.scroll
htmlTitle Mech - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/mech-lang.pldb

paragraph
 Mech is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=2018">2018</a> by <a href="../lists/creators.html#Corey_Montella">Corey Montella</a>.

kpiTable
 #868 <span title="TotalRank: 1418 Jobs: 101 Users: 1204 Facts: 365 Links: 952">on PLDB</span>
 4 Years Old
 161 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging Mech">Books</span>
 0 <span title="Academic publications about or leveraging Mech">Papers</span>

paragraph
 Try now: <a href="http://try.mech-lang.org/">Web</a>





paragraph
 Mech is a language for developing data-driven, reactive systems like animations, games, and robots. It makes composing, transforming, and distributing data easy, allowing you to focus on the essential complexity of your problem.

list
 - the <a href="http://mech-lang.org">Mech website</a>
 - Mech is developed on <a href="https://github.com/mech-lang/mech">GitHub</a> and has 138 stars
 - the Mech team is on <a href="https://twitter.com/MechLang">Twitter</a>
 - <a href="http://mech-lang.org">mech-lang.org</a> was registered in 2018
 - Read more about Mech on the web: <a href="https://docs.google.com/spreadsheets/d/12sTu7RT-s_QlAupY1v-3DfI1Mm9NEX5YMWWTDAKHLfc/edit#gid=0">1</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/mech-lang">Improve our Mech file</a>

html
 <br>

exampleCodeHeader Example from the web:
code
 # Breakout
 
 ## The Game
 
 game setup
   #system/timer = [resolution: 15 tick: 0 hours: 0 minutes: 0 seconds: 0]
   #app/main = [root: &quot;drawing&quot; direction: _ contains: [#game]]
 
 game area
   #game = [|type     class contains    parameters|
             #paddle-control
             &quot;canvas&quot; _     [#elements] [width: 400 height: 400]]
 
 controller slider
   #paddle-control = [type: &quot;slider&quot; class: _ contains: _ parameters:  [min: 0 max: 300 value: 40]]
 
 draw the game area
   pos = #paddle-control{1,4}{1,3}
   start = pos
   end = pos + 100
   #elements = [|shape    parameters|
                 &quot;circle&quot; [cx: #ball.x cy: #ball.y radius: 10 fill: &quot;#000000&quot;]
                 &quot;line&quot;   [x1: start y1: 350 x2: end y2: 350 stroke: &quot;#000000&quot;]]
 
 ## The Ball
 
 block
   #ball = [x: 20 y: 20 vx: 1 vy: 3]
 
 update ball position
   ~ #system/timer.tick
   #ball.x := #ball.x + #ball.vx
   #ball.y := #ball.y + #ball.vy
 
 bounce the ball off the paddle
   ~ #ball.y
   pos = #paddle-control{1,4}{1,3}
   start = pos
   end = pos + 100
   ix = #ball.y &gt; 340 &amp; #ball.x &gt; start &amp; #ball.x &lt; end &amp; #ball.y &lt; 342
   #ball.vy{ix} := -#ball.vy
 
 bounce the ball off the ceiling
   ~ #ball.y
   #ball.vy{#ball.y &lt; 10} := -#ball.vy
 
 bounce the ball off the walls
   ~ #ball.x
   #ball.vx{#ball.x &gt; 390 | #ball.x &lt; 10} := -#ball.vx
 
 reset the ball if it makes it past the paddle
   ~ #ball.y
   ix = #ball.y &gt; 390
   #ball.x{ix} := 20
   #ball.y{ix} := 20



















keyboardNav nesc.html ezhil.html
