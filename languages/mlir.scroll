title mlir

import settings.scroll
htmlTitle mlir - Ir

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/mlir.pldb

paragraph
 mlir is an <a href="../lists/languages.html?filter=ir">ir</a> created in <a href="../lists/languages.html?filter=2019">2019</a>.

kpiTable
 #418 <span title="TotalRank: 883 Jobs: 69 Users: 305 Facts: 509 Links: 952">on PLDB</span>
 3 Years Old
 2.5k <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging mlir">Books</span>
 0 <span title="Academic publications about or leveraging mlir">Papers</span>
 84 <span title="mlir repos on GitHub.">Repos</span>







paragraph
 "Multi-Level Intermediate Representation" Compiler Infrastructure

list
 - the <a href="https://mlir.llvm.org/">mlir website</a>
 - mlir is developed on <a href="https://github.com/tensorflow/mlir">GitHub</a> and has 1,678 stars
 - There are at least 84 mlir repos on <a href="https://github.com/search?q=language:MLIR">GitHub</a>
 - file extensions for mlir include mlir
 - The  Google BigQuery Public Dataset GitHub snapshot shows 27 users using mlir in 30 repos on <a href="https://api.github.com/search/repositories?q=language:MLIR">GitHub</a>
 - Read more about mlir on the web: <a href="https://blog.tensorflow.org/2019/04/mlir-new-intermediate-representation.html">1</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/mlir">Improve our mlir file</a>

html
 <br>

exampleCodeHeader Example from the web:
code
 // Syntactically similar to LLVM:
 func @testFunction(%arg0: i32) {
   %x = call @thingToCall(%arg0) : (i32) -&gt; i32
   br ^bb1
 ^bb1:
   %y = addi %x, %x : i32
   return %y : i32
 }

exampleCodeHeader Example from <a href='https://godbolt.org/'>Compiler Explorer</a>:
code
 // Example code of an affine reduction.
 // MLIR example code may not always work out of the box because the textual MLIR format is not stable.
 // The example tries to be compatible with the latest MLIR version, which may not work on previous versions.
 
 func @affine_parallel_with_reductions_i64(%arg0: memref&lt;3x3xi64&gt;, %arg1: memref&lt;3x3xi64&gt;) -&gt; (i64, i64) {
   %0:2 = affine.parallel (%kx, %ky) = (0, 0) to (2, 2) reduce (&quot;addi&quot;, &quot;muli&quot;) -&gt; (i64, i64) {
             %1 = affine.load %arg0[%kx, %ky] : memref&lt;3x3xi64&gt;
             %2 = affine.load %arg1[%kx, %ky] : memref&lt;3x3xi64&gt;
             %3 = arith.muli %1, %2 : i64
             %4 = arith.addi %1, %2 : i64
             affine.yield %3, %4 : i64, i64
           }
   return %0#0, %0#1 : i64, i64
 }
 





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   // A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   // A comment
  Token //
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 













keyboardNav ion.html tiny-basic.html
