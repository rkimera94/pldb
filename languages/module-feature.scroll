title Module Pattern

import settings.scroll
htmlTitle Module Pattern - Language feature

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/module-feature.pldb

* Module Pattern is a <a href="../lists/features.html">language feature</a> created in 2003.
 link ../lists/languages.html?filter=2003 2003

 

* In software engineering, the module pattern is a design pattern used to implement the concept of software modules. In Python, the pattern is built into the language, and each .py file is automatically a module.

- the <a href="https://en.wikipedia.org/wiki/Module_pattern">Module Pattern Wikipedia page</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://build.pldb.com/edit/module-feature">Improve our Module Pattern file</a>

html
 <br>

* Languages *with* Module Pattern include <a href="java.html">Java</a>, <a href="csharp.html">C#</a>, <a href="fortran.html">Fortran</a>, <a href="julia.html">Julia</a>, <a href="ocaml.html">OCaml</a>, <a href="racket.html">Racket</a>

exampleCodeHeader Example from <a href="java.html">Java</a>:

code
 // Package = directory. Java classes can be grouped together in packages. A package name is the same as the directory (folder) name which contains the .java files. You declare packages when you define your Java program, and you name the packages you want to use from other libraries in an import statement.
 // The first statement, other than comments, in a Java source file, must be the package declaration.
 // Following the optional package declaration, you can have import statements, which allow you to specify classes from other packages that can be referenced without qualifying them with their package.
 // This source file must be Drawing.java in the illustration directory.
 package illustration;
 import java.awt.*;
 public class Drawing {
  // ...
 }

exampleCodeHeader Example from <a href="csharp.html">C#</a>:

code
 // In C#, namespaces are the semi-equivalent of Java&#39;s packages.
 namespace com.test
 {
    class Test {}
 }

exampleCodeHeader Example from <a href="fortran.html">Fortran</a>:

code
 module constants  
 implicit none 
 
    real, parameter :: pi = 3.1415926536  
    real, parameter :: e = 2.7182818285 
    
 contains      
    subroutine show_consts()          
       print*, &quot;Pi = &quot;, pi          
       print*,  &quot;e = &quot;, e     
    end subroutine show_consts 
    
 end module constants 
 
 
 program module_example     
 use constants      
 implicit none     
 
    real :: x, ePowerx, area, radius 
    x = 2.0
    radius = 7.0
    ePowerx = e ** x
    area = pi * radius**2     
    
    call show_consts() 
    
    print*, &quot;e raised to the power of 2.0 = &quot;, ePowerx
    print*, &quot;Area of a circle with radius 7.0 = &quot;, area  
    
 end program module_exampl

exampleCodeHeader Example from <a href="julia.html">Julia</a>:

code
 module MyModule
 using Lib
 
 using BigLib: thing1, thing2
 
 import Base.show
 
 export MyType, foo
 
 struct MyType
     x
 end
 
 bar(x) = 2x
 foo(a::MyType) = bar(a.x) + 1
 
 show(io::IO, a::MyType) = print(io, &quot;MyType $(a.x)&quot;)
 end

exampleCodeHeader Example from <a href="ocaml.html">OCaml</a>:

code
 (* In OCaml, every piece of code is wrapped into a module. *)
 (* amodule.ml *)
 let hello () = print_endline &quot;Hello&quot;
 (* bmodule.ml *)
 Amodule.hello ()

exampleCodeHeader Example from <a href="racket.html">Racket</a>:

code
 (module nest racket
    (provide (for-syntax meta-eggs)
             (for-meta 1 meta-chicks)
             num-eggs)
    (define-for-syntax meta-eggs 2)
    (define-for-syntax meta-chicks 3)
    (define num-eggs 2))

keyboardNav mixin-feature.html multiple-inheritance-feature.html
