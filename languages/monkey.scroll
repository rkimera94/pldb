title Monkey

import settings.scroll
htmlTitle Monkey - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/monkey.pldb

paragraph
 Monkey is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=2011">2011</a>.

kpiTable
 #177 <span title="TotalRank: 450 Jobs: 62 Users: 911 Facts: 155 Links: 233">on PLDB</span>
 11 Years Old
 291 <span title="Crude user estimate from a linear model.">Users</span>
 3 <span title="Books about or leveraging Monkey">Books</span>
 0 <span title="Academic publications about or leveraging Monkey">Papers</span>
 254 <span title="Monkey repos on GitHub.">Repos</span>







paragraph
 Monkey X is a high-level programming language designed for video game development for many different platforms, including desktop and laptop computers, mobile phones, tablets, and video game consoles. The language itself is an object-oriented dialect of BASIC, which the compiler translates into native source code for several target platforms. The resulting code is then compiled normally. <a href="https://en.wikipedia.org/wiki/Monkey_(programming_language)">Read more on Wikipedia...</a>

list
 - the <a href="https://web.archive.org/web/20171205070657/http://monkey-x.com/">Monkey website</a>
 - the <a href="https://en.wikipedia.org/wiki/Monkey_(programming_language)">Monkey Wikipedia page</a>
 - There are at least 254 Monkey repos on <a href="https://github.com/search?q=language:Monkey">GitHub</a>
 - file extensions for Monkey include monkey and monkey2
 - The  Google BigQuery Public Dataset GitHub snapshot shows 53 users using Monkey in 116 repos on <a href="https://api.github.com/search/repositories?q=language:Monkey">GitHub</a>
 - Explore Monkey snippets on <a href="http://www.rosettacode.org/wiki/Category:Monkey">Rosetta Code</a>
 - <a href="languages/pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/basic.py">syntax highlighting</a> for Monkey
 - GitHub supports <a href="https://github.com/gingerbeardman/monkey.tmbundle" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Monkey
 - See also: <a href="linux.html">Linux</a>, <a href="blitzbasic.html">BlitzBasic</a>, <a href="c.html">C</a>, <a href="csharp.html">C#</a>, <a href="javascript.html">JavaScript</a>, <a href="java.html">Java</a>, <a href="basic.html">BASIC</a>, <a href="android.html">Android</a>, <a href="ios.html">iOS</a>, <a href="python.html">Python</a>, <a href="opengl.html">OpenGL</a>, <a href="webgl.html">WebGL</a>, <a href="objective-c.html">Objective-C</a>, <a href="llvmir.html">LLVM IR</a>, <a href="haxe.html">Haxe</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/monkey">Improve our Monkey file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/m/Monkey'>hello-world</a>:
code
 puts(&quot;Hello World&quot;)
 

exampleCodeHeader Example from <a href='https://github.com/gingerbeardman/monkey.tmbundle'>Linguist</a>:
code
 &#39;Showcases use of Lambda functions and Generics.
 
 #Import &quot;&lt;std&gt;&quot;
 Using std..
 
 Function Main()
 
 	Local testStack := New Stack&lt; MyObject &gt;
 	
 	For Local n := 1 To 20
 		Local newItem := New MyObject
 		newItem.depth = Rnd( 0, 100 )
 		testStack.Push( newItem )
 	Next
 		
 	testStack.Sort( Lambda:Int( x:MyObject,y:MyObject )
 		Return x.depth&lt;=&gt;y.depth
 	End )
 	
 	For Local n := Eachin testStack
 		Print( n.depth )
 	Next
 	
 End
 
 
 Struct MyObject
 	Field depth := 0
 End

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/Monkey_(programming_language)'>Wikipedia</a>:
code
 &#39; The &#39;Player&#39; class, as referenced previously (Placement does not matter):
 Class Player
   &#39; Declare all of our fields (Class-local variables):
   
   &#39; These two variables will act as our position on the screen.
   &#39; (Alternatively, an &#39;Array or third-party class could be used)
   Field x:Float, y:Float
   
   &#39; This will be a reference to an &#39;Image&#39; object we&#39;ll specify.
   Field image:Image
   
   &#39; Constructor(s):
   
   &#39; Overloading &#39;New&#39; mainly works the same way as constructors in other languages.
   &#39; Returning is generally not recommended for constructors.
   Method New(img:Image, x:Float=100, y:Float=100)
     &#39; Due to the arguments using the same names, &#39;Self&#39;
     &#39; is required to resolve our fields&#39; names:
     Self.image = img
     
     Self.x = x
     Self.y = y
   End
   
   &#39; Methods:
   
   &#39; This will be our main render-method for this object:
   Method Draw:Void()
     &#39; Draw the &#39;image&#39; object to the screen using our &#39;x&#39; and &#39;y&#39; fields.
     DrawImage(image, x, y)
     
     &#39; Returning in a &#39;Void&#39; function is not required. (Some still recommend it)
     Return
   End
 End





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature MultiLine Comments
  FeatureLink ../languages/multiline-comments-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Binary Literals
  FeatureLink ../languages/binary-numbers-feature.html
  Supported ✓
  Example
   ' \%[10]+
  Token 
 row
  Feature Integers
  FeatureLink ../languages/integers-feature.html
  Supported ✓
  Example
   ' [0-9]+
  Token 
 row
  Feature Floats
  FeatureLink ../languages/floats-feature.html
  Supported ✓
  Example
   ' [0-9]+\.[0-9]*(?!\.)
  Token 
 row
  Feature Hexadecimals
  FeatureLink ../languages/hexadecimals-feature.html
  Supported ✓
  Example
   ' \$[0-9a-fA-Z]+
  Token 
 row
  Feature Strings
  FeatureLink ../languages/strings-feature.html
  Supported ✓
  Example
   "Hello world"
  Token "
 row
  Feature Print() Debugging
  FeatureLink ../languages/print-debugging-feature.html
  Supported ✓
  Example
  Token puts
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   ' A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   ' A comment
  Token '
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 





foldBreak
subsection Books about Monkey from ISBNdb
pipeTable
 title|titleLink|authors|year|publisher
 Addicted to the Monkey Mind: Change the Programming That Sabotages Your Life|https://isbndb.com/book/9780692978597|Benoist, J.F.|2018|Pakalana Publishing
 Addicted to the Monkey Mind: Change the Programming That Sabotages Your Life|https://isbndb.com/book/9780578333663|Benoist, J.F.|2018|Pakalana Publishing
 Programming Beyond Practices: Be More Than Just a Code Monkey|https://isbndb.com/book/9781491943823|Brown, Gregory T|2016|O'Reilly Media








keyboardNav coq.html coldfusion.html
