title MoonScript

import settings.scroll
htmlTitle MoonScript - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/moonscript.pldb

paragraph
 MoonScript is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=2011">2011</a>.

kpiTable
 #161 <span title="TotalRank: 456 Jobs: 101 Users: 245 Facts: 110 Links: 953">on PLDB</span>
 11 Years Old
 3.6k <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging MoonScript">Books</span>
 0 <span title="Academic publications about or leveraging MoonScript">Papers</span>
 818 <span title="MoonScript repos on GitHub.">Repos</span>

paragraph
 Try now: <a href="http://moonscript.org/compiler/">Web</a> · <a href="https://tio.run/#moonscript">TIO</a>





paragraph
 :crescent_moon: A language that compiles to Lua

list
 - the <a href="http://moonscript.org/">MoonScript website</a>
 - MoonScript is developed on <a href="https://github.com/leafo/moonscript">GitHub</a> and has 2,801 stars
 - the <a href="https://moonscript.org/reference/">MoonScript docs</a>
 - There are at least 818 MoonScript repos on <a href="https://github.com/search?q=language:MoonScript">GitHub</a>
 - file extensions for MoonScript include moon
 - MoonScript compiles to <a href="lua.html">Lua</a>
 - MoonScript is written in <a href="lua.html">Lua</a>
 - The  Google BigQuery Public Dataset GitHub snapshot shows 276 users using MoonScript in 359 repos on <a href="https://api.github.com/search/repositories?q=language:MoonScript">GitHub</a>
 - Explore MoonScript snippets on <a href="http://www.rosettacode.org/wiki/Category:MoonScript">Rosetta Code</a>
 - <a href="languages/pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/scripting.py">syntax highlighting</a> for MoonScript
 - GitHub supports <a href="https://github.com/leafo/moonscript-tmbundle" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for MoonScript
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/moonscript">Improve our MoonScript file</a>

html
 <br>

exampleCodeHeader Example from the web:
code
 class Thing
   name: &quot;unknown&quot;
 
 class Person extends Thing
   say_name: =&gt; print &quot;Hello, I am #{@name}!&quot;
 
 with Person!
   .name = &quot;MoonScript&quot;
   \say_name!

exampleCodeHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/m/Moonscript.moon'>hello-world</a>:
code
 print &#39;Hello World&#39;
 

exampleCodeHeader Example from <a href='https://github.com/leafo/moonscript-tmbundle'>Linguist</a>:
code
 
 types = require &quot;moonscript.types&quot;
 util = require &quot;moonscript.util&quot;
 data = require &quot;moonscript.data&quot;
 
 import reversed, unpack from util
 import ntype, mtype, build, smart_node, is_slice, value_is_singular from types
 import insert from table
 import NameProxy, LocalName from require &quot;moonscript.transform.names&quot;
 
 destructure = require &quot;moonscript.transform.destructure&quot;
 
 local implicitly_return
 
 class Run
   new: (@fn) =&gt;
     self[1] = &quot;run&quot;
 
   call: (state) =&gt;
     self.fn state
 
 -- transform the last stm is a list of stms
 -- will puke on group
 apply_to_last = (stms, fn) -&gt;
   -- find last (real) exp
   last_exp_id = 0
   for i = #stms, 1, -1
     stm = stms[i]
     if stm and mtype(stm) != Run
       last_exp_id = i
       break
 
   return for i, stm in ipairs stms
     if i == last_exp_id
       fn stm
     else
       stm
 
 -- is a body a sindle expression/statement
 is_singular = (body) -&gt;
   return false if #body != 1
   if &quot;group&quot; == ntype body
     is_singular body[2]
   else
     true
 
 find_assigns = (body, out={}) -&gt;
   for thing in *body
     switch thing[1]
       when &quot;group&quot;
         find_assigns thing[2], out
       when &quot;assign&quot;
         table.insert out, thing[2] -- extract names
   out
 
 hoist_declarations = (body) -&gt;
   assigns = {}
 
   -- hoist the plain old assigns
   for names in *find_assigns body
     for name in *names
       table.insert assigns, name if type(name) == &quot;string&quot;
 
   -- insert after runs
   idx = 1
   while mtype(body[idx]) == Run do idx += 1
 
   table.insert body, idx, {&quot;declare&quot;, assigns}
 
 expand_elseif_assign = (ifstm) -&gt;
   for i = 4, #ifstm
     case = ifstm[i]
     if ntype(case) == &quot;elseif&quot; and ntype(case[2]) == &quot;assign&quot;
       split = { unpack ifstm, 1, i - 1 }
       insert split, {
         &quot;else&quot;, {
           {&quot;if&quot;, case[2], case[3], unpack ifstm, i + 1}
         }
       }
       return split
 
   ifstm
 
 constructor_name = &quot;new&quot;
 
 with_continue_listener = (body) -&gt;
   continue_name = nil
   {
     Run =&gt;
       @listen &quot;continue&quot;, -&gt;
         unless continue_name





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Booleans
  FeatureLink ../languages/booleans-feature.html
  Supported ✓
  Example
  Token true false
 row
  Feature Strings
  FeatureLink ../languages/strings-feature.html
  Supported ✓
  Example
   'Hello world'
  Token '
 row
  Feature Print() Debugging
  FeatureLink ../languages/print-debugging-feature.html
  Supported ✓
  Example
  Token print
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   -- A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   -- A comment
  Token --
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 













keyboardNav idyll.html dylan.html
