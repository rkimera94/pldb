title Multiple Dispatch

import settings.scroll
htmlTitle Multiple Dispatch - Language feature

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/multiple-dispatch-feature.pldb

* Multiple Dispatch is a <a href="../lists/features.html">language feature</a> created in 2007.
 link ../lists/languages.html?filter=2007 2007

 

* Multiple dispatch or multimethods is a feature of some programming languages in which a function or method can be dynamically dispatched based on the run time (dynamic) type or, in the more general case some other attribute, of more than one of its arguments. This is a generalization of single dispatch polymorphism where a function or method call is dynamically dispatched based on the derived type of the object on which the method has been called. Multiple dispatch routes the dynamic dispatch to the implementing function or method using the combined characteristics of one or more arguments.. <a href="https://en.wikipedia.org/wiki/Multiple_dispatch">Read more on Wikipedia...</a>

- the <a href="https://en.wikipedia.org/wiki/Multiple_dispatch">Multiple Dispatch Wikipedia page</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://build.pldb.com/edit/multiple-dispatch-feature">Improve our Multiple Dispatch file</a>

html
 <br>

* Languages *without* Multiple Dispatch include <a href="javascript.html">JavaScript</a>, <a href="elixir.html">Elixir</a>

* Languages *with* Multiple Dispatch include <a href="julia.html">Julia</a>, <a href="smalltalk.html">Smalltalk</a>, <a href="common-lisp.html">Common Lisp</a>, <a href="dylan.html">Dylan</a>

exampleCodeHeader Example from <a href="julia.html">Julia</a>:

code
 collide_with(x::Asteroid, y::Asteroid) = ... # deal with asteroid hitting asteroid
 collide_with(x::Asteroid, y::Spaceship) = ... # deal with asteroid hitting spaceship
 collide_with(x::Spaceship, y::Asteroid) = ... # deal with spaceship hitting asteroid
 collide_with(x::Spaceship, y::Spaceship) = ... # deal with spaceship hitting spaceship

exampleCodeHeader Example from <a href="common-lisp.html">Common Lisp</a>:

code
  (defmethod collide-with ((x asteroid) (y asteroid))
   ;; deal with asteroid hitting asteroid
   )
 (defmethod collide-with ((x asteroid) (y spaceship))
   ;; deal with asteroid hitting spaceship
   )
 (defmethod collide-with ((x spaceship) (y asteroid))
   ;; deal with spaceship hitting asteroid
   )
 (defmethod collide-with ((x spaceship) (y spaceship))
   ;; deal with spaceship hitting spaceship
   )

keyboardNav templates-feature.html async-await-feature.html
