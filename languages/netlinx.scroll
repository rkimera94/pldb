title NetLinx

import settings.scroll
htmlTitle NetLinx - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/netlinx.pldb

paragraph
 NetLinx is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=2007">2007</a>.

kpiTable
 #567 <span title="TotalRank: 1129 Jobs: 101 Users: 929 Facts: 99 Links: 952">on PLDB</span>
 15 Years Old
 290 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging NetLinx">Books</span>
 0 <span title="Academic publications about or leveraging NetLinx">Papers</span>
 122 <span title="NetLinx repos on GitHub.">Repos</span>







paragraph
 NetLinx is both a range of controllers manufactured by AMX and the name of the proprietary programming language (loosely based on C) used to program the devices.  The NetLinx controllers are rack mountable devices which run a version of VxWorks and integrate both a processor and device controllers and are typically utilized for audio-visual control systems. An example is the mid-range NetLinx Integrated NI-2100 controller which has 3 RS-232/RS-485 serial ports, 4 relays, 4 infrared/serial ports and 4 input/outputs. <a href="https://en.wikipedia.org/wiki/NetLinx">Read more on Wikipedia...</a>

list
 - the <a href="https://en.wikipedia.org/wiki/NetLinx">NetLinx Wikipedia page</a>
 - There are at least 122 NetLinx repos on <a href="https://github.com/search?q=language:NetLinx">GitHub</a>
 - file extensions for NetLinx include axserb, axierb, axs and axi
 - The  Google BigQuery Public Dataset GitHub snapshot shows 21 users using NetLinx in 25 repos on <a href="https://api.github.com/search/repositories?q=language:NetLinx">GitHub</a>
 - GitHub supports <a href="https://github.com/amclain/sublime-netlinx" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for NetLinx
 - See also: (2 related languages)<a href="c.html">C</a>, <a href="ascii.html">ASCII</a>
 - Read more about NetLinx on the web: <a href="http://habitech.s3.amazonaws.com/PDFs/AMX/AMX-FG1906-18/NetLinx.LanguageReferenceGuide.pdf">1</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/netlinx">Improve our NetLinx file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://github.com/amclain/sublime-netlinx'>Linguist</a>:
code
 (***********************************************************
     Mock Projector
     
     For testing syntax highlighting
 ************************************************************)
 
 #if_not_defined MOCK_PROJECTOR
 #define MOCK_PROJECTOR 1
 (***********************************************************)
 (* System Type : NetLinx                                   *)
 (***********************************************************)
 (*           DEVICE NUMBER DEFINITIONS GO BELOW            *)
 (***********************************************************)
 DEFINE_DEVICE
 
 dvPROJECTOR = 5001:1:0;
 
 (***********************************************************)
 (*              CONSTANT DEFINITIONS GO BELOW              *)
 (***********************************************************)
 DEFINE_CONSTANT
 
 // Power States
 POWER_STATE_ON      = 0;
 POWER_STATE_OFF     = 1;
 POWER_STATE_WARMING = 2;
 POWER_STATE_COOLING = 3;
 
 // Inputs
 INPUT_HDMI          = 0;
 INPUT_VGA           = 1;
 INPUT_COMPOSITE     = 2;
 INPUT_SVIDEO        = 3;
 
 (***********************************************************)
 (*                    INCLUDES GO BELOW                    *)
 (***********************************************************)
 
 #include &#39;amx-lib-log&#39;
 
 (***********************************************************)
 (*              DATA TYPE DEFINITIONS GO BELOW             *)
 (***********************************************************)
 DEFINE_TYPE
 
 struct projector_t
 {
     integer power_state;
     integer input;
     integer lamp_hours;
 }
 
 (***********************************************************)
 (*              VARIABLE DEFINITIONS GO BELOW              *)
 (***********************************************************)
 DEFINE_VARIABLE
 
 volatile projector_t proj_1;
 
 (***********************************************************)
 (*         SUBROUTINE/FUNCTION DEFINITIONS GO BELOW        *)
 (***********************************************************)
 
 define_function initialize(projector_t self)
 {
     self.power_state = POWER_STATE_OFF;
     self.input = INPUT_HDMI;
     self.lamp_hours = 0;
 }
 
 define_function switch_input(projector_t self, integer input)
 {
     self.input = input;
     print(LOG_LEVEL_INFO, &quot;&#39;Projector set to input: &#39;, itoa(input)&quot;);
 }
 
 (***********************************************************)
 (*                 STARTUP CODE GOES BELOW                 *)
 (***********************************************************)
 DEFINE_START
 
 initialize(proj_1);
 
 (***********************************************************)
 (*                   THE EVENTS GO BELOW                   *)
 (***********************************************************)
 DEFINE_EVENT
 
 data_event[dvPROJECTOR]
 {
     string:
     {
         parse_message(data.text);
     }
     
     command: {}
     online:  {}
     offline: {}
 }
 
 button_event[dvTP, BTN_HDMI]
 button_event[dvTP, BTN_VGA]
 button_event[dvTP, BTN_COMPOSITE]
 button_event[dvTP, BTN_SVIDEO]
 {
     push:
     {
         switch (button.input.channel)
         {
             case BTN_HDMI:      switch_input(proj_1, INPUT_HDMI);
             case BTN_VGA:       switch_input(proj_1, INPUT_VGA);
             case BTN_COMPOSITE: switch_input(proj_1, INPUT_COMPOSITE);
             case BTN_SVIDEO:    switch_input(proj_1, INPUT_SVIDEO);
         }
     }
     
     release: {}
 }
 
 (***********************************************************)
 (*                 THE MAINLINE GOES BELOW                 *)
 (***********************************************************)
 DEFINE_PROGRAM
 
 [dvTP, BTN_POWER_ON]  = (proj_1.power_state == POWER_STATE_ON);
 [dvTP, BTN_POWER_OFF] = (proj_1.power_state == POWER_STATE_OFF);
 
 (***********************************************************)
 (*                     END OF PROGRAM                      *)
 (*          DO NOT PUT ANY CODE BELOW THIS COMMENT         *)
 (***********************************************************)
 #end_if
 





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature MultiLine Comments
  FeatureLink ../languages/multiline-comments-feature.html
  Supported ✓
  Example
   (* A comment
   *)
  Token (* *)
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   // A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   // A comment
  Token //
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 













keyboardNav readable.html cpl.html
