title NewLisp

import settings.scroll
htmlTitle NewLisp - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/newlisp.pldb

paragraph
 NewLisp is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=1991">1991</a> by <a href="../lists/creators.html#Lutz_Mueller">Lutz Mueller</a>.

kpiTable
 #207 <span title="TotalRank: 508 Jobs: 62 Users: 885 Facts: 213 Links: 233">on PLDB</span>
 31 Years Old
 311 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging NewLisp">Books</span>
 0 <span title="Academic publications about or leveraging NewLisp">Papers</span>
 476 <span title="NewLisp repos on GitHub.">Repos</span>







paragraph
 newLISP is an open source scripting language in the Lisp family of programming languages developed by Lutz Mueller and released under the GNU General Public License.. <a href="https://en.wikipedia.org/wiki/NewLISP">Read more on Wikipedia...</a>

list
 - the <a href="http://www.newlisp.org/">NewLisp website</a>
 - the <a href="https://en.wikipedia.org/wiki/NewLISP">NewLisp Wikipedia page</a>
 - There are at least 476 NewLisp repos on <a href="https://github.com/search?q=language:NewLisp">GitHub</a>
 - file extensions for NewLisp include nl, lisp, lsp and kif
 - the NewLisp team is on <a href="https://twitter.com/newlisp">Twitter</a>
 - The  Google BigQuery Public Dataset GitHub snapshot shows 774 users using NewLisp in 812 repos on <a href="https://api.github.com/search/repositories?q=language:NewLisp">GitHub</a>
 - There are 1 <a href="https://projecteuler.net/language=newLISP">Project Euler</a> users using NewLisp
 - Explore NewLisp snippets on <a href="http://www.rosettacode.org/wiki/Category:NewLISP">Rosetta Code</a>
 - <a href="languages/pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/lisp.py">syntax highlighting</a> for NewLisp
 - GitHub supports <a href="https://github.com/textmate/lisp.tmbundle" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for NewLisp
 - <a href="http://www.newlisp.org/">newlisp.org</a> was registered in 1999
 - See also: <a href="lisp.html">Lisp</a>, <a href="common-lisp.html">Common Lisp</a>, <a href="scheme.html">Scheme</a>, <a href="pascal.html">Pascal</a>, <a href="c.html">C</a>, <a href="tcl.html">Tcl</a>, <a href="s-expressions.html">S-expressions</a>, <a href="xml.html">XML</a>, <a href="utf-8.html">UTF-8</a>, <a href="tcp.html">TCP</a>, <a href="udp.html">UDP</a>, <a href="linux.html">Linux</a>, <a href="solaris.html">Solaris</a>, <a href="sqlite.html">SQLite</a>, <a href="smtp.html">SMTP</a>, <a href="ftp.html">FTP</a>, <a href="opengl.html">OpenGL</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/newlisp">Improve our NewLisp file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/n/NewLISP.lsp'>hello-world</a>:
code
 #!/usr/bin/newlisp
 (print &quot;Hello World\n&quot;)
 (exit)
 

exampleCodeHeader Example from <a href='https://github.com/textmate/lisp.tmbundle'>Linguist</a>:
code
 #!/usr/bin/env newlisp
 
 (constant &#39;NUM 8)
 
 (define (intersects? q1 q2)
 	(or 
 		(= (q1 0) (q2 0)) 
 		(= (q1 1) (q2 1))
 		(= (abs (- (q1 0) (q2 0))) (abs (- (q1 1) (q2 1))))))
 
 (define (variant? alist)
 	(set &#39;logic nil)
 	(cond
 		((= (length alist) 1) true)
 		((&gt; (length alist) 1)
 			(while (&gt; (length alist) 1)
 				(set &#39;q (pop alist -1))
 				(dolist (el alist)
 					(push 
 						(intersects? 
 							(list q (inc (length alist)))
 							(list el (+ 1 $idx)))
 					logic -1)))
 			(not (apply or logic)))))
 
 (define (fork-by-line alist)
 	(let (res &#39;())
 		(dolist (i (sequence 1 NUM))
 			(set &#39;tmp alist)
 			(push i tmp -1)
 			(setf res (push tmp res -1)))
 		res))
 
 (define (find-variants num)
 	(let (res &#39;())
 		(cond 
 			((&lt; num 1) 
 				(begin (println &quot;num &lt; 1&quot;) (exit)))
 			((= num 1) 
 				(dolist (i (sequence 1 NUM)) (push (list i) res -1)))
 			((&gt; num 1) 
 				(dolist (v (find-variants (dec num))) 
 					(set &#39;passed (filter variant? (fork-by-line v)))
 					(if (not (empty? passed)) (extend res passed)))))
 		res))
 		
 (set &#39;solutions (find-variants NUM))
 (println (length solutions))
 ;;(exit)





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Print() Debugging
  FeatureLink ../languages/print-debugging-feature.html
  Supported ✓
  Example
  Token print
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 













keyboardNav flow.html qml.html
