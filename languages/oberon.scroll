title Oberon

import settings.scroll
htmlTitle Oberon - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/oberon.pldb

paragraph
 Oberon is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=1986">1986</a> by <a href="../lists/creators.html#Niklaus_Wirth">Niklaus Wirth</a>.

kpiTable
 #128 <span title="TotalRank: 348 Jobs: 65 Users: 693 Facts: 164 Links: 119">on PLDB</span>
 36 Years Old
 521 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging Oberon">Books</span>
 21 <span title="Academic publications about or leveraging Oberon">Papers</span>

paragraph
 Try now: <a href="https://riju.codes/oberon">Riju</a>





paragraph
 Oberon is a general-purpose programming language created in 1986 by Niklaus Wirth and the latest member of the Wirthian family of ALGOL-like languages (Euler, Algol-W, Pascal, Modula, and Modula-2). Oberon was the result of a concentrated effort to increase the power of Modula-2, the direct successor of Pascal, and simultaneously to reduce its complexity. Its principal new feature is the concept of type extension of record types: It permits the construction of new data types on the basis of existing ones and to relate them, deviating from the dogma of strictly static data typing. <a href="https://en.wikipedia.org/wiki/Oberon_(programming_language)">Read more on Wikipedia...</a>

list
 - the <a href="http://www.projectoberon.com/">Oberon website</a>
 - the <a href="https://en.wikipedia.org/wiki/Oberon_(programming_language)">Oberon Wikipedia page</a>
 - There are 3 <a href="https://projecteuler.net/language=Oberon">Project Euler</a> users using Oberon
 - Oberon is listed on <a href="https://hopl.info/showlanguage.prx?exp=1415">HOPL</a>
 - Oberon appears in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
 - <a href="http://www.projectoberon.com/">projectoberon.com</a> was registered in 2011
 - See also: (17 related languages)<a href="modula-2.html">Modula-2</a>, <a href="oberon-2.html">Oberon-2</a>, <a href="zonnon.html">Zonnon</a>, <a href="go.html">Go</a>, <a href="nim.html">Nim</a>, <a href="algol.html">Algol</a>, <a href="euler.html">Euler</a>, <a href="pascal.html">Pascal</a>, <a href="modula.html">Modula</a>, <a href="ada.html">Ada</a>, <a href="linux.html">Linux</a>, <a href="solaris.html">Solaris</a>, <a href="lex.html">Lex</a>, <a href="yacc.html">Yacc</a>, <a href="x86-isa.html">X86</a>, <a href="obliq.html">Obliq</a>, <a href="visual-studio-editor.html">Visual Studio</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/oberon">Improve our Oberon file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://riju.codes/oberon'>Riju</a>:
code
 MODULE Main;
 
 IMPORT Out;
 
 BEGIN
   Out.String(&quot;Hello, world!&quot;);
   Out.Ln;
 END Main.
 

exampleCodeHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/o/Oberon.o'>hello-world</a>:
code
 MODULE HelloWorld;
 
 IMPORT Out;
 
 BEGIN
    Out.Open;
    Out.String(&#39;Hello World&#39;);
 END HelloWorld.
 

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/Oberon_(programming_language)'>Wikipedia</a>:
code
 MODULE Rectangles;
 
 IMPORT Figures;
 
 TYPE
    Rectangle* = POINTER TO RectangleDesc;
 
    RectangleDesc* = RECORD
       (Figures.FigureDesc)
       x, y, w, h : INTEGER;
    END;
 
 PROCEDURE Draw* (r : Rectangle);
 BEGIN
   (* ... *)
 END Draw;
 
 (* Other procedures here *)
 
 PROCEDURE Handle* (f: Figure; VAR msg: Figures.Message);
    VAR
       r : Rectangle;
 BEGIN
    r := f(Rectangle);
    IF    msg IS Figures.DrawMsg THEN Draw(r)
    ELSIF msg IS Figures.MarkMsg THEN Mark(r)
    ELSIF msg IS Figures.MoveMsg THEN Move(r, msg(Figures.MoveMsg).dx, msg(Figures.MoveMsg).dy)
    ELSE  (* ignore *)
    END
 END Handle;
 
 PROCEDURE New* (VAR r : Rectangle);
 BEGIN
    NEW(r);
    Figures.Init(r, Handle);
 END New;
 
 END Rectangles.





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Strings
  FeatureLink ../languages/strings-feature.html
  Supported ✓
  Example
   'Hello world'
  Token '
 row
  Feature Assignment
  FeatureLink ../languages/assignment-feature.html
  Supported ✓
  Example
  Token :=
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   (* A comment
   *)
  Token 
 row
  Feature MultiLine Comments
  FeatureLink ../languages/multiline-comments-feature.html
  Supported ✓
  Example
   (* A comment
   *)
  Token (* *)
 row
  Feature Pointers
  FeatureLink ../languages/pointers-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Print() Debugging
  FeatureLink ../languages/print-debugging-feature.html
  Supported ✓
  Example
  Token Out.String
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 







foldBreak
subsection Publications about Oberon from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 The programming language oberon|https://www.semanticscholar.org/paper/0648b884fc979f8d4e4a620193f855f173a89a74|N. Wirth|1988|242|19
 From modula to oberon|https://www.semanticscholar.org/paper/d71f6af965cef1f53e9026bb54a55d71d7aa1453|N. Wirth|1988|63|4
 The Formal Specification of Oberon|https://www.semanticscholar.org/paper/702fef24576704bd12aa6a7983b5543f9ba15f84|P. Kutter and A. Pierantonio|1997|29|0
 The Oberon System family|https://www.semanticscholar.org/paper/0ce78acb2c8e53859a41238a0c09bc475a59b65f|M. Brandis and R. Crelier and Michael Franz and J. Templ|1992|21|1
 Do the Fish Really Need Remote Control? A Proposal for Self-Active Objects in Oberon|https://www.semanticscholar.org/paper/7a1834c14d7dd5a0ec4bf9e570f08c5ad62803cc|J. Gutknecht|1997|14|1
 From Modula to Oberon and the programming language Oberon|https://www.semanticscholar.org/paper/a0d4be2f56438ca59033cfd826a04a334ebfa647|N. Wirth|1987|14|1
 Modula-2 and Oberon|https://www.semanticscholar.org/paper/6611c2c376d85397a7020885a35c3ade9b689a18|N. Wirth|2007|11|1
 Dynamic semantics of the Oberon programming language|https://www.semanticscholar.org/paper/5327cc1e0fde395ded437974e1836e9b74d09c45|P. Kutter|1996|10|1
 An Object-Oriented Database Programming Environment for Oberon|https://www.semanticscholar.org/paper/7c24291fbcb7e132fa343540050438cc379b1cb4|Jacques Supcik and M. Norrie|1997|9|0
 Differences between Oberon and Oberon-2|https://www.semanticscholar.org/paper/4fe362c41f9e39756d51bdeb19efc356d599d3e7|H. Mössenböck and N. Wirth|1991|6|0
 On the Essence of Oberon|https://www.semanticscholar.org/paper/34a315fadd302899d9796b41d48bcf04f598ccb9|D. Naumann|1994|6|0
 Programming without enumerations in Oberon|https://www.semanticscholar.org/paper/d9ff19e9616698d5950350379c00b7b138117f32|Charles Lins|1990|5|1
 A voyage to Oberon|https://www.semanticscholar.org/paper/b015e8772aa90ee1731deda734b6b8e9a75c158c|A. Radenski|1993|2|0
 A first course in object-oriented programming using Oberon|https://www.semanticscholar.org/paper/66b8ec6ecefca37ca74b5d5100be699b7c2f6f07|V. Mahnic and B. Vilfan|1996|2|0
 From Modula to Oberon: The programming language Oberon|https://www.semanticscholar.org/paper/073431b262dc897b4b4a2cab8ebe8b2a29feeda7|N. Wirth|1989|2|0
 Combined modelling and simulation of dynamic systems using Oberon|https://www.semanticscholar.org/paper/f095581b91137b1cb0c6a8c8f7e672bead585616|M. Kottmann|1996|1|0
 Building Your Own Tools: An Oberon Industrial Case-Study|https://www.semanticscholar.org/paper/b8ca106f02e13392418e83b83b7820351065f5cc|P. Reed|2000|1|0
 Some Experience In Teaching An IntroductoryProgramming Course Using Oberon|https://www.semanticscholar.org/paper/c12e98e9ac447cf4cb9a56fa2c7b8d1d1346c9e5|V. Mahnic|1997|1|0
 Algebraic Semantics of the Oberon Target Machine|https://www.semanticscholar.org/paper/133d0b379533b680b3385cbb255e2034adca789f|A. Zamulin|1996|1|0
 Control system design with Oberon|https://www.semanticscholar.org/paper/370c1df9adf39ecf4b1c4e4d8f20954c5b1cbaea|Xiaobing Qiu and W. Schaufelberger|1994|1|0
 Is Oberon as Simple as Possible? A Smaller Object-Oriented Language Based on the Concept of Module Type|https://www.semanticscholar.org/paper/0184b7b480ae3524825e2260603d7e920a87bf70|A. Radenski|1994|1|0






keyboardNav applescript.html ml.html
