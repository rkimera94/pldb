title OCaml

import settings.scroll
htmlTitle OCaml - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/ocaml.pldb

paragraph
 OCaml is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=1996">1996</a> by <a href="../lists/creators.html#Xavier_Leroy">Xavier Leroy</a>.

kpiTable
 #73 <span title="TotalRank: 253 Jobs: 101 Users: 254 Facts: 103 Links: 49">on PLDB</span>
 26 Years Old
 3.3k <span title="Crude user estimate from a linear model.">Users</span>
 11 <span title="Books about or leveraging OCaml">Books</span>
 14 <span title="Academic publications about or leveraging OCaml">Papers</span>
 27k <span title="OCaml repos on GitHub.">Repos</span>

paragraph
 Try now: <a href="https://riju.codes/ocaml">Riju</a> · <a href="https://tio.run/#ocaml">TIO</a>





paragraph
 OCaml ( oh-KAM-əl), originally named Objective Caml, is the main implementation of the programming language Caml, created by Xavier Leroy, Jérôme Vouillon, Damien Doligez, Didier Rémy, Ascánder Suárez and others in 1996. A member of the ML language family, OCaml extends the core Caml language with object-oriented programming constructs. OCaml's toolset includes an interactive top-level interpreter, a bytecode compiler, a reversible debugger, a package manager (OPAM), and an optimizing native code compiler. <a href="https://en.wikipedia.org/wiki/OCaml">Read more on Wikipedia...</a>

list
 - the <a href="http://ocaml.org">OCaml website</a>
 - the <a href="https://en.wikipedia.org/wiki/OCaml">OCaml Wikipedia page</a>
 - There are at least 27,376 OCaml repos on <a href="https://github.com/search?q=language:OCaml">GitHub</a>
 - file extensions for OCaml include ml, mli, eliom, eliomi, ml4, mll and mly
 - the OCaml team is on <a href="https://twitter.com/ocamllang">Twitter</a>
 - The  Google BigQuery Public Dataset GitHub snapshot shows 4k users using OCaml in 6k repos on <a href="https://api.github.com/search/repositories?q=language:OCaml">GitHub</a>
 - Check out the 87 <a href="https://www.meetup.com/topics/ocaml-programming/">OCaml meetup groups</a> on Meetup.com.
 - There are 219 <a href="https://projecteuler.net/language=OCaml">Project Euler</a> users using OCaml
 - Explore OCaml snippets on <a href="http://www.rosettacode.org/wiki/Category:OCaml">Rosetta Code</a>
 - OCaml is listed on <a href="https://hopl.info/showlanguage.prx?exp=2294">HOPL</a>
 - OCaml appears in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
 - There is an <a href="https://packages.ubuntu.com/jammy/ocaml">Ubuntu package</a> for OCaml
 - <a href="languages/pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/ml.py">syntax highlighting</a> for OCaml
 - GitHub supports <a href="https://github.com/textmate/ocaml.tmbundle" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for OCaml
 - OCaml appears in the <a href="https://github.com/mame/quine-relay">Quine Relay</a> project
 - PLDB has 2 <a href="jupyter-notebook.html">Jupyter</a> Kernels for OCaml: <a href="https://github.com/andrewray/iocaml">github.com</a>, <a href="https://github.com/akabe/ocaml-jupyter">github.com</a>
 - There is a <a href="https://opam.ocaml.org/">central package repository</a> for OCaml
 - <a href="http://ocaml.org">ocaml.org</a> was registered in 2000
 - See also: (36 related languages)<a href="occam.html">Occam</a>, <a href="c.html">C</a>, <a href="ia-32.html">IA-32</a>, <a href="sparc.html">SPARC</a>, <a href="arm.html">ARM</a>, <a href="unix.html">Unix</a>, <a href="f-sharp.html">F#</a>, <a href="caml.html">Caml</a>, <a href="cool.html">Classroom Object Oriented Language</a>, <a href="standard-ml.html">Standard ML</a>, <a href="ats.html">ATS</a>, <a href="elm.html">Elm</a>, <a href="fstar.html">F*</a>, <a href="haxe.html">Haxe</a>, <a href="opa.html">Opa</a>, <a href="rust.html">Rust</a>, <a href="scala.html">Scala</a>, <a href="ml.html">ML</a>, <a href="python.html">Python</a>, <a href="perl.html">Perl</a>, <a href="java.html">Java</a>, <a href="csharp.html">C#</a>, <a href="fortran.html">Fortran</a>, <a href="javascript.html">JavaScript</a>, <a href="jvm.html">JVM</a>, <a href="pic-microcontroller.html">PIC microcontroller</a>, <a href="emacs-editor.html">Emacs</a>, <a href="vim-editor.html">Vim</a>, <a href="opengl.html">OpenGL</a>, <a href="hack.html">Hack</a>, <a href="php.html">PHP</a>, <a href="ios.html">iOS</a>, <a href="android.html">Android</a>, <a href="coq.html">Coq</a>, <a href="wasm.html">WebAssembly</a>, <a href="haskell.html">Haskell</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/ocaml">Improve our OCaml file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://godbolt.org/'>Compiler Explorer</a>:
code
 let square x = x * x
 

exampleCodeHeader Example from <a href='https://riju.codes/ocaml'>Riju</a>:
code
 ;;
 print_string &quot;Hello, world!\n&quot;
 

exampleCodeHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/o/OCaml.ml'>hello-world</a>:
code
 print_string &quot;Hello World\n&quot;

exampleCodeHeader Example from <a href='http://helloworldcollection.de/#OCaml'>the Hello World Collection</a>:
code
 (* Hello World in OCaml *)
 print_string &quot;Hello World!\n&quot;;;

exampleCodeHeader Example from <a href='https://github.com/textmate/ocaml.tmbundle'>Linguist</a>:
code
 (*
  * Copyright (c) 2013 Jeremy Yallop.
  *
  * This file is distributed under the terms of the MIT License.
  * See the file LICENSE for details.
  *)
 let string_of format v =
   let buf = Buffer.create 100 in
   let fmt = Format.formatter_of_buffer buf in begin
     format fmt v;
     Format.pp_print_flush fmt ();
     Buffer.contents buf
   end

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/OCaml'>Wikipedia</a>:
code
 fun x_1 -&gt; (x_1 *
      let y_3 =
          let y_2 = (x_1 * 1)
          in (y_2 * y_2)
      in (y_3 * y_3))



subsection <a href="../lists/keywords.html?filter=ocaml">Keywords</a> in OCaml
paragraph
 as assert begin class constraint do done downto else end exception external false for fun function functor if in include inherit initializer lazy let match method module mutable new object of open private raise rec sig struct then to true try type value val virtual when while with

foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Binary Literals
  FeatureLink ../languages/binary-numbers-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Integers
  FeatureLink ../languages/integers-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Floats
  FeatureLink ../languages/floats-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Hexadecimals
  FeatureLink ../languages/hexadecimals-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Octals
  FeatureLink ../languages/octals-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Conditionals
  FeatureLink ../languages/conditionals-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Functions
  FeatureLink ../languages/functions-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Classes
  FeatureLink ../languages/classes-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature While Loops
  FeatureLink ../languages/while-loops-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Booleans
  FeatureLink ../languages/booleans-feature.html
  Supported ✓
  Example
  Token true false
 row
  Feature Print() Debugging
  FeatureLink ../languages/print-debugging-feature.html
  Supported ✓
  Example
  Token print_string
 row
  Feature MultiLine Comments
  FeatureLink ../languages/multiline-comments-feature.html
  Supported ✓
  Example
   (* A comment
   *)
  Token (* *)
 row
  Feature Module Pattern
  FeatureLink ../languages/module-feature.html
  Supported ✓
  Example
   (* In OCaml, every piece of code is wrapped into a module. *)
   (* amodule.ml *)
   let hello () = print_endline "Hello"
   (* bmodule.ml *)
   Amodule.hello ()
  Token 
 row
  Feature Multiple Inheritance
  FeatureLink ../languages/multiple-inheritance-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   (* This is a single-line comment. *)
   (* This is a
    * multi-line
    * comment.
    *)
  Token 
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ϴ
  Example
  Token 



foldBreak
subsection Books about OCaml on goodreads
pipeTable
 title|titleLink|author|year|reviews|ratings|rating
 Real World OCaml: Functional programming for the masses|https://www.goodreads.com/search?q=Real World OCaml: Functional programming for the masses Yaron Minsky|Yaron Minsky|2013|7|88|4.28
 Unix System Programming in OCaml|https://www.goodreads.com/search?q=Unix System Programming in OCaml Xavier Leroy|Xavier Leroy|1994|0|1|4.00
 Apprendre à programmer avec OCaml|https://www.goodreads.com/search?q=Apprendre à programmer avec OCaml Sylvain Conchon|Sylvain Conchon|2014|0|1|4.00
 Using, Understanding, and Unraveling The OCaml Language: From Practice to Theory and vice versa|https://www.goodreads.com/search?q=Using, Understanding, and Unraveling The OCaml Language: From Practice to Theory and vice versa Didier Rémy|Didier Rémy||0|1|5.00
 Apprendre à programmer avec OCaml: Algorithmes et structures de données (Noire)|https://www.goodreads.com/search?q=Apprendre à programmer avec OCaml: Algorithmes et structures de données (Noire) Jean-Christophe Filliatre|Jean-Christophe Filliatre||0|0|0.0


foldBreak
subsection Books about OCaml from ISBNdb
pipeTable
 title|titleLink|authors|year|publisher
 Concepts and Semantics of Programming Languages 1: A Semantical Approach with OCaml and Python|https://isbndb.com/book/9781786305305|Hardin, The¿re¿se and Jaume, Mathieu and Pessaux, François and Viguie Donzeau-Gouge, Ve¿ronique|2021|Wiley-ISTE
 OCaml Scientific Computing: Functional Programming in Data Science and Artificial Intelligence (Undergraduate Topics in Computer Science)|https://isbndb.com/book/9783030976446|Wang, Liang and Zhao, Jianxin and Mortier, Richard|2022|Springer
 Practical OCaml|https://isbndb.com/book/9781590596203|Smith, Joshua B.|2006|Apress
 Practical OCaml|https://isbndb.com/book/9781430202448|Joshua B. Smith|20080103|Springer Nature
 OCaml Scientific Computing|https://isbndb.com/book/9783030976453|Liang Wang; Jianxin Zhao; Richard Mortier|20220526|Springer Nature
 Ocaml Programming Language Family: Ocaml Software, Objective Caml, Marionnet, Fftw, Mldonkey, Unison, Frama-c, Hol Light, Coq, Geneweb|https://isbndb.com/book/9781158073269|Books Llc and Books and LLC|2010|


foldBreak
subsection Publications about OCaml from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 Using, Understanding, and Unraveling the OCaml Language. From Practice to Theory and Vice Versa|https://www.semanticscholar.org/paper/dbf92034106f3c26488946a043a48c9187bc0821|Didier Rémy|2000|42|2
 Type-safe distributed programming for OCaml|https://www.semanticscholar.org/paper/7a3fe7e9246140a6e07aeb07841a8b052d0784b5|John N. Billings and Peter Sewell and Mark R. Shinwell and Rok Strnisa|2006|25|2
 Typed Embedding of a Relational Language in OCaml|https://www.semanticscholar.org/paper/f11043b0ebaa3923e39d3e1010fd8f87bda5552e|D. Kosarev and D. Boulytchev|2018|14|2
 Retrofitting effect handlers onto OCaml|https://www.semanticscholar.org/paper/fbf84ef1173647b7bdf7f674c8acff9f61180728|K. Sivaramakrishnan and Stephen Dolan and Leo White and T. Kelly and S. Jaffer and A. Madhavapeddy|2021|13|2
 Merlin: a language server for OCaml (experience report)|https://www.semanticscholar.org/paper/83af07fe7334441c22973321127459731403cfa6|Frédéric Bour and Thomas Refis and G. Scherer|2018|12|0
 GOSPEL - Providing OCaml with a Formal Specification Language|https://www.semanticscholar.org/paper/96745e021ccaeb721d1854b7dea4eceb75d71357|A. Charguéraud and J. Filliâtre and C. Lourenço and Mário Pereira|2019|8|0
 GPGPU Composition with OCaml|https://www.semanticscholar.org/paper/3a54d960ab04fddb451800a65b55970a1c2e4382|M. Bourgoin and E. Chailloux|2014|4|0
 Improving Type Error Messages in OCaml|https://www.semanticscholar.org/paper/8d994f1118904a90ede5abefec8c8b8c0ba5ab6e|A. Charguéraud|2015|4|0
 Caml-Shcaml: an ocaml library for unix shell programming|https://www.semanticscholar.org/paper/4ec33572f58d0f2a0411abdc88e483a7bdc9fde7|A. Heller and Jesse A. Tov|2008|4|1
 Chemoinformatics and structural bioinformatics in OCaml|https://www.semanticscholar.org/paper/b10743378eabcbc7d3415e4c43c6dcad192604f2|F. Berenger and Kam Y. J. Zhang and Yoshihiro Yamanishi|2019|4|0
 Retrofitting parallelism onto OCaml|https://www.semanticscholar.org/paper/0202d541aadfe56d9cce09c1c5c609098778b908|K. Sivaramakrishnan and Stephen Dolan and Leo White and S. Jaffer and T. Kelly and Anmol Sahoo and S. Parimala and Atul Dhiman and A. Madhavapeddy|2020|4|1
 WCET of OCaml Bytecode on Microcontrollers: An Automated Method and Its Formalisation|https://www.semanticscholar.org/paper/8b3c59637fb8f5c4d181125aa03b9fe48792a4c8|S. Varoumas and T. Crolard|2019|2|0
 Using camlp4 for presenting dynamic mathematics on the web: DynaMoW, an OCaml language extension for the run-time generation of mathematical contents and their presentation on the web|https://www.semanticscholar.org/paper/2fbcc662edca887550e0ce0463695b3ecfcf0381|F. Chyzak and Alexis Darrasse|2011|1|0
 Cameleer: a Deductive Verification Tool for OCaml|https://www.semanticscholar.org/paper/00ba0130dc4666ce2b3aa584dbf32ec325cbd0ba|Mário Pereira and A. Ravara|2021|1|0






keyboardNav eiffel.html modula-3.html
