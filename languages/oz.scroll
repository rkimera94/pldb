title Oz

import settings.scroll
htmlTitle Oz - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/oz.pldb

paragraph
 Oz is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=1991">1991</a> by <a href="../lists/creators.html#Gert_Smolka">Gert Smolka</a>.

kpiTable
 #128 <span title="TotalRank: 373 Jobs: 101 Users: 625 Facts: 97 Links: 175">on PLDB</span>
 31 Years Old
 661 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging Oz">Books</span>
 22 <span title="Academic publications about or leveraging Oz">Papers</span>
 371 <span title="Oz repos on GitHub.">Repos</span>

paragraph
 Try now: <a href="https://riju.codes/oz">Riju</a>





paragraph
 Oz is a multiparadigm programming language, developed in the Programming Systems Lab at Université catholique de Louvain, for programming language education. It has a canonical textbook: Concepts, Techniques, and Models of Computer Programming. Oz was first designed by Gert Smolka and his students in 1991. <a href="https://en.wikipedia.org/wiki/Oz_(programming_language)">Read more on Wikipedia...</a>

list
 - the <a href="http://mozart.github.io">Oz website</a>
 - the <a href="https://en.wikipedia.org/wiki/Oz_(programming_language)">Oz Wikipedia page</a>
 - There are at least 371 Oz repos on <a href="https://github.com/search?q=language:Oz">GitHub</a>
 - file extensions for Oz include oz
 - The  Google BigQuery Public Dataset GitHub snapshot shows 70 users using Oz in 72 repos on <a href="https://api.github.com/search/repositories?q=language:Oz">GitHub</a>
 - There are 4 <a href="https://projecteuler.net/language=Oz">Project Euler</a> users using Oz
 - Explore Oz snippets on <a href="http://www.rosettacode.org/wiki/Category:Oz">Rosetta Code</a>
 - Oz is listed on <a href="https://hopl.info/showlanguage.prx?exp=2327">HOPL</a>
 - Oz appears in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
 - There is a <a href="codemirror.html">CodeMirror</a> <a href="https://github.com/codemirror/codemirror5/tree/master/mode/oz">package</a> for syntax highlighting Oz
 - GitHub supports <a href="https://github.com/eregon/oz-tmbundle" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Oz
 - Indeed.com has 0 matches for <a href="https://www.indeed.com/jobs?q=oz engineer">"oz engineer"</a>.
 - See also: (11 related languages)<a href="erlang.html">Erlang</a>, <a href="lisp.html">Lisp</a>, <a href="prolog.html">Prolog</a>, <a href="alice.html">Alice</a>, <a href="scala.html">Scala</a>, <a href="unix.html">Unix</a>, <a href="freebsd.html">FreeBSD</a>, <a href="linux.html">Linux</a>, <a href="curry.html">Curry</a>, <a href="mercury.html">Mercury</a>, <a href="visual-prolog.html">Visual Prolog</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/oz">Improve our Oz file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://riju.codes/oz'>Riju</a>:
code
 functor
 import
     Application
     System
 define
     {System.showInfo &#39;Hello, world!&#39;}
     {Application.exit 0}
 end

exampleCodeHeader Example from <a href='http://helloworldcollection.de/#Oz'>the Hello World Collection</a>:
code
 % Hello World in Oz
 
 functor
 import
   System
   Application
 define
   {System.showInfo &quot;Hello World!&quot;}
   {Application.exit 0}
 end

exampleCodeHeader Example from <a href='https://github.com/eregon/oz-tmbundle'>Linguist</a>:
code
 % You can get a lot of information about Oz by following theses links  :
 % - http://mozart.github.io/
 % - http://en.wikipedia.org/wiki/Oz_(programming_language)
 % There is also a well known book that uses Oz for pedagogical reason :
 % - http://mitpress.mit.edu/books/concepts-techniques-and-models-computer-programming
 % And there are two courses on edX about &#39;Paradigms of Computer Programming&#39; that also uses Oz for pedagogical reason :
 % - https://www.edx.org/node/2751#.VHijtfl5OSo
 % - https://www.edx.org/node/4436#.VHijzfl5OSo
 %
 % Here is an example of some code written with Oz.
 
 declare
 % Computes the sum of square of the N first integers.
 fun {Sum N}
   local SumAux in
     fun {SumAux N Acc}
       if N==0 then Acc
       else
         {Sum N-1 Acc}
       end
     end
     {SumAux N 0}
   end
 end
 
 % Returns true if N is a prime and false otherwize
 fun {Prime N}
   local PrimeAcc in
     fun {PrimeAcc N Acc}
 	    if(N == 1) then false
 	    elseif(Acc == 1) then true
 	    else
 	      if (N mod Acc) == 0 then false
 	      else
 	       {PrimeAcc N Acc-1}
 	      end
 	   end
     end
   {PrimeAcc N (N div 2)}
   end
 end
 
 % Reverse a list using cells and for loop (instead of recursivity)
 fun {Reverse L}
   local RevList in
     RevList = {NewCell nil}
     for E in L do
       RevList := E|@RevList
     end
     @RevList
   end
 end
 

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/Oz_(programming_language)'>Wikipedia</a>:
code
 class Counter
    attr val
    meth init(Value)
       val:=Value
    end
    meth browse
       {Browse @val}
    end
    meth inc(Value)
       val :=@val+Value
    end
 end
 
 local C in
    C = {New Counter init(0)}
    {C inc(6)}
    {C browse}
 end





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Booleans
  FeatureLink ../languages/booleans-feature.html
  Supported ✓
  Example
  Token true false
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   % A comment
  Token %
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 







foldBreak
subsection Publications about Oz from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 The Oz Programming Model|https://www.semanticscholar.org/paper/a0ae020a14de2b76598b81f8c2556cc0a3f7cc22|G. Smolka|1996|344|15
 Mobile objects in distributed Oz|https://www.semanticscholar.org/paper/39864a975b5e91de623665e080337f066e9c6f77|P. V. Roy and Seif Haridi and P. Brand and G. Smolka and Michael Mehl and R. Scheidhauer|1997|116|4
 Object-Oriented Concurrent Constraint Programming in Oz|https://www.semanticscholar.org/paper/4b0b130602cca2044e027669c3e388b55cf50206|G. Smolka and M. Henz and J. Würtz|1993|111|0
 Encapsulated Search and Constraint Programming in Oz|https://www.semanticscholar.org/paper/0f7e0b3ab153c5fd5796321eb29eae65d49932b0|Christian Schulte and G. Smolka and J. Würtz|1994|68|0
 Using Oz for College Timetabling|https://www.semanticscholar.org/paper/17ecb640560df069fcfb43a79f11f0d5863f278c|M. Henz and J. Würtz|1995|65|1
 The Definition of Kernel Oz|https://www.semanticscholar.org/paper/c67f30469ee981f91d7d65f0396de0534d34402f|G. Smolka|1994|57|2
 Logic programming in the context of multiparadigm programming: the Oz experience|https://www.semanticscholar.org/paper/59de7c9bfad41d5a4b9372bbbdb20252235ca598|P. V. Roy and P. Brand and D. Duchier and Seif Haridi and M. Henz and Christian Schulte|2002|55|2
 An overview of the design of Distributed Oz|https://www.semanticscholar.org/paper/628f81e7ea25a065a23d55dfa86aee641a18bb5e|Seif Haridi and P. V. Roy and G. Smolka|1997|54|1
 Logic Programming in Oz with Mozart|https://www.semanticscholar.org/paper/d04967af2209e726a502d63365f4accbfe16a56e|P. V. Roy|1999|22|1
 Virtual reality programming in Oz|https://www.semanticscholar.org/paper/e2a71cf789d9a7f33a36dce3d43d6009585a482b|Tomas Axling and Seif Haridi and L. Fahlén|1996|22|2
 Objects in Oz|https://www.semanticscholar.org/paper/30077a00fcbcae9e8c88ca85b8f5489f1c82b1bd|M. Henz|1997|16|2
 Strasheela: Design and Usage of a Music Composition Environment Based on the Oz Programming Model|https://www.semanticscholar.org/paper/3fb32d3ef26e56cd4091fb6702c459b2cd20f5ef|Torsten Anders and C. Anagnostopoulou and Michael Alcorn|2004|13|0
 Lösen kombinatorischer Probleme mit Constraintprogrammierung in Oz|https://www.semanticscholar.org/paper/2ac5f93874908107a52398cc928417df4e221e3b|Jörg Würtz|1998|10|0
 Constraint-Based Scheduling in Oz|https://www.semanticscholar.org/paper/bfffc8e419b9c05b7999561dedd81f68f21a95a5|J. Würtz|1997|8|0
 Constraint Programming in Oz|https://www.semanticscholar.org/paper/9733a192994b32c1ca5af41f1f49368201e28977|Tobias Müller and K. Popov and Christian Schulte and J. Würtz|1994|8|0
 The CURRENT Platform: Building Conversational Agents in Oz|https://www.semanticscholar.org/paper/477e934569677d22b16a053575ce8d944df86b64|T. Lager and Fredrik Kronlid|2004|7|0
 The Development of Oz and Mozart|https://www.semanticscholar.org/paper/f85fc3cdf9a8e32a383312d666c6f59a51ceb0f0|G. Smolka|2004|6|0
 The Oz Programming Model (Extended Abstract)|https://www.semanticscholar.org/paper/20ee7067494999a4c05678b0305abbdbc808e283|G. Smolka|1995|5|0
 A Program Verification System Based on Oz|https://www.semanticscholar.org/paper/9e17663abf4679c2fc0b7fa361fed7fe133cabd8|Isabelle Dony and B. L. Charlier|2004|3|0
 A history of the Oz multiparadigm language|https://www.semanticscholar.org/paper/f7286d7f80225f0386ff7f5e1ceedaeaece12130|P. V. Roy and Seif Haridi and C. Schulte and G. Smolka|2020|3|0
 The Oz Programming Language and System (Abstract)|https://www.semanticscholar.org/paper/c5d091b371a17b9dfa749dfde3afe2091329f85a|G. Smolka|1996|3|0
 Compiling Formal Specifications to Oz Programs|https://www.semanticscholar.org/paper/7804cf5eb823a0acb992a37c7dc5f5f528bc2f30|Tim Wahls|2004|2|0






keyboardNav applescript.html tex.html
