title Pig Latin

import settings.scroll
htmlTitle Pig Latin - Query language

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/pig.pldb

paragraph
 Pig Latin is a <a href="../lists/languages.html?filter=queryLanguage">query language</a> created in <a href="../lists/languages.html?filter=2008">2008</a>.

kpiTable
 #344 <span title="TotalRank: 744 Jobs: 62 Users: 431 Facts: 251 Links: 665">on PLDB</span>
 14 Years Old
 1.3k <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging Pig Latin">Books</span>
 0 <span title="Academic publications about or leveraging Pig Latin">Papers</span>
 1k <span title="Pig Latin repos on GitHub.">Repos</span>







paragraph
 Apache Pig is a high-level platform for creating programs that run on Apache Hadoop. The language for this platform is called Pig Latin.  Pig can execute its Hadoop jobs in MapReduce, Apache Tez, or Apache Spark. <a href="https://en.wikipedia.org/wiki/Apache_Pig">Read more on Wikipedia...</a>

list
 - the <a href="https://pig.apache.org/">Pig Latin website</a>
 - the <a href="https://en.wikipedia.org/wiki/Apache_Pig">Pig Latin Wikipedia page</a>
 - There are at least 1,347 Pig Latin repos on <a href="https://github.com/search?q=language:PigLatin">GitHub</a>
 - Pig Latin first developed in <a href="../lists/originCommunities.html#Apache">Apache</a>
 - file extensions for Pig Latin include pig
 - The  Google BigQuery Public Dataset GitHub snapshot shows 535 users using Pig Latin in 606 repos on <a href="https://api.github.com/search/repositories?q=language:PigLatin">GitHub</a>
 - There is a <a href="codemirror.html">CodeMirror</a> <a href="https://github.com/codemirror/codemirror5/tree/master/mode/pig">package</a> for syntax highlighting Pig Latin
 - <a href="languages/pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/jvm.py">syntax highlighting</a> for Pig Latin
 - GitHub supports <a href="https://github.com/goblindegook/sublime-text-pig-latin" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Pig Latin
 - See also: <a href="linux.html">Linux</a>, <a href="java.html">Java</a>, <a href="sql.html">SQL</a>, <a href="python.html">Python</a>, <a href="javascript.html">JavaScript</a>, <a href="ruby.html">Ruby</a>, <a href="groovy.html">Groovy</a>, <a href="sawzall.html">Sawzall</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/pig">Improve our Pig Latin file</a>

html
 <br>

exampleCodeHeader Example from the web:
code
 input_lines = LOAD &#39;/tmp/word.txt&#39; AS (line:chararray);
 words = FOREACH input_lines GENERATE FLATTEN(TOKENIZE(line)) AS word;
 filtered_words = FILTER words BY word MATCHES &#39;\\w+&#39;;
 word_groups = GROUP filtered_words BY word;
 word_count = FOREACH word_groups GENERATE COUNT(filtered_words) AS count, group AS word;
 ordered_word_count = ORDER word_count BY count DESC;
 STORE ordered_word_count INTO &#39;/tmp/results.txt&#39;;

exampleCodeHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/p/Pig.pig'>hello-world</a>:
code
 Hello WorldPIGHello World
 

exampleCodeHeader Example from <a href='https://github.com/goblindegook/sublime-text-pig-latin'>Linguist</a>:
code
 /**
  * sample.pig
  */
 
 REGISTER $SOME_JAR;
 
 A = LOAD &#39;person&#39; USING PigStorage() AS (name:chararray, age:int); -- Load person
 B = FOREACH A generate name;
 DUMP B;
 
 

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/Apache_Pig'>Wikipedia</a>:
code
 input_lines = LOAD &#39;/tmp/my-copy-of-all-pages-on-internet&#39; AS (line:chararray);
  
  -- Extract words from each line and put them into a pig bag
  -- datatype, then flatten the bag to get one word on each row
  words = FOREACH input_lines GENERATE FLATTEN(TOKENIZE(line)) AS word;
  
  -- filter out any words that are just white spaces
  filtered_words = FILTER words BY word MATCHES &#39;\\w+&#39;;
  
  -- create a group for each word
  word_groups = GROUP filtered_words BY word;
  
  -- count the entries in each group
  word_count = FOREACH word_groups GENERATE COUNT(filtered_words) AS count, group AS word;
  
  -- order the records by count
  ordered_word_count = ORDER word_count BY count DESC;
  STORE ordered_word_count INTO &#39;/tmp/number-of-words-on-internet&#39;;





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Integers
  FeatureLink ../languages/integers-feature.html
  Supported ✓
  Example
   -- [0-9]+L?
  Token 
 row
  Feature Floats
  FeatureLink ../languages/floats-feature.html
  Supported ✓
  Example
   -- [0-9]*\.[0-9]+(e[0-9]+)?[fd]?
  Token 
 row
  Feature Hexadecimals
  FeatureLink ../languages/hexadecimals-feature.html
  Supported ✓
  Example
   -- 0x[0-9a-f]+
  Token 
 row
  Feature MultiLine Comments
  FeatureLink ../languages/multiline-comments-feature.html
  Supported ✓
  Example
   /* A comment
   */
  Token /* */
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   -- A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   -- A comment
  Token --
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 













keyboardNav befunge.html jython.html
