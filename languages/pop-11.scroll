title Pop-11

import settings.scroll
htmlTitle Pop-11 - Programming language

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/pop-11.pldb

* Pop-11 is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 1999.
 link ../lists/languages.html?filter=1999 1999

 

kpiTable
 #673 <span title="TotalRank: 1229 Jobs: 102 Users: 1365 Facts: 893 Links: 234">on PLDB</span>
 23 Years Old
 110 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging Pop-11">Books</span>
 0 <span title="Academic publications about or leveraging Pop-11">Papers</span>

* POP-11 is a reflective, incrementally compiled programming language with many of the features of an interpreted language. It is the core language of the Poplog programming environment developed originally by the University of Sussex, and recently in the School of Computer Science at the University of Birmingham which hosts the Poplog website. POP-11 is an evolution of the language POP-2, developed in Edinburgh University and features an open stack model (like Forth, among others). <a href="https://en.wikipedia.org/wiki/POP-11">Read more on Wikipedia...</a>

- the <a href="https://en.wikipedia.org/wiki/POP-11">Pop-11 Wikipedia page</a>
- Pop-11 is listed on <a href="https://hopl.info/showlanguage.prx?exp=689">HOPL</a>
- See also: (7 related languages)<a href="poplog.html">POPLOG</a>, <a href="pop-2.html">POP-2</a>, <a href="forth.html">Forth</a>, <a href="prolog.html">Prolog</a>, <a href="common-lisp.html">Common Lisp</a>, <a href="standard-ml.html">Standard ML</a>, <a href="cowsel.html">COWSEL</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://build.pldb.com/edit/pop-11">Improve our Pop-11 file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/POP-11'>Wikipedia</a>:
code
 define RemoveElementsMatching(Element, Source) -&gt; Result;
      lvars Index;
      [[%
      for Index in Source do
          unless Index = Element or Index matches Element then
              Index;
          endunless;
      endfor;
      %]] -&gt; Result;
  enddefine;
 
  RemoveElementsMatching(&quot;the&quot;, [[the cat sat on the mat]]) =&gt; ;;; outputs [[cat sat on mat]]
  RemoveElementsMatching(&quot;the&quot;, [[the cat] [sat on] the mat]) =&gt; ;;; outputs [[the cat] [sat on] mat]
  RemoveElementsMatching([[= cat]], [[the cat]] is a [[big cat]]) =&gt; ;;; outputs [[is a]]

foldBreak
## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Multiple Inheritance
  FeatureLink ../languages/multiple-inheritance-feature.html
  Supported ✓
  Example
  Token 

keyboardNav maskjs.html pic.html
