title QB64

import settings.scroll
htmlTitle QB64 - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/qb64.pldb

paragraph
 QB64 is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=2007">2007</a>.

kpiTable
 #513 <span title="TotalRank: 1059 Jobs: 101 Users: 740 Facts: 687 Links: 271">on PLDB</span>
 15 Years Old
 470 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging QB64">Books</span>
 0 <span title="Academic publications about or leveraging QB64">Papers</span>







paragraph
 QB64 (originally QB32) is a self-hosting BASIC compiler for Microsoft Windows, Linux and Mac OS X, designed to be compatible with Microsoft QBasic and QuickBASIC. QB64 is a C++ emitter, which is integrated with a C++ compiler to provide compilation via C++ code and GCC optimization.QB64 implements most QBasic statements, and can run many QBasic programs, including Microsoft's QBasic Gorillas and Nibbles games. Furthermore, QB64 has been designed to contain an IDE resembling the QBASIC IDE. <a href="https://en.wikipedia.org/wiki/QB64">Read more on Wikipedia...</a>

list
 - the <a href="https://en.wikipedia.org/wiki/QB64">QB64 Wikipedia page</a>
 - See also: (4 related languages)<a href="linux.html">Linux</a>, <a href="quickbasic.html">QuickBASIC</a>, <a href="basic.html">BASIC</a>, <a href="qbasic.html">QBasic</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/qb64">Improve our QB64 file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/QB64'>Wikipedia</a>:
code
 t1 = _FREETIMER
 t2 = _FREETIMER
 ON TIMER(t1, 1) GOSUB Timer.Trap &#39;the code following the Timer.Trap label will be run every 1 second
 
 ON TIMER(t2, .5) mySub &#39;QB64 can also trigger a SUB procedure with TIMER;
 &#39;                       in this case mySUB will be triggered every 500 milliseconds
 
 &#39;activate timers:
 TIMER(t1) ON
 TIMER(t2) ON
 
 DO &#39;go into an infinite loop until the window is closed
     _LIMIT 1 &#39;run the main loop at 1 cycle per second, to show how timers are independent from main program flow
 LOOP
 
 Timer.Trap:
 PRINT &quot;1s; &quot;;
 RETURN
 
 SUB mySub
     PRINT &quot;500ms; &quot;;
 END SUB





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   ' A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   ' A comment
  Token '
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 













keyboardNav cfml.html slope.html
