title Refal

import settings.scroll
htmlTitle Refal - Programming language

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/refal.pldb

* Refal is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 1968 by Valentin Turchin.
 link ../lists/languages.html?filter=1968 1968
 link ../lists/creators.html#Valentin_Turchin Valentin Turchin
 

kpiTable
 #757 <span title="TotalRank: 1307 Jobs: 102 Users: 1416 Facts: 540 Links: 665">on PLDB</span>
 54 Years Old
 101 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging Refal">Books</span>
 0 <span title="Academic publications about or leveraging Refal">Papers</span>

* Refal (Recursive functions algorithmic language) "is functional programming language oriented toward symbol manipulation", including "string processing, translation, [and] artificial intelligence". It is one of the oldest members of this family, first conceived in 1966 as a theoretical tool with the first implementation appearing in 1968. Refal was intended to combine mathematical simplicity with practicality for writing large and sophisticated programs. <a href="https://en.wikipedia.org/wiki/Refal">Read more on Wikipedia...</a>

- the <a href="http://www.refal.net">Refal website</a>
- the <a href="https://en.wikipedia.org/wiki/Refal">Refal Wikipedia page</a>
- Explore Refal snippets on <a href="http://www.rosettacode.org/wiki/Category:Refal">Rosetta Code</a>
- Refal is listed on <a href="https://hopl.info/showlanguage.prx?exp=595">HOPL</a>
- <a href="http://www.refal.net">refal.net</a> was registered in 1999
- See also: (2 related languages)<a href="prolog.html">Prolog</a>, <a href="lisp.html">Lisp</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://build.pldb.com/edit/refal">Improve our Refal file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/r/Refal.ref'>hello-world</a>:
code
 $ENTRY Go { = &lt;Hello&gt;;}
 Hello {
    = &lt;Prout &#39;Hello World&#39;&gt;;
 }

exampleCodeHeader Example from <a href='http://helloworldcollection.de/#Refal'>the Hello World Collection</a>:
code
 * Hello world in Refal
 
 $ENTRY Go { = &lt;Hello&gt;;}
 Hello {
    = &lt;Prout &#39;Hello world&#39;&gt;;
 }

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/Refal'>Wikipedia</a>:
code
 Squeeze {
     &#39;__&#39;e.1 = &lt;Squeeze &#39;_&#39;e.1&gt;;
     s.A e.1 = s.A &lt;Squeeze e.1&gt;;
     = ; };

foldBreak
## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Strings
  FeatureLink ../languages/strings-feature.html
  Supported ✓
  Example
   'Hello world'
  Token '
 row
  Feature Print() Debugging
  FeatureLink ../languages/print-debugging-feature.html
  Supported ✓
  Example
  Token <Prout
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   * A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   * A comment
  Token *
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 

keyboardNav umple.html svgbob.html
