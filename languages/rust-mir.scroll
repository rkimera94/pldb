title Rust MIR

import settings.scroll
htmlTitle Rust MIR - Ir

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/rust-mir.pldb

paragraph
 Rust MIR, aka Rust Mid-level Intermediate Representation, is an <a href="../lists/languages.html?filter=ir">ir</a> created in <a href="../lists/languages.html?filter=2016">2016</a>.

kpiTable
 #165 <span title="TotalRank: 459 Jobs: 101 Users: 32 Facts: 326 Links: 665">on PLDB</span>
 6 Years Old
 96.5k <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging Rust MIR">Books</span>
 0 <span title="Academic publications about or leveraging Rust MIR">Papers</span>

paragraph
 Try now: <a href="https://play.rust-lang.org/">Web</a>





paragraph
 Empowering everyone to build reliable and efficient software.

list
 - the <a href="https://www.rust-lang.org">Rust MIR website</a>
 - Rust MIR is developed on <a href="https://github.com/rust-lang/rust/tree/master/src/librustc_mir">GitHub</a> and has 68,300 stars
 - the <a href="https://blog.rust-lang.org/2016/04/19/MIR.html">Rust MIR docs</a>
 - Rust MIR compiles to <a href="llvmir.html">LLVM IR</a>
 - <a href="https://www.rust-lang.org">rust-lang.org</a> was registered in 2010
 - See also: (1 related languages)<a href="swift-il.html">SIL</a>
 - Read more about Rust MIR on the web: <a href="https://rustc-dev-guide.rust-lang.org/hir.html">1</a>,<a href="https://blog.rust-lang.org/2016/04/19/MIR.html">2</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/rust-mir">Improve our Rust MIR file</a>

html
 <br>

exampleCodeHeader Example from the web:
code
 // WARNING: This output format is intended for human consumers only
 // and is subject to change without notice. Knock yourself out.
 fn main() -&gt; () {
     let mut _0: ();                      // return place in scope 0 at src/main.rs:1:11: 1:11
     let mut _1: std::vec::Vec&lt;i32&gt;;      // in scope 0 at src/main.rs:2:9: 2:16
     let _2: ();                          // in scope 0 at src/main.rs:3:5: 3:16
     let mut _3: &amp;mut std::vec::Vec&lt;i32&gt;; // in scope 0 at src/main.rs:3:5: 3:16
     let _4: ();                          // in scope 0 at src/main.rs:4:5: 4:16
     let mut _5: &amp;mut std::vec::Vec&lt;i32&gt;; // in scope 0 at src/main.rs:4:5: 4:16
     scope 1 {
         debug vec =&gt; _1;                 // in scope 1 at src/main.rs:2:9: 2:16
     }
 
     bb0: {
         _1 = Vec::&lt;i32&gt;::new() -&gt; bb1;   // scope 0 at src/main.rs:2:19: 2:29
                                          // mir::Constant
                                          // + span: src/main.rs:2:19: 2:27
                                          // + user_ty: UserType(0)
                                          // + literal: Const { ty: fn() -&gt; Vec&lt;i32&gt; {Vec::&lt;i32&gt;::new}, val: Value(Scalar(&lt;ZST&gt;)) }
     }
 
     bb1: {
         _3 = &amp;mut _1;                    // scope 1 at src/main.rs:3:5: 3:16
         _2 = Vec::&lt;i32&gt;::push(move _3, const 1_i32) -&gt; [return: bb2, unwind: bb5]; // scope 1 at src/main.rs:3:5: 3:16
                                          // mir::Constant
                                          // + span: src/main.rs:3:9: 3:13
                                          // + literal: Const { ty: for&lt;&#39;r&gt; fn(&amp;&#39;r mut Vec&lt;i32&gt;, i32) {Vec::&lt;i32&gt;::push}, val: Value( Scalar(&lt;ZST&gt;)) }
     }
 
     bb2: {
         _5 = &amp;mut _1;                    // scope 1 at src/main.rs:4:5: 4:16
         _4 = Vec::&lt;i32&gt;::push(move _5, const 2_i32) -&gt; [return: bb3, unwind: bb5]; // scope 1 at src/main.rs:4:5: 4:16
                                          // mir::Constant
                                          // + span: src/main.rs:4:9: 4:13
                                          // + literal: Const { ty: for&lt;&#39;r&gt; fn(&amp;&#39;r mut Vec&lt;i32&gt;, i32) {Vec::&lt;i32&gt;::push}, val: Value( Scalar(&lt;ZST&gt;)) }
     }
 
     bb3: {
         drop(_1) -&gt; bb4;                 // scope 0 at src/main.rs:5:1: 5:2
     }
 
     bb4: {
         return;                          // scope 0 at src/main.rs:5:2: 5:2
     }
 
     bb5 (cleanup): {
         drop(_1) -&gt; bb6;                 // scope 0 at src/main.rs:5:1: 5:2
     }
 
     bb6 (cleanup): {
         resume;                          // scope 0 at src/main.rs:1:1: 5:2
     }
 }





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   // A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   // A comment
  Token //
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 













keyboardNav jinja.html fantom.html
