title S-expressions

import settings.scroll
htmlTitle S-expressions - Data notation

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/s-expressions.pldb

paragraph
 S-expressions is a <a href="../lists/languages.html?filter=dataNotation">data notation</a> created in <a href="../lists/languages.html?filter=1960">1960</a>.

kpiTable
 #221 <span title="TotalRank: 577 Jobs: 101 Users: 394 Facts: 653 Links: 82">on PLDB</span>
 62 Years Old
 1.6k <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging S-expressions">Books</span>
 0 <span title="Academic publications about or leveraging S-expressions">Papers</span>







paragraph
 In computing, s-expressions, sexprs or sexps (for "symbolic expression") are a notation for nested list (tree-structured) data, invented for and popularized by the programming language Lisp, which uses them for source code as well as data. In the usual parenthesized syntax of Lisp, an s-expression is classically defined as an atom, or an expression of the form (x . y) where x and y are s-expressions. <a href="https://en.wikipedia.org/wiki/S-expression">Read more on Wikipedia...</a>

list
 - the <a href="https://en.wikipedia.org/wiki/S-expression">S-expressions Wikipedia page</a>
 - Here is an <a href="antlr.html">ANTLR</a> <a href="https://github.com/antlr/grammars-v4/tree/master/sexpression">grammar</a> for S-expressions
 - See also: (10 related languages)<a href="lisp.html">Lisp</a>, <a href="scheme.html">Scheme</a>, <a href="c.html">C</a>, <a href="common-lisp.html">Common Lisp</a>, <a href="xml.html">XML</a>, <a href="python.html">Python</a>, <a href="islisp.html">ISLISP</a>, <a href="rfc.html">RFC</a>, <a href="i-expressions.html">I-expressions</a>, <a href="bayer-expressions.html">Bayer Expressions</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/s-expressions">Improve our S-expressions file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/S-expression'>Wikipedia</a>:
code
 def parse_sexp(string):
     &quot;&quot;&quot;
     &gt;&gt;&gt; parse_sexp(&quot;(+ 5 (+ 3 5))&quot;)
     [[&#39;+&#39;, &#39;5&#39;, [&#39;+&#39;, &#39;3&#39;, &#39;5&#39;]]]
     
     &quot;&quot;&quot;
     sexp = [[]]
     word = &#39;&#39;
     in_str = False
     for char in string:
         if char is &#39;(&#39; and not in_str:
             sexp.append([])
         elif char is &#39;)&#39; and not in_str:
             if word:
                 sexp[-1].append(word)
                 word = &#39;&#39;
             temp = sexp.pop()
             sexp[-1].append(temp)
         elif char in (&#39; &#39;, &#39;\n&#39;, &#39;\t&#39;) and not in_str:
             if word:
                 sexp[-1].append(word)
                 word = &#39;&#39;
         elif char is &#39;\&quot;&#39;:
             in_str = not in_str
         else:
             word += char
     return sexp[0]



















keyboardNav ceylon.html si.html
