title S3

import settings.scroll
htmlTitle S3 - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/s3.pldb

paragraph
 S3 is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=1986">1986</a>.

kpiTable
 #618 <span title="TotalRank: 1143 Jobs: 69 Users: 1666 Facts: 409 Links: 665">on PLDB</span>
 36 Years Old
 60 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging S3">Books</span>
 0 <span title="Academic publications about or leveraging S3">Papers</span>







paragraph
 S3 is a structured, imperative high-level computer programming language.  It was developed by the UK company International Computers Limited (ICL) for its 2900 Series mainframes. It is a system programming language with syntax influenced by ALGOL 68 but with data types and operators aligned to those offered by the 2900 Series. <a href="https://en.wikipedia.org/wiki/S3_(programming_language)">Read more on Wikipedia...</a>

list
 - the <a href="https://en.wikipedia.org/wiki/S3_(programming_language)">S3 Wikipedia page</a>
 - S3 is listed on <a href="https://hopl.info/showlanguage.prx?exp=2462">HOPL</a>
 - See also: (1 related languages)<a href="algol-68.html">ALGOL 68</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/s3">Improve our S3 file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/S3_(programming_language)'>Wikipedia</a>:
code
 GLOBAL STATIC (&lt;STATUS 5;PSPACE 10001; TEMPLATE&gt;) PROC KERMIT_THE_FROG IS
        ((&lt;LIT &quot;COMMAND&quot;&gt;)             REF()BYTE OPTION,
         (&lt;LIT &quot;&quot;       &gt;)             REF()BYTE VME_FILE,
         (&lt;LIT &quot;&quot;       &gt;)             REF()BYTE REM_FILE,
         (&lt;KEY RESPONSE;DEF N&#39;RESULT&gt;) RESPONSE RESULT):
   
     BEGIN
   
        ()BYTE JSV_NAME := &quot;ASG&quot;;              @ obtain value for ASG_ROUTE bool @
        CTM_JS_READ(JSV_NAME,NIL,NIL,ASG_ROUTE,RC_IGNORED);
        IF RC_IGNORED NE 0 THEN ASG_ROUTE := FALSE FI;
   
        @ verify parameter references (parameter values validated later):        @
        @    OPTION   must be of mode REF () BYTE, may not be ZLR or NIL         @
        @    VME_FILE must be of mode REF () BYTE, may be ZLR, must not be NIL   @
        @    REM_FILE must be of mode REF () BYTE, may be ZLR, must not be NIL   @
   
        UNLESS (VERIFY OPTION AND VALIDR OPTION)
        AND    (VERIFY VME_FILE AND (VALIDR VME_FILE OR NOT(VME_FILE IS NIL)))
        AND    (VERIFY REM_FILE AND (VALIDR REM_FILE OR NOT(REM_FILE IS NIL)))
        THEN                                       @ invalid parameter reference @
           RESULT := 10002 @ ARCH_INACCESSIBLE_PARAMETER @
   
        ELSF                                             @ create resource block @
           CTM_JS_BEGIN(RESULT);
           RESULT &lt;= 0
        THEN                                            @ resource block created @
           LONG LONG WORD KERMIT_RESULT;
           ANY((3)LONG WORD AS_LW,(6) WORD AS_W) PARAMS;
           PARAMS.AS_LW := (BDESC OPTION,BDESC VME_FILE,BDESC REM_FILE);
   
                                                  @ set up program error handler @
           IF  KMT_EH_INFORM_PE_CONTINGENCY(RESULT);
                RESULT &gt; 0
           THEN                                    @ failed to set error handler @
              SKIP
           ELSF CTM_JS_CALL(NIL,PDESC KERMIT_SUPPORT,PARAMS.AS_W,KERMIT_RESULT,
                            RESULT);                           @ create firewall @
                RESULT &lt;= 0
           THEN                         @ either exited normally or via CTM_STOP @
              RESULT := IF (S&#39;S&#39;KERMIT_RESULT) &lt;= 0
                        THEN 0                                 @ ignore warnings @
                        ELSE 52000              @ error return common resultcode @
                        FI
           FI;
   
           CTM_JS_END(RC_IGNORED)                           @ end resource block @
        FI
   
     END





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   @ a comment @
  Token 
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 













keyboardNav ibm-gml.html noms-db.html
