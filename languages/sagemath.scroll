title Sage

import settings.scroll
htmlTitle Sage - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/sagemath.pldb

paragraph
 Sage is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=2005">2005</a>.

kpiTable
 #78 <span title="TotalRank: 225 Jobs: 62 Users: 474 Facts: 74 Links: 89">on PLDB</span>
 17 Years Old
 1.1k <span title="Crude user estimate from a linear model.">Users</span>
 2 <span title="Books about or leveraging Sage">Books</span>
 2 <span title="Academic publications about or leveraging Sage">Papers</span>
 499 <span title="Sage repos on GitHub.">Repos</span>

paragraph
 Try now: <a href="https://riju.codes/sagemath">Riju</a>





paragraph
 SageMath (previously Sage or SAGE, "System for Algebra and Geometry Experimentation") is a mathematical software with features covering many aspects of mathematics, including algebra, combinatorics, numerical mathematics, number theory, and calculus. The first version of SageMath was released on 24 February 2005 as free and open-source software under the terms of the GNU General Public License version 2, with the initial goals of creating an "open source alternative to Magma, Maple, Mathematica, and MATLAB". The originator and leader of the SageMath project, William Stein, is a mathematician at the University of Washington. <a href="https://en.wikipedia.org/wiki/SageMath">Read more on Wikipedia...</a>

list
 - the <a href="http://www.sagemath.org/">Sage website</a>
 - the <a href="https://en.wikipedia.org/wiki/SageMath">Sage Wikipedia page</a>
 - There are at least 499 Sage repos on <a href="https://github.com/search?q=language:Sage">GitHub</a>
 - file extensions for Sage include sage and sagews
 - the Sage team is on <a href="https://twitter.com/sagemath">Twitter</a>
 - The  Google BigQuery Public Dataset GitHub snapshot shows 83 users using Sage in 84 repos on <a href="https://api.github.com/search/repositories?q=language:Sage">GitHub</a>
 - There are 312 <a href="https://projecteuler.net/language=Sage">Project Euler</a> users using Sage
 - GitHub supports <a href="https://github.com/MagicStack/MagicPython" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Sage
 - There is 1 <a href="jupyter-notebook.html">Jupyter</a> <a href="http://www.sagemath.org/">Kernel</a> for Sage
 - <a href="http://www.sagemath.org/">sagemath.org</a> was registered in 2007
 - See also: <a href="python.html">Python</a>, <a href="cython.html">Cython</a>, <a href="linux.html">Linux</a>, <a href="solaris.html">Solaris</a>, <a href="android.html">Android</a>, <a href="ios.html">iOS</a>, <a href="ia-32.html">IA-32</a>, <a href="arm.html">ARM</a>, <a href="sparc.html">SPARC</a>, <a href="maple.html">Maple</a>, <a href="mathematica.html">Mathematica</a>, <a href="matlab.html">MATLAB</a>, <a href="maxima.html">Maxima</a>, <a href="scipy.html">SciPy</a>, <a href="numpy.html">NumPy</a>, <a href="r.html">R</a>, <a href="latex.html">LaTeX</a>, <a href="sql.html">SQL</a>, <a href="fortran.html">Fortran</a>, <a href="c.html">C</a>, <a href="common-lisp.html">Common Lisp</a>, <a href="pari-gp.html">PARI/GP</a>, <a href="sqlite.html">SQLite</a>, <a href="matplotlib.html">Matplotlib</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/sagemath">Improve our Sage file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://riju.codes/sagemath'>Riju</a>:
code
 print(&quot;Hello, world!&quot;)
 

exampleCodeHeader Example from <a href='https://github.com/MagicStack/MagicPython'>Linguist</a>:
code
 # -*- coding: utf-8 -*-
 #
 #   Funciones en Python/Sage para el trabajo con polinomios con una
 #   incógnita (x).
 #
 #   Copyright (C) 2014-2015, David Abián &lt;davidabian [at] davidabian.com&gt;
 #
 #   This program is free software: you can redistribute it and/or modify it
 #   under the terms of the GNU General Public License as published by the Free
 #   Software Foundation, either version 3 of the License, or (at your option)
 #   any later version.
 #
 #   This program is distributed in the hope that it will be useful, but WITHOUT
 #   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 #   FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 #   more details.
 #
 #   You should have received a copy of the GNU General Public License along with
 #   this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.
 
 def pols (grado=-1, K=GF(2), mostrar=False):
     &quot;&quot;&quot;Devuelve la lista de polinomios constantes y no constantes de
     coeficientes mónicos y grado igual o menor que el especificado.
     Si el grado indicado no es válido, devuelve una lista vacía.
     &quot;&quot;&quot;
     lpols = []
     if not grado.is_integer():
         grado = grado.round()
     if grado &gt;= 0:
         var(&#39;x&#39;)
         xs = vector([(x^i) for i in range(grado+1)])
         V = VectorSpace(K,grado+1)
         lpols = [cs*xs for cs in V]
         if mostrar:
             for pol in lpols:
                 print pol
     return lpols
 
 def polsNoCtes (grado=-1, K=GF(2), mostrar=False):
     &quot;&quot;&quot;Devuelve la lista de polinomios no constantes de coeficientes mónicos y
     grado igual o menor que el especificado.
     Si el grado indicado no es válido, devuelve una lista vacía.
     &quot;&quot;&quot;
     lpols = []
     if not grado.is_integer():
         grado = grado.round()
     if grado &gt;= 0:
         var(&#39;x&#39;)
         xs = vector([(x^i) for i in range(grado+1)])
         for cs in K^(grado+1):
             if cs[:grado] != vector(grado*[0]): # no constantes
                 lpols += [cs*xs]
         if mostrar:
             for pol in lpols:
                 print pol
     return lpols
 
 def polsMismoGrado (grado=-1, K=GF(2), mostrar=False):
     &quot;&quot;&quot;Devuelve la lista de polinomios de coeficientes mónicos del grado
     especificado.
     Si el grado indicado no es válido, devuelve una lista vacía.
     &quot;&quot;&quot;
     lpols = []
     if not grado.is_integer():
         grado = grado.round()
     if grado &gt;= 0:
         var(&#39;x&#39;)
         xs = vector([(x^(grado-i)) for i in [0..grado]])
         for cs in K^(grado+1):
             if cs[0] != 0: # polinomios del mismo grado
                 lpols += [cs*xs]
         if mostrar:
             for pol in lpols:
                 print pol
     return lpols
 
 def excluirReducibles (lpols=[], mostrar=False):
     &quot;&quot;&quot;Filtra una lista dada de polinomios de coeficientes mónicos y devuelve
     aquellos irreducibles.
     &quot;&quot;&quot;
     var(&#39;x&#39;)
     irreds = []
     for p in lpols:
         fp = (p.factor_list())
         if len(fp) == 1 and fp[0][1] == 1:
             irreds += [p]
     if mostrar:
         for pol in irreds:
             print pol
     return irreds
 
 def vecPol (vec=random_vector(GF(2),0)):
     &quot;&quot;&quot;Transforma los coeficientes dados en forma de vector en el polinomio
     que representan.
     
     Por ejemplo, con vecPol(vector([1,0,3,1])) se obtiene x³ + 3*x + 1.
     
     Para la función opuesta, véase polVec().
     &quot;&quot;&quot;
     var(&#39;x&#39;)
     xs = vector([x^(len(vec)-1-i) for i in range(len(vec))])
     return vec*xs
 
 def polVec (p=None):
     &quot;&quot;&quot;Devuelve el vector de coeficientes del polinomio dado que acompañan a la
     incógnita x, de mayor a menor grado.
     
     Por ejemplo, con polVec(x^3 + 3*x + 1) se obtiene el vector (1, 0, 3, 1).
     
     Para la función opuesta, véase vecPol().
     &quot;&quot;&quot;
     cs = []
     if p != None:
         var(&#39;x&#39;)
         p(x) = p
         for i in [0..p(x).degree(x)]:
             cs.append(p(x).coefficient(x,i))
         cs = list(reversed(cs))
     return vector(cs)
 
 def completar2 (p=0):
     &quot;&quot;&quot;Aplica el método de completar cuadrados en parábolas al polinomio dado de
     grado 2 y lo devuelve en su nueva forma.
     
     Si el polinomio dado no es válido, devuelve 0.
     
     Por ejemplo, con complCuad(3*x^2 + 12*x + 5) se obtiene 3*(x + 2)^2 - 7.
     &quot;&quot;&quot;
     var(&#39;x&#39;)
     p(x) = p.expand()
     if p(x).degree(x) != 2:
         p(x) = 0
     else:
         cs = polVec(p(x))
         p(x) = cs[0]*(x+(cs[1]/(2*cs[0])))^2+(4*cs[0]*cs[2]-cs[1]^2)/(4*cs[0])
     return p(x)
 

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/SageMath'>Wikipedia</a>:
code
 sage: E2 = EllipticCurve(CC, [0,0,-2,1,1])
 sage: E2
 Elliptic Curve defined by y^2 + (-2.00000000000000)*y = 
          x^3 + 1.00000000000000*x + 1.00000000000000 over 
          Complex Field with 53 bits of precision
 sage: E2.j_invariant()
 61.7142857142857





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   # A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   # A comment
  Token #
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 





foldBreak
subsection Books about Sage from ISBNdb
pipeTable
 title|titleLink|authors|year|publisher
 Sage for Undergraduates|https://isbndb.com/book/9781470411114|Gregory V. Bard|2015|American Mathematical Society
 Numerical Analysis Using Sage (Springer Undergraduate Texts in Mathematics and Technology)|https://isbndb.com/book/9783319167381|Anastassiou, George A. and Mezei, Razvan A.|2015|Springer


foldBreak
subsection Publications about Sage from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 An Introduction to SAGE Programming|https://www.semanticscholar.org/paper/7e49bd271024001874d589cadd75a1288a5b1b56|Razvan A. Mezei|2015|8|2
 Numerical Analysis Using Sage|https://www.semanticscholar.org/paper/0377a3a4f43c1bacbb6c4b95fc03275b1ee5c7ee|G. Anastassiou and Razvan A. Mezei|2015|2|0






keyboardNav uml.html yacc.html
