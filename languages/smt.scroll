title SMT

import settings.scroll
htmlTitle SMT - Programming language

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/smt.pldb

* SMT, aka Satisfiability Modulo Theories, is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 2003.
 link ../lists/languages.html?filter=2003 2003

 

kpiTable
 #862 <span title="TotalRank: 1410 Jobs: 102 Users: 1073 Facts: 355 Links: 953">on PLDB</span>
 19 Years Old
 201 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging SMT">Books</span>
 7 <span title="Academic publications about or leveraging SMT">Papers</span>
 582 <span title="SMT repos on GitHub.">Repos</span>

* Common input and output languages for SMT solvers.

- the <a href="http://smtlib.cs.uiowa.edu/language.shtml">SMT website</a>
- There are at least 582 SMT repos on <a href="https://github.com/search?q=language:SMT">GitHub</a>
- file extensions for SMT include smt2 and smt
- The  Google BigQuery Public Dataset GitHub snapshot shows 130 users using SMT in 149 repos on <a href="https://api.github.com/search/repositories?q=language:SMT">GitHub</a>
- GitHub supports <a href="https://github.com/SRI-CSL/SMT.tmbundle.git" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for SMT
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://build.pldb.com/edit/smt">Improve our SMT file</a>

html
 <br>

exampleCodeHeader Example from the web:
code
 ; Getting assertions
 (set-option :produce-assertions true)
 (set-logic QF_UF)
 (declare-const p Bool) (declare-const q Bool)
 (push 1)
  (assert (or p q))
  (push 1)
   (assert (not q))
   (get-assertions)
   ; ((or p q)
   ;  (not q)
   ; )
  (pop 1)
   (get-assertions)
  ; ((or p q))
  (pop 1)
  (get-assertions)
  ; ()
 (exit)

exampleCodeHeader Example from <a href='https://github.com/SRI-CSL/SMT.tmbundle.git'>Linguist</a>:
code
 (set-logic QF_LIA)
 (set-info :source | SMT-COMP&#39;06 organizers |)
 (set-info :smt-lib-version 2.0)
 (set-info :category &quot;check&quot;)
 (set-info :status unsat)
 (set-info :notes |This benchmark is designed to check if the DP supports bignumbers.|)
 (declare-fun x1 () Int)
 (declare-fun x2 () Int)
 (declare-fun x3 () Int)
 (declare-fun x4 () Int)
 (declare-fun x5 () Int)
 (declare-fun x6 () Int)
 (assert (and (or (&gt;= x1 1000) (&gt;= x1 1002)) 
              (or (&gt;= x2 (* 1230 x1)) (&gt;= x2 (* 1003 x1))) 
 			 (or (&gt;= x3 (* 1310 x2)) (&gt;= x3 (* 1999 x2)))
 			 (or (&gt;= x4 (* 4000 x3)) (&gt;= x4 (* 8000 x3))) 
 			 (or (&lt;= x5 (* (- 4000) x4)) (&lt;= x5 (* (- 8000) x4)))
 			 (or (&gt;= x6 (* (- 3) x5)) (&gt;= x6 (* (- 2) x5))) (&lt; x6 0)))
 (check-sat)
 (exit)

foldBreak
## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   ; A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   ; A comment
  Token ;
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 

foldBreak
## Publications about SMT from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 Scala to the Power of Z3: Integrating SMT and Programming|https://www.semanticscholar.org/paper/4a0eb42ded1878f39539aceca207f55dea2d8fbe|A. Köksal and Viktor Kuncak and Philippe Suter|2011|40|0
 SMT Solving for Functional Programming over Infinite Structures|https://www.semanticscholar.org/paper/cb714bd967b3c358fa09b7a53f22e2263733ab45|Bartek Klin and Michal Szynwelski|2016|19|2
 SMT in Verification, Modeling, and Testing at Microsoft|https://www.semanticscholar.org/paper/7e3016d5a49d83bed334c62de6a077e5f4d35ea9|N. Bjørner|2012|3|0
 Effective Encodings of Constraint Programming Models to SMT|https://www.semanticscholar.org/paper/b8eb4528ac0d6d7a32ebbf18bc4aa30c3cb1f1b1|E. Davidson and Ozgur Akgun and Joan Espasa and P. Nightingale|2020|3|0
 Inter-theory dependency analysis for SMT string solvers|https://www.semanticscholar.org/paper/2e4f01ec5c2aea7a759445024a25c8fc866dfacc|Minh-Thai Trinh and D. Chu and J. Jaffar|2020|2|1
 Using SMT Solver and Logic Puzzles for Teaching Computational Logics in Discrete Mathematics Class|https://www.semanticscholar.org/paper/23be6c89f123ecb7e590aa023618518241bba3e2|Shin Hong|2020|1|0
 Programming Behavioral Test Models for SMT Solving in Scala|https://www.semanticscholar.org/paper/d5130df1d0dffd54c5eba84255ef93804324de92|B. Aichernig and Benedikt Maderbacher and Stefan Tiran|2019|1|0

keyboardNav mvel.html ezhil.html
