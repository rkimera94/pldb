title Spin

import settings.scroll
htmlTitle Spin - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/spin.pldb

paragraph
 Spin is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=2006">2006</a>.

kpiTable
 #564 <span title="TotalRank: 1082 Jobs: 62 Users: 1078 Facts: 70 Links: 950">on PLDB</span>
 16 Years Old
 200 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging Spin">Books</span>
 0 <span title="Academic publications about or leveraging Spin">Papers</span>
 38k <span title="Spin repos on GitHub.">Repos</span>







paragraph
 The multicore Propeller microcontroller opens up a new level of invention possibilities for students. Programming it in its native high-level language, Spin, makes optimal use of this unique and powerful multicore microcontroller. Spin's design was inspired by great attributes of three other languages, Delphi, C, and Python, and by envisioning new solutions to common programming problems. Like Python, Spin uses indentation whitespace, rather than curly braces or keywords, to delimit blocks.

list
 - There are at least 38,264 Spin repos on <a href="https://github.com/search?q=language:Propeller Spin">GitHub</a>
 - file extensions for Spin include spin
 - The  Google BigQuery Public Dataset GitHub snapshot shows 101 users using Spin in 129 repos on <a href="https://api.github.com/search/repositories?q=language:Propeller Spin">GitHub</a>
 - Explore Spin snippets on <a href="http://www.rosettacode.org/wiki/Category:Spin">Rosetta Code</a>
 - GitHub supports <a href="https://github.com/bitbased/sublime-spintools" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Spin
 - Read more about Spin on the web: <a href="https://learn.parallax.com/educators/teach/spin-programming-multicore-propeller">1</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/spin">Improve our Spin file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://github.com/bitbased/sublime-spintools'>Linguist</a>:
code
 ﻿&#39;&#39;****************************************
 &#39;&#39;*  Debug_Lcd v1.2                      *
 &#39;&#39;*  Authors: Jon Williams, Jeff Martin  *
 &#39;&#39;*  Copyright (c) 2006 Parallax, Inc.   *
 &#39;&#39;*  See end of file for terms of use.   *
 &#39;&#39;****************************************
 &#39;&#39;
 &#39;&#39; Debugging wrapper for Serial_Lcd object
 &#39;&#39;
 &#39;&#39; v1.2 - March 26, 2008 - Updated by Jeff Martin to conform to Propeller object initialization standards.
 &#39;&#39; v1.1 - April 29, 2006 - Updated by Jon Williams for consistency.
 &#39;&#39;
 
 
 OBJ
 
   lcd : &quot;serial_lcd&quot;                                    &#39; driver for Parallax Serial LCD
   num : &quot;simple_numbers&quot;                                &#39; number to string conversion
 
 
 PUB init(pin, baud, lines) : okay
 
 &#39;&#39; Initializes serial LCD object
 &#39;&#39; -- returns true if all parameters okay
 
   okay := lcd.init(pin, baud, lines) 
 
 
 PUB finalize
 
 &#39;&#39; Finalizes lcd object -- frees the pin (floats)
 
   lcd.finalize
 
   
 PUB putc(txbyte)
 
 &#39;&#39; Send a byte to the terminal
 
   lcd.putc(txbyte)
   
   
 PUB str(strAddr)
 
 &#39;&#39; Print a zero-terminated string
 
   lcd.str(strAddr)
 
 
 PUB dec(value)
 
 &#39;&#39; Print a signed decimal number
 
   lcd.str(num.dec(value))  
 
 
 PUB decf(value, width) 
 
 &#39;&#39; Prints signed decimal value in space-padded, fixed-width field
 
   lcd.str(num.decf(value, width))   
   
 
 PUB decx(value, digits) 
 
 &#39;&#39; Prints zero-padded, signed-decimal string
 &#39;&#39; -- if value is negative, field width is digits+1
 
   lcd.str(num.decx(value, digits)) 
 
 
 PUB hex(value, digits)
 
 &#39;&#39; Print a hexadecimal number
 
   lcd.str(num.hex(value, digits))
 
 
 PUB ihex(value, digits)
 
 &#39;&#39; Print an indicated hexadecimal number
 
   lcd.str(num.ihex(value, digits))   
 
 
 PUB bin(value, digits)
 
 &#39;&#39; Print a binary number
 
   lcd.str(num.bin(value, digits))
 
 
 PUB ibin(value, digits)
 
 &#39;&#39; Print an indicated (%) binary number
 
   lcd.str(num.ibin(value, digits))     
     
 
 PUB cls
 
 &#39;&#39; Clears LCD and moves cursor to home (0, 0) position
 
   lcd.cls 
 
 
 PUB home
 
 &#39;&#39; Moves cursor to 0, 0
 
   lcd.home
   
 
 PUB gotoxy(col, line)
 
 &#39;&#39; Moves cursor to col/line
 
   lcd.gotoxy(col, line)
 
   
 PUB clrln(line)
 
 &#39;&#39; Clears line
 
   lcd.clrln(line)
 
 
 PUB cursor(type)
 
 &#39;&#39; Selects cursor type
 &#39;&#39;   0 : cursor off, blink off  
 &#39;&#39;   1 : cursor off, blink on   
 &#39;&#39;   2 : cursor on, blink off  
 &#39;&#39;   3 : cursor on, blink on
 
   lcd.cursor(type)
        
 
 PUB display(status)
 
 &#39;&#39; Controls display visibility; use display(false) to hide contents without clearing
 
   if status
     lcd.displayOn
   else
     lcd.displayOff
 
 
 PUB custom(char, chrDataAddr)
 
 &#39;&#39; Installs custom character map
 &#39;&#39; -- chrDataAddr is address of 8-byte character definition array
 
   lcd.custom(char, chrDataAddr)
 
       
 PUB backLight(status)
 
 &#39;&#39; Enable (true) or disable (false) LCD backlight
 &#39;&#39; -- affects only backlit models
 
   lcd.backLight(status)
 
 {{
 
 ┌──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┐
 │                                                   TERMS OF USE: MIT License                                                  │                                                            
 ├──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┤
 │Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation    │ 
 │files (the &quot;Software&quot;), to deal in the Software without restriction, including without limitation the rights to use, copy,    │
 │modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software│
 │is furnished to do so, subject to the following conditions:                                                                   │
 │                                                                                                                              │
 │The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.│
 │                                                                                                                              │
 │THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE          │
 │WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR         │
 │COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,   │
 │ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.                         │
 └──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┘
 }}  





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Booleans
  FeatureLink ../languages/booleans-feature.html
  Supported ✓
  Example
  Token true false
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   ' A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   ' A comment
  Token '
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ✓
  Example
  Token 













keyboardNav thymeleaf.html fay.html
