title spry

import settings.scroll
htmlTitle spry - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/spry.pldb

paragraph
 spry is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=2015">2015</a> by <a href="../lists/creators.html#Göran_Krampe">Göran Krampe</a>.

kpiTable
 #826 <span title="TotalRank: 1335 Jobs: 62 Users: 741 Facts: 532 Links: 950">on PLDB</span>
 7 Years Old
 449 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging spry">Books</span>
 0 <span title="Academic publications about or leveraging spry">Papers</span>







paragraph
 Spry borrows homoiconicity from Rebol and Lisp, free form syntax from Forth and Rebol, the word of different types from Rebol, good data structure literal support from JavaScript and the general coding experience and style from Smalltalk. It also has a few ideas of its own, like an interesting argument passing mechanism and a relatively novel take on OO.

list
 - the <a href="http://sprylang.se/">spry website</a>
 - spry is developed on <a href="https://github.com/gokr/spry">GitHub</a> and has 378 stars
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/spry">Improve our spry file</a>

html
 <br>

exampleCodeHeader Example from the web:
code
 # Let&#39;s add a method to:do: that works as in Smalltalk.
 # Methods take the first argument, the &quot;receiver&quot;, from the left
 # and binds it to &quot;self&quot;.
 to:do: = method [:to :block
   n = self
   [n &lt;= to] whileTrue: [
     do block n
     ..n = (n + 1)]]
 
 # Then we can loop in Smalltalk style echoing 1 to 5!
 1 to: 5 do: [echo :x]
 
 # We can similarly implement select: from Smalltalk
 select: = method [:pred
   result = ([] clone)
   self reset
   [self end?] whileFalse: [
     n = (self next)
     do pred n then: [result add: n]]
   ^result]
 
 # Then use it to produce [3 4]
 echo ([1 2 3 4] select: [:x &gt; 2])

exampleCodeHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/n/Ni.nic'>hello-world</a>:
code
 #48!#65!#6c!#6c!#6f!#20!#57!#6f!#72!#6c!#64!
 





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Booleans
  FeatureLink ../languages/booleans-feature.html
  Supported ✓
  Example
  Token True False
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   # A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   # A comment
  Token #
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 













keyboardNav compiler-compiler.html roku-brightscript.html
