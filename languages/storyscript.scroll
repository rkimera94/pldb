title storyscript

import settings.scroll
htmlTitle storyscript - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/storyscript.pldb

paragraph
 storyscript is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=2017">2017</a>.

kpiTable
 #721 <span title="TotalRank: 1238 Jobs: 69 Users: 783 Facts: 386 Links: 952">on PLDB</span>
 5 Years Old
 404 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging storyscript">Books</span>
 0 <span title="Academic publications about or leveraging storyscript">Papers</span>







paragraph
 Storyscript is a language, editor, database, infra and community all-in-one. Create holistic apps, tools and workflows blazing fast that power your business.

list
 - the <a href="https://storyscript.com/">storyscript website</a>
 - storyscript is developed on <a href="https://github.com/storyscript">GitHub</a> and has 303 stars
 - the storyscript team is on <a href="https://twitter.com/storyscript_">Twitter</a>
 - <a href="https://storyscript.com/">storyscript.com</a> was registered in 2010
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/storyscript">Improve our storyscript file</a>

html
 <br>

exampleCodeHeader Example from the web:
code
 ### 
 Storyscript is a language, editor, database, infra and community all-in-one.
 Create holistic apps, tools and workflows blazing fast that power your business. 
 ###
 
 
 # Pull data from a microservice
 output = service action key:value
 output = team/service action key:value
 # Discover and create services in the Storyscript Hub
 # Call a function
 output = function_name(key:value)
 # A Storyscript function
 # or another programming language
 # Call type methods
 output = variable.mutation(key:value)
 # Event streaming microservice
 when service action event key:value as output
     ... # run this block for every event
 # Types
 string = &quot;Hello&quot;
 integer = 1
 number = 1.3
 bool = true
 list = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]
 map = {&quot;apple&quot;: &quot;red&quot;, &quot;banana&quot;: &quot;yellow&quot;}
 regexp = /^foobar/
 empty = null
 time = 1d35m
 # Destructuring
 { apple, banana } = map
 # apple = &quot;red&quot;, banana = &quot;yellow&quot;
 # Conditions
 if one &gt; 1
     # ...
 else if one == 1
     # ...
 else
     # ...
 # Loops
 foreach list as item
     # ...
 while true
     # ...
 # Functions
 function name input:int returns int
     # ...
     return input
 name(input:1)
 # &gt;&gt;&gt; 1





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   # A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   # A comment
  Token #
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 













keyboardNav plist.html meson.html
