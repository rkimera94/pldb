title SIL

import settings.scroll
htmlTitle SIL - Ir

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/swift-il.pldb

paragraph
 SIL, aka Swift Intermediate Language, is an <a href="../lists/languages.html?filter=ir">ir</a> created in <a href="../lists/languages.html?filter=2012">2012</a>.

kpiTable
 #473 <span title="TotalRank: 996 Jobs: 101 Users: 2330 Facts: 409 Links: 486">on PLDB</span>
 10 Years Old
 0 <span title="Books about or leveraging SIL">Books</span>
 0 <span title="Academic publications about or leveraging SIL">Papers</span>







paragraph
 

list
 - the <a href="https://github.com/apple/swift/blob/master/docs/SIL.rst">SIL website</a>
 - SIL first developed in <a href="../lists/originCommunities.html#Apple">Apple</a>
 - file extensions for SIL include sil
 - See also: (2 related languages)<a href="cir.html">CIR</a>, <a href="llvmir.html">LLVM IR</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/swift-il">Improve our SIL file</a>

html
 <br>

exampleCodeHeader Example from the web:
code
 // SIL is reliant on Swift&#39;s type system and declarations, so SIL syntax is an extension of Swift&#39;s. A .sil file is a Swift source file with added SIL definitions. The Swift source is parsed only for its declarations; Swift func bodies (except for nested declarations) and top-level code are ignored by the SIL parser. In a .sil file, there are no implicit imports; the swift and/or Builtin standard modules must be imported explicitly if used.
 sil_stage canonical
 
 import Swift
 
 // Define types used by the SIL function.
 
 struct Point {
   var x : Double
   var y : Double
 }
 
 class Button {
   func onClick()
   func onMouseDown()
   func onMouseUp()
 }
 
 // Declare a Swift function. The body is ignored by SIL.
 func taxicabNorm(_ a:Point) -&gt; Double {
   return a.x + a.y
 }
 
 // Define a SIL function.
 // The name @_T5norms11taxicabNormfT1aV5norms5Point_Sd is the mangled name
 // of the taxicabNorm Swift function.
 sil @_T5norms11taxicabNormfT1aV5norms5Point_Sd : $(Point) -&gt; Double {
 bb0(%0 : $Point):
   // func Swift.+(Double, Double) -&gt; Double
   %1 = function_ref @_Tsoi1pfTSdSd_Sd
   %2 = struct_extract %0 : $Point, #Point.x
   %3 = struct_extract %0 : $Point, #Point.y
   %4 = apply %1(%2, %3) : $(Double, Double) -&gt; Double
   return %4 : Double
 }
 
 // Define a SIL vtable. This matches dynamically-dispatched method
 // identifiers to their implementations for a known static class type.
 sil_vtable Button {
   #Button.onClick: @_TC5norms6Button7onClickfS0_FT_T_
   #Button.onMouseDown: @_TC5norms6Button11onMouseDownfS0_FT_T_
   #Button.onMouseUp: @_TC5norms6Button9onMouseUpfS0_FT_T_
 }

exampleCodeHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/s/SIL.SIL'>hello-world</a>:
code
 print Hello World
 





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Print() Debugging
  FeatureLink ../languages/print-debugging-feature.html
  Supported ✓
  Example
  Token print
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   // A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   // A comment
  Token //
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 













keyboardNav dynamo-visual-language.html mbasic.html
