title Tcl

import settings.scroll
htmlTitle Tcl - Programming language

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/tcl.pldb

* Tcl, aka Tool Command Language, is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 1988 by John Ousterhout.
 link ../lists/languages.html?filter=1988 1988
 link ../lists/creators.html#John_Ousterhout John Ousterhout
 

kpiTable
 #53 <span title="TotalRank: 197 Jobs: 102 Users: 271 Facts: 61 Links: 34">on PLDB</span>
 34 Years Old
 3.1k <span title="Crude user estimate from a linear model.">Users</span>
 26 <span title="Books about or leveraging Tcl">Books</span>
 2 <span title="Academic publications about or leveraging Tcl">Papers</span>
 14k <span title="Tcl repos on GitHub.">Repos</span>

* Try now: <a href="https://riju.codes/tcl">Riju</a> · <a href="https://tio.run/#tcl">TIO</a>

monacoEditor tcl
 puts {Hello, world!}
 

* Tcl (pronounced "tickle" or tee cee ell, ) is a high-level, general-purpose, interpreted, dynamic programming language. It was designed with the goal of being very simple but powerful. Tcl casts everything into the mold of a command, even programming constructs like variable assignment and procedure definition. <a href="https://en.wikipedia.org/wiki/Tcl">Read more on Wikipedia...</a>

- the <a href="http://www.tcl.tk">Tcl website</a>
- the <a href="https://en.wikipedia.org/wiki/Tcl">Tcl Wikipedia page</a>
- PLDB has 2 documentation sites for Tcl: <a href="https://www.tcl.tk/doc/">www.tcl.tk</a>, <a href="https://devdocs.io/tcl_tk/">devdocs.io</a>
- There are at least 13,969 Tcl repos on <a href="https://github.com/search?q=language:Tcl">GitHub</a>
- file extensions for Tcl include tcl, tbc, adp, tclin, tm and rvt
- The  Google BigQuery Public Dataset GitHub snapshot shows 7k users using Tcl in 8k repos on <a href="https://api.github.com/search/repositories?q=language:Tcl">GitHub</a>
- There are 71 <a href="https://projecteuler.net/language=Tcl">Project Euler</a> users using Tcl
- Explore Tcl snippets on <a href="http://www.rosettacode.org/wiki/Category:Tcl">Rosetta Code</a>
- Tcl appears in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
- There is an <a href="https://packages.ubuntu.com/jammy/tcl">Ubuntu package</a> for Tcl
- There is a <a href="codemirror.html">CodeMirror</a> <a href="https://github.com/codemirror/codemirror5/tree/master/mode/tcl">package</a> for syntax highlighting Tcl
- There is a <a href="monaco.html">Monaco</a> <a href="https://github.com/microsoft/monaco-editor/tree/main/src/basic-languages/tcl">package</a> for syntax highlighting Tcl
- <a href="languages/pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/tcl.py">syntax highlighting</a> for Tcl
- GitHub supports <a href="https://github.com/textmate/tcl.tmbundle" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Tcl
- Tcl appears in the <a href="https://github.com/mame/quine-relay">Quine Relay</a> project
- There is 1 <a href="jupyter-notebook.html">Jupyter</a> <a href="https://github.com/rpep/tcl_kernel">Kernel</a> for Tcl
- Release Notes for Tcl<a href="http://www.tcl.tk/software/tcltk/relnotes/index.tml?sc_format=wider">(Link)</a>
- Official Blog page for Tcl<a href="https://www.tcl.tk/software/tcltk/whatsnew.tml">(Link)</a>
- See also: (22 related languages)<a href="awk.html">awk</a>, <a href="lisp.html">Lisp</a>, <a href="php.html">PHP</a>, <a href="tea.html">Tea</a>, <a href="powershell.html">PowerShell</a>, <a href="c.html">C</a>, <a href="python.html">Python</a>, <a href="expect.html">Expect</a>, <a href="unicode.html">Unicode</a>, <a href="regex.html">Regular Expressions</a>, <a href="java.html">Java</a>, <a href="unix.html">Unix</a>, <a href="linux.html">Linux</a>, <a href="bourne-shell.html">Bourne shell</a>, <a href="xotcl.html">XOTcl</a>, <a href="snit.html">Snit</a>, <a href="verilog.html">Verilog</a>, <a href="vhdl.html">VHDL</a>, <a href="udp.html">UDP</a>, <a href="mysql.html">MySQL</a>, <a href="postgresql.html">PostgreSQL</a>, <a href="sqlite.html">SQLite</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://build.pldb.com/edit/tcl">Improve our Tcl file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://riju.codes/tcl'>Riju</a>:
code
 puts {Hello, world!}
 

exampleCodeHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/t/Tcl.tcl'>hello-world</a>:
code
 puts &quot;Hello World&quot;

exampleCodeHeader Example from <a href='http://helloworldcollection.de/#Tool'>the Hello World Collection</a>:
code
 #!/usr/local/bin/tclsh
 # Hello World in Tcl
 
 puts &quot;Hello World!&quot;
 

exampleCodeHeader Example from <a href='https://github.com/textmate/tcl.tmbundle'>Linguist</a>:
code
 # XDG Base Directory Specification handling
 #
 # Copyright (C) 2013 Lawrence Woodman
 #
 # Licensed under an MIT licence.  Please see LICENCE.md for details.
 #
 # For XDG Base Directory Specification
 #   http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html
 #
 package require Tcl 8.5
 
 namespace eval XDG {
   variable DEFAULTS &quot;&quot;
   namespace export DATA_HOME CONFIG_HOME CACHE_HOME
   namespace export RUNTIME_DIR DATA_DIRS CONFIG_DIRS
 }
 
 proc XDG::SetDefaults {} {
   variable DEFAULTS
   if {$DEFAULTS ne &quot;&quot;} return
   set DEFAULTS [list \
     DATA_HOME   [file join $::env(HOME) .local share] \
     CONFIG_HOME [file join $::env(HOME) .config] \
     CACHE_HOME  [file join $::env(HOME) .cache] \
     DATA_DIRS   [list [file join /usr local share] [file join /usr share]] \
     CONFIG_DIRS [list [file join /etc xdg ]]
   ]
 }
 
 proc XDG::XDGVarSet {var} {
   expr {[info exists ::env(XDG_$var)] &amp;&amp; $::env(XDG_$var) ne &quot;&quot;}
 }
 
 proc XDG::Dir {var {subdir &quot;&quot;} } {
   variable DEFAULTS
   SetDefaults
   set dir [dict get $DEFAULTS $var]
 
   if {[XDGVarSet $var]} {
     set dir $::env(XDG_$var)
   }
 
   return [file join $dir $subdir]
 }
 
 proc XDG::Dirs {var {subdir &quot;&quot;} } {
   variable DEFAULTS
   SetDefaults
   set rawDirs [dict get $DEFAULTS $var]
 
   if {[XDGVarSet $var]} {
     set rawDirs [split $::env(XDG_$var) &quot;:&quot;]
   }
 
   set outDirs {}
   foreach dir $rawDirs {
     lappend outDirs [file join $dir $subdir]
   }
   return $outDirs
 }
 
 # The remaining procs reference the environmental variables XDG_
 # followed by the proc name.
 proc XDG::DATA_HOME {{subdir &quot;&quot;}} {Dir DATA_HOME $subdir}
 proc XDG::CONFIG_HOME {{subdir &quot;&quot;}} {Dir CONFIG_HOME $subdir}
 proc XDG::CACHE_HOME {{subdir &quot;&quot;}} {Dir CACHE_HOME $subdir}
 
 proc XDG::RUNTIME_DIR {{subdir &quot;&quot;}} {
   if {![XDGVarSet RUNTIME_DIR]} { return {} }
   return [file join $::env(XDG_RUNTIME_DIR) $subdir]
 }
 
 # The following procs returning the directories as a list with the most
 # important first.
 proc XDG::DATA_DIRS {{subdir &quot;&quot;}} {Dirs DATA_DIRS $subdir}
 proc XDG::CONFIG_DIRS {{subdir &quot;&quot;}} {Dirs CONFIG_DIRS $subdir}
 

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/Tcl'>Wikipedia</a>:
code
 oo::class create fruit {
     method eat {} {
         puts &quot;yummy!&quot;
     }
 }
 oo::class create banana {
     superclass fruit
     constructor {} {
         my variable peeled
         set peeled 0
     }
     method peel {} {
         my variable peeled
         set peeled 1
         puts &quot;skin now off&quot;
     }
     method edible? {} {
         my variable peeled
         return $peeled
     }
     method eat {} {
         if {![my edible?]} {
             my peel
         }
         next
     }
 }
 set b [banana new]
 $b eat               → prints &quot;skin now off&quot; and &quot;yummy!&quot;
 fruit destroy
 $b eat               → error &quot;unknown command&quot;

foldBreak
## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Strings
  FeatureLink ../languages/strings-feature.html
  Supported ✓
  Example
   "Hello world"
  Token "
 row
  Feature Print() Debugging
  FeatureLink ../languages/print-debugging-feature.html
  Supported ✓
  Example
  Token puts
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   # A comment
  Token #
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 
 row
  Feature MultiLine Comments
  FeatureLink ../languages/multiline-comments-feature.html
  Supported ϴ
  Example
  Token 

foldBreak
## Books about Tcl on goodreads
pipeTable
 title|titleLink|author|year|reviews|ratings|rating
 Practical Programming in TCL & TK|https://www.goodreads.com/search?q=Practical Programming in TCL & TK Brent B. Welch|Brent B. Welch|1961|2|55|3.87
 Effective Tcl/TK Programming: Writing Better Programs with TCL and TK|https://www.goodreads.com/search?q=Effective Tcl/TK Programming: Writing Better Programs with TCL and TK Mark Harrison|Mark Harrison|1997|0|4|3.50
 Tcl/TK Pocket Reference: Programming Tools|https://www.goodreads.com/search?q=Tcl/TK Pocket Reference: Programming Tools Paul Raines|Paul Raines|1998|0|9|3.22
 TCL/TK Programmer's Reference|https://www.goodreads.com/search?q=TCL/TK Programmer's Reference Chris Nelson|Chris Nelson|1999|1|1|5.00
 Tcl/Tk 8.5 Programming Cookbook|https://www.goodreads.com/search?q=Tcl/Tk 8.5 Programming Cookbook Bert Wheeler|Bert Wheeler|2011|0|1|3.00
 Tcl/TK Programming for the Absolute Beginner|https://www.goodreads.com/search?q=Tcl/TK Programming for the Absolute Beginner Kurt Wall|Kurt Wall|2007|1|1|4.00
 TCL 8.5 Network Programming|https://www.goodreads.com/search?q=TCL 8.5 Network Programming Wojciech Kocjan|Wojciech Kocjan|2010|1|3|3.67
 Tcl/TK: A Developer's Guide|https://www.goodreads.com/search?q=Tcl/TK: A Developer's Guide Clif Flynt|Clif Flynt|2003|0|0|0.0
 TCL/TK for Dummies?|https://www.goodreads.com/search?q=TCL/TK for Dummies? Tim Webster|Tim Webster|1997|0|2|3.50
 CGI Programming with TCL [With CDROM]|https://www.goodreads.com/search?q=CGI Programming with TCL [With CDROM] David Maggiano|David Maggiano|1999|0|0|0.0

foldBreak
## Books about Tcl from ISBNdb
pipeTable
 title|titleLink|authors|year|publisher
 Effective Tcl/TK Programming: Writing Better Programs with TCL and TK|https://isbndb.com/book/9780201634747|Harrison, Mark and McLennan, Michael|1997|Addison-Wesley Professional
 Tcl and the Tk Toolkit|https://isbndb.com/book/9780321336330|Ousterhout, John and Jones, Ken|2009|Addison-Wesley Professional
 Tcl 8.5 Network Programming (Community Experience Distilled)|https://isbndb.com/book/9781849510967|Kocjan, Wojciech and Beltowski, Piotr|2010|Packt Publishing
 Cgi Developer's Resource: Web Programming in Tcl and Perl (Resource Series)|https://isbndb.com/book/9780137277513|Ivler, J. M. and Husain, Kamran|1997|Prentice Hall Ptr
 Web TCL Complete|https://isbndb.com/book/9780079137135|Stephen Ball|1999|McGraw-Hill Inc.,US
 Practical Programming in Tcl and Tk|https://isbndb.com/book/9780130385604|Welch, Brent and Jones, Ken|2003|Pearson
 The Tcl Programming Language: A Comprehensive Guide|https://isbndb.com/book/9781548679644|Nadkarni, Ashok P.|2017|CreateSpace Independent Publishing Platform
 Practical Programming in Tcl & Tk|https://isbndb.com/book/9780136168300|Welch, Brent B.|1997|Prentice Hall
 TCL / TK in a Nutshell: A Desktop Quick Reference|https://isbndb.com/book/9781565924338|Raines, Paul and Tranter, Jeff|1999|O'Reilly Media
 Tcl and Tk Programming for the Absolute Beginner|https://isbndb.com/book/9781598634389|Wall, Kurt|2007|Cengage Learning PTR
 Tcl and the Tk Toolkit|https://isbndb.com/book/9780201633375|Ousterhout, John K.|1994|Addison-Wesley Professional
 Practical Programming in Tcl and Tk (3rd Edition)|https://isbndb.com/book/9780130220288|Welch, Brent B.|1999|Prentice Hall
 Practical Programming in Tcl and Tk/Book and Disk|https://isbndb.com/book/9780131820074|Welch, Brent B.|1995-04T|Prentice Hall
 Cgi Programming With Tcl|https://isbndb.com/book/9780201606294|David Maggiano|1999|Addison-wesley
 Tcl 8.5 Network Programming|https://isbndb.com/book/9781849510974|Wojciech Kocjan; Piotr Beltowski|20100701|Packt Publishing
 Tcl And The Tk Toolkit|https://isbndb.com/book/9780201633375|Ousterhout, John K.|1994|Addison-wesley

foldBreak
## Publications about Tcl from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 VIPERS: a data flow visual programming environment based on the Tcl language|https://www.semanticscholar.org/paper/9aa8df179b2f6b3c252657a8813850e22d2fe7e9|Massimo Bernini and M. Mosconi|1994|21|3
 Petascale Tcl with NAMD, VMD, and Swift/T|https://www.semanticscholar.org/paper/dbc9036c86dbe20795e6eccc8393d02dd7251692|James C. Phillips and J. Stone and Kirby L. Vandivort and Timothy G. Armstrong and J. Wozniak and M. Wilde and K. Schulten|2014|18|0

keyboardNav modula-2.html vba.html
