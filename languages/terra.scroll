title Terra

import settings.scroll
htmlTitle Terra - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/terra.pldb

paragraph
 Terra is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=2012">2012</a>.

kpiTable
 #160 <span title="TotalRank: 454 Jobs: 101 Users: 263 Facts: 90 Links: 952">on PLDB</span>
 10 Years Old
 3.2k <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging Terra">Books</span>
 4 <span title="Academic publications about or leveraging Terra">Papers</span>
 410 <span title="Terra repos on GitHub.">Repos</span>







paragraph
 Terra is a low-level system programming language that is embedded in and meta-programmed by the Lua programming language:

list
 - the <a href="http://terralang.org/">Terra website</a>
 - Terra is developed on <a href="https://github.com/zdevito/terra">GitHub</a> and has 2,432 stars
 - There are at least 410 Terra repos on <a href="https://github.com/search?q=language:Terra">GitHub</a>
 - file extensions for Terra include t
 - The  Google BigQuery Public Dataset GitHub snapshot shows 195 users using Terra in 206 repos on <a href="https://api.github.com/search/repositories?q=language:Terra">GitHub</a>
 - Explore Terra snippets on <a href="http://www.rosettacode.org/wiki/Category:Terra">Rosetta Code</a>
 - GitHub supports <a href="https://github.com/pyk/sublime-terra" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Terra
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/terra">Improve our Terra file</a>

html
 <br>

exampleCodeHeader Example from the web:
code
 -- This top-level code is plain Lua code.
 function printhello()
     -- This is a plain Lua function
     print(&quot;Hello, Lua!&quot;)
 end
 printhello()
 
 -- Terra is backwards compatible with C, we&#39;ll use C&#39;s io library in our example.
 C = terralib.includec(&quot;stdio.h&quot;)
 
 -- The keyword &#39;terra&#39; introduces a new Terra function.
 terra hello(argc : int, argv : &amp;rawstring)
     -- Here we call a C function from Terra
     C.printf(&quot;Hello, Terra!\n&quot;)
     return 0
 end
 
 -- You can call Terra functions directly from Lua, they are JIT compiled 
 -- using LLVM to create machine code
 hello(0,nil)
 
 -- Terra functions are first-class values in Lua, and can be introspected 
 -- and meta-programmed using it
 hello:disas()
 --[[ output:
     assembly for function at address 0x60e6010
     0x60e6010(+0):    push  rax
     0x60e6011(+1):    movabs  rdi, 102129664
     0x60e601b(+11):   movabs  rax, 140735712154681
     0x60e6025(+21):   call  rax
     0x60e6027(+23):   xor eax, eax
     0x60e6029(+25):   pop rdx
     0x60e602a(+26):   ret
 ]]
 
 -- You can save Terra code as executables, object files, or shared libraries 
 -- and link them into existing programs
 terralib.saveobj(&quot;helloterra&quot;,{ main = hello })

exampleCodeHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/t/Terra.t'>hello-world</a>:
code
 print(&quot;Hello World&quot;)
 

exampleCodeHeader Example from <a href='https://github.com/pyk/sublime-terra'>Linguist</a>:
code
 C = terralib.includecstring [[
 	#include &lt;stdio.h&gt;
 	#include &lt;stdlib.h&gt;
 ]]
 local arraytypes = {}
 function Array(T)
 	local struct ArrayImpl {
 		data : &amp;T;
 		N : int;
 	}
 	function ArrayImpl.metamethods.__typename(self)
 	    return &quot;Array(&quot;..tostring(T)..&quot;)&quot;
 	end
 	arraytypes[ArrayImpl] = true
 	terra ArrayImpl:init(N : int)
 		self.data = [&amp;T](C.malloc(N*sizeof(T)))
 		self.N = N
 	end
 	terra ArrayImpl:free()
 		C.free(self.data)
 	end
 	ArrayImpl.metamethods.__apply = macro(function(self,idx)
 		return `self.data[idx]
 	end)
 	ArrayImpl.metamethods.__methodmissing = macro(function(methodname,selfexp,...)
 		local args = terralib.newlist {...}
 		local i = symbol(int)
 		local promotedargs = args:map(function(a)
 			if arraytypes[a:gettype()] then
 				return `a(i)
 			else
 				return a
 			end
 		end)
 		return quote
 			var self = selfexp
 			var r : ArrayImpl
 			r:init(self.N)
 			for [i] = 0,r.N do
 				r.data[i] = self.data[i]:[methodname](promotedargs)
 			end
 		in
 			r
 		end
 	end)
 	return ArrayImpl
 end
 
 struct Complex {
 	real : float;
 	imag : float;
 }
 
 terra Complex:add(c : Complex) 
 	return Complex { self.real + c.real, self.imag + c.imag }
 end
 
 ComplexArray = Array(Complex)
 N = 10
 terra testit()
 	var ca : ComplexArray
 	ca:init(N)
 	for i = 0,N do
 		ca(i) = Complex { i, i + 1 }
 	end
 	var ra = ca:add(ca)
 	return ra
 end
 local r = testit()
 assert(r.N == N)
 for i = 0,N-1 do
 	assert(r.data[i].real == 2*i)
 	assert(r.data[i].imag == 2*(i+1))
 end
 assert(tostring(Array(int)) == &quot;Array(int32)&quot;)





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Strings
  FeatureLink ../languages/strings-feature.html
  Supported ✓
  Example
   "Hello world"
  Token "
 row
  Feature Print() Debugging
  FeatureLink ../languages/print-debugging-feature.html
  Supported ✓
  Example
  Token print
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   -- A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   -- A comment
  Token --
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 







foldBreak
subsection Publications about Terra from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 Modeling the Earth with Fatiando a Terra|https://www.semanticscholar.org/paper/ba6db75613a2daf1b9f5bb19602e67d5a281b124|L. Uieda and V. C. Oliveira and V. Barbosa|2013|63|4
 Inversion of Land Surface Temperature (LST) Using Terra ASTER Data: A Comparison of Three Algorithms|https://www.semanticscholar.org/paper/be8ab3dc51a616ca6646f3f800239e33607e32b8|M. Ndossi and U. Avdan|2016|30|3
 Terra|https://www.semanticscholar.org/paper/cb2405872210975b446017f54f115c45b5d4cda8|Adriano Branco and Francisco Sant'anna and R. Ierusalimschy and Noemi Rodriguez and Silvana Rossetto|2015|24|0
 Delft Advanced Research Terra Simulator: General Purpose Reservoir Simulator with Operator-Based Linearization|https://www.semanticscholar.org/paper/3986f7b8dd67a9c80b8b57c84accf6dcd94d2099|M. Khait|2019|4|1






keyboardNav moonscript.html dot.html
