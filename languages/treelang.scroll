title Treelang

import settings.scroll
htmlTitle Treelang - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/treelang.pldb

paragraph
 Treelang is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=1988">1988</a>.

kpiTable
 #914 <span title="TotalRank: 1465 Jobs: 101 Users: 1986 Facts: 411 Links: 953">on PLDB</span>
 34 Years Old
 30 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging Treelang">Books</span>
 0 <span title="Academic publications about or leveraging Treelang">Papers</span>







paragraph
 Treelang is a "toy" programming language distributed with the GNU Compiler Collection (GCC) to demonstrate the features of its code-generation backend. It was developed by Tim Josling, based on a language called Toy created by Richard Kenner.  During the GCC 4.3 release cycle, a patch was committed to remove the language, because of high maintenance costs outweighing its benefits and also because it was no longer considered a good front-end example by GCC developers.. <a href="https://en.wikipedia.org/wiki/Treelang">Read more on Wikipedia...</a>

list
 - the <a href="https://en.wikipedia.org/wiki/Treelang">Treelang Wikipedia page</a>
 - See also: (1 related languages)<a href="c.html">C</a>
 - Read more about Treelang on the web: <a href="https://web.archive.org/web/20011108165657/http://www.geocities.com/timjosling/treelang.diff.txt">1</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/treelang">Improve our Treelang file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/Treelang'>Wikipedia</a>:
code
 // function prototypes
      // function &#39;add&#39; taking two ints and returning an int
      external_definition int add(int arg1, int arg2);
      external_definition int subtract(int arg3, int arg4);
      external_definition int first_nonzero(int arg5, int arg6);
      external_definition int double_plus_one(int arg7);
      external_definition int main();
 
      // function definition
      add
      {
        // return the sum of arg1 and arg2
        return arg1 + arg2;
      }
   
      subtract
      {
        return arg3 - arg4;
      }
 
      double_plus_one
      {
        // aaa is a variable, of type integer and allocated at the start of the function
        automatic int aaa;
        // set aaa to the value returned from add, when passed arg7 and arg7 as the two parameters
        aaa=add(arg7, arg7);
        aaa=add(aaa, aaa);
        aaa=subtract(subtract(aaa, arg7), arg7) + 1;
        return aaa;
      }
      
      first_nonzero
      {
        // C-like if statement
        if (arg5)
          {
            return arg5;
          }
        else
          {
          }
        return arg6;
      }
 
      // Like C, &#39;gtreelang&#39; needs the main to be defined to create an executable.
      main
      {
           return double_plus_one(5);
      }





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   // A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   // A comment
  Token //
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 













keyboardNav ubasic.html ch.html
