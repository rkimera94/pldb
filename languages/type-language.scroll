title Type Language

import settings.scroll
htmlTitle Type Language - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/type-language.pldb

paragraph
 Type Language is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=2013">2013</a>.

kpiTable
 #904 <span title="TotalRank: 1456 Jobs: 101 Users: 1083 Facts: 403 Links: 952">on PLDB</span>
 9 Years Old
 200 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging Type Language">Books</span>
 0 <span title="Academic publications about or leveraging Type Language">Papers</span>
 405k <span title="Type Language repos on GitHub.">Repos</span>







paragraph
 TL (Type Language) serves to describe the used system of types, constructors, and existing functions.

list
 - There are at least 404,774 Type Language repos on <a href="https://github.com/search?q=language:Type Language">GitHub</a>
 - file extensions for Type Language include tl
 - GitHub supports <a href="https://github.com/goodmind/language-typelanguage" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Type Language
 - Read more about Type Language on the web: <a href="https://core.telegram.org/mtproto/TL">1</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/type-language">Improve our Type Language file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://github.com/goodmind/language-typelanguage'>Linguist</a>:
code
 // built-in types
 int#a8509bda ? = Int;
 long ? = Long;
 double ? = Double;
 string ? = String;
 null = Null;
 
 vector {t:Type} # [ t ] = Vector t;
 coupleInt {alpha:Type} int alpha = CoupleInt&lt;alpha&gt;;
 coupleStr {gamma:Type} string gamma = CoupleStr gamma;
 
 /* The name of the type variable is irrelevant: &quot;gamma&quot; could be replaced with &quot;alpha&quot;
   However, the combinator number will depend on the specific choice. */
 
 intHash {alpha:Type} vector&lt;coupleInt&lt;alpha&gt;&gt; = IntHash&lt;alpha&gt;;
 strHash {alpha:Type} (vector (coupleStr alpha)) = StrHash alpha;
 intSortedHash {alpha:Type} intHash&lt;alpha&gt; = IntSortedHash&lt;alpha&gt;;
 strSortedHash {alpha:Type} (strHash alpha) = StrSortedHash alpha;
 
 // custom types
 pair x:Object y:Object = Pair;
 triple x:Object y:Object z:Object = Triple;
 
 user#d23c81a3 id:int first_name:string last_name:string = User;
 no_user#c67599d1 id:int = User;
 group id:int title:string last_name:string = Group;
 no_group = Group;
 
 ---functions---
 
 // Maybe some built-in arithmetic functions; inverse quotes make &quot;identifiers&quot; out of arbitrary non-alphanumeric strings
 `+` Int Int = Int;
 `-` Int Int = Int;
 `+` Double Double = Double;
 // ...
 
 // API functions (aka RPC functions)
 getUser#b0f732d5 int = User;
 getUsers#2d84d5f5 (Vector int) = Vector User;





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature MultiLine Comments
  FeatureLink ../languages/multiline-comments-feature.html
  Supported ✓
  Example
   /* A comment
   */
  Token /* */
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   // A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   // A comment
  Token //
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 













keyboardNav pep8.html shakespeare-programming-language.html
