title UrWeb

import settings.scroll
htmlTitle UrWeb - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/urweb.pldb

paragraph
 UrWeb is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=2008">2008</a>.

kpiTable
 #334 <span title="TotalRank: 774 Jobs: 101 Users: 479 Facts: 194 Links: 953">on PLDB</span>
 14 Years Old
 1.1k <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging UrWeb">Books</span>
 0 <span title="Academic publications about or leveraging UrWeb">Papers</span>
 83 <span title="UrWeb repos on GitHub.">Repos</span>







paragraph
 The Ur/Web programming language

list
 - the <a href="http://www.impredicative.com/ur/">UrWeb website</a>
 - UrWeb is developed on <a href="https://github.com/urweb/urweb">GitHub</a> and has 755 stars
 - There are at least 83 UrWeb repos on <a href="https://github.com/search?q=language:UrWeb">GitHub</a>
 - file extensions for UrWeb include ur and urs
 - The  Google BigQuery Public Dataset GitHub snapshot shows 62 users using UrWeb in 64 repos on <a href="https://api.github.com/search/repositories?q=language:UrWeb">GitHub</a>
 - GitHub supports <a href="https://github.com/gwalborn/UrWeb-Language-Definition.git" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for UrWeb
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/urweb">Improve our UrWeb file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://github.com/gwalborn/UrWeb-Language-Definition.git'>Linguist</a>:
code
 open Parse.String
 
 val digit = satisfy isdigit
 
 val decimal_of_len n =
     ds &lt;- count n digit;
     return (List.foldl (fn d acc =&gt; 10*acc + ((ord d)-(ord #&quot;0&quot;))) 0 ds)
 
 val date =
     y &lt;- decimal_of_len 4;
     char&#39; #&quot;-&quot;;
     m &lt;- decimal_of_len 2;
     char&#39; #&quot;-&quot;;
     d &lt;- decimal_of_len 2;
     if m &gt; 0 &amp;&amp; m &lt;= 12 then
         return {Year=y, Month=(Datetime.intToMonth (m-1)), Day=d}
     else
         fail
 
 (* We parse fractions of a second, but ignore them since Datetime
    doesn&#39;t permit representing them. *)
 val time =
     h &lt;- decimal_of_len 2;
     char&#39; #&quot;:&quot;;
     m &lt;- decimal_of_len 2;
     s &lt;- maybe (char&#39; #&quot;:&quot;;
                 s &lt;- decimal_of_len 2;
                 maybe&#39; (char&#39; #&quot;.&quot;; skipWhile isdigit);
                 return s);
     return {Hour=h, Minute=m, Second=Option.get 0 s}
 
 val timezone_offset =
     let val zulu = char&#39; #&quot;Z&quot;; return 0
         val digits = decimal_of_len 2
         val sign = or (char&#39; #&quot;+&quot;; return 1)
                       (char&#39; #&quot;-&quot;; return (-1))
     in
         zulu `or` (s &lt;- sign;
                    h &lt;- digits;
                    m &lt;- (maybe&#39; (char&#39; #&quot;:&quot;); or digits (return 0));
                    return (s*(h*60+m)))
     end
 
 val datetime_with_tz =
     d &lt;- date; char&#39; #&quot;T&quot;; t &lt;- time;
     tz &lt;- timezone_offset;
     return (d ++ t ++ {TZOffsetMinutes=tz})
 
 val datetime =
     d &lt;- datetime_with_tz;
     return (d -- #TZOffsetMinutes)
 
 fun process v =
     case parse (d &lt;- datetime_with_tz; eof; return d) v of
         Some r =&gt;
         let
             val {Year=year,Month=month,Day=day,
                  Hour=hour,Minute=minute,Second=second} =
                 Datetime.addMinutes (r.TZOffsetMinutes) (r -- #TZOffsetMinutes)
             fun pad x =
                 if x &lt; 10 then &quot;0&quot; `strcat` show x else show x
         in
             &lt;xml&gt;{[pad hour]}:{[pad minute]}:{[pad second]} {[month]} {[day]}, {[year]}&lt;/xml&gt;
         end
       | None =&gt; &lt;xml&gt;none&lt;/xml&gt;
 
 fun main () : transaction page =
     input &lt;- source &quot;2012-01-01T01:10:42Z&quot;;
     return &lt;xml&gt;
       &lt;body&gt;
         &lt;label&gt;
           Enter an
           &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO_8601&quot;&gt;ISO 8601&lt;/a&gt;
           datetime here:
           &lt;ctextbox source={input} /&gt;
         &lt;/label&gt;
         &lt;ul&gt;&lt;dyn signal={v &lt;- signal input; return (process v)} /&gt;&lt;/ul&gt;
       &lt;/body&gt;
     &lt;/xml&gt;





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   (* A comment
   *)
  Token 
 row
  Feature MultiLine Comments
  FeatureLink ../languages/multiline-comments-feature.html
  Supported ✓
  Example
   (* A comment
   *)
  Token (* *)
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 













keyboardNav spark.html q.html
