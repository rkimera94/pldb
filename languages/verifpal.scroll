title verifpal

import settings.scroll
htmlTitle verifpal - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/verifpal.pldb

paragraph
 verifpal is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=2019">2019</a>.

kpiTable
 #1334 <span title="TotalRank: 1847 Jobs: 101 Users: 2300 Facts: 794 Links: 952">on PLDB</span>
 3 Years Old
 0 <span title="Books about or leveraging verifpal">Books</span>
 0 <span title="Academic publications about or leveraging verifpal">Papers</span>







paragraph
 Verifpal is new software for verifying the security of cryptographic protocols. The Verifpal language is meant to illustrate protocols close to how one may describe them in an informal conversation, while still being precise and expressive enough for formal modeling. Verifpal reasons about the protocol model with explicit principals: Alice and Bob exist and have independent states.

list
 - the <a href="https://verifpal.com/">verifpal website</a>
 - file extensions for verifpal include vp
 - <a href="https://verifpal.com/">verifpal.com</a> was registered in 2019
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/verifpal">Improve our verifpal file</a>

html
 <br>

exampleCodeHeader Example from the web:
code
 // All lines that start with &quot;//&quot; are treated as comments and ignored by Verifpal
 // A principal block looks like the following
 principal SmartphoneA[
  // In the line below we state that Alice knows the public BroadcastKey
  
  knows public BroadcastKey
  
  // SK is going to be a secret random value
  // To define it we use the &quot;generates&quot; keyword
  // We will use the following template for SK variable names
  // SK[day number][principal initial]
  
  generates SK0A
  
  // We will use the following template for EphID variable names
  // EphID[day number][value number][principal initial]
  
  EphID00A, EphID01A, EphID02A = HKDF(nil, SK0A, BroadcastKey)
 ]





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   // A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   // A comment
  Token //
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 













keyboardNav sublime-syntax-test.html fsl.html
