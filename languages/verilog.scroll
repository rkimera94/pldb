title Verilog

import settings.scroll
htmlTitle Verilog - Hardware description language

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/verilog.pldb

paragraph
 Verilog is a <a href="../lists/languages.html?filter=hardwareDescriptionLanguage">hardware description language</a> created in <a href="../lists/languages.html?filter=1984">1984</a>.

kpiTable
 #63 <span title="TotalRank: 217 Jobs: 69 Users: 193 Facts: 59 Links: 89">on PLDB</span>
 38 Years Old
 5.2k <span title="Crude user estimate from a linear model.">Users</span>
 34 <span title="Books about or leveraging Verilog">Books</span>
 18 <span title="Academic publications about or leveraging Verilog">Papers</span>
 48k <span title="Verilog repos on GitHub.">Repos</span>

paragraph
 Try now: <a href="https://riju.codes/verilog">Riju</a>





paragraph
 Verilog, standardized as IEEE 1364, is a hardware description language (HDL) used to model electronic systems. It is most commonly used in the design and verification of digital circuits at the register-transfer level of abstraction. It is also used in the verification of analog circuits and mixed-signal circuits, as well as in the design of genetic circuits.. <a href="https://en.wikipedia.org/wiki/Verilog">Read more on Wikipedia...</a>

list
 - the <a href="https://en.wikipedia.org/wiki/Verilog">Verilog Wikipedia page</a>
 - There are at least 48,035 Verilog repos on <a href="https://github.com/search?q=language:Verilog">GitHub</a>
 - file extensions for Verilog include v and veo
 - The  Google BigQuery Public Dataset GitHub snapshot shows 2k users using Verilog in 3k repos on <a href="https://api.github.com/search/repositories?q=language:Verilog">GitHub</a>
 - There are 2,421 members in the <a href="https://reddit.com/r/Verilog">Verilog subreddit</a>
 - Explore Verilog snippets on <a href="http://www.rosettacode.org/wiki/Category:Verilog">Rosetta Code</a>
 - Verilog is listed on <a href="https://hopl.info/showlanguage.prx?exp=1062">HOPL</a>
 - Verilog ranks #50 in the <a href="https://www.tiobe.com/tiobe-index/">TIOBE Index</a>
 - There is an <a href="https://packages.ubuntu.com/jammy/iverilog">Ubuntu package</a> for Verilog
 - Here is an <a href="antlr.html">ANTLR</a> <a href="https://github.com/antlr/grammars-v4/tree/master/verilog">grammar</a> for Verilog
 - There is a <a href="codemirror.html">CodeMirror</a> <a href="https://github.com/codemirror/codemirror5/tree/master/mode/verilog">package</a> for syntax highlighting Verilog
 - <a href="languages/pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/hdl.py">syntax highlighting</a> for Verilog
 - GitHub supports <a href="https://github.com/textmate/verilog.tmbundle" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for Verilog
 - Verilog appears in the <a href="https://github.com/mame/quine-relay">Quine Relay</a> project
 - See also: (5 related languages)<a href="systemverilog.html">SystemVerilog</a>, <a href="c.html">C</a>, <a href="vhdl.html">VHDL</a>, <a href="openvera.html">OpenVera</a>, <a href="property-specification-language.html">Property Specification Language</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/verilog">Improve our Verilog file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://riju.codes/verilog'>Riju</a>:
code
 module main;
 
 initial begin
   $display(&quot;Hello, world!&quot;);
 end
 
 endmodule
 

exampleCodeHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/v/Verilog.v'>hello-world</a>:
code
 module main;
   initial
     begin
       $display(&quot;Hello World&quot;);
       $finish;
     end
 endmodule
 

exampleCodeHeader Example from <a href='http://helloworldcollection.de/#Verilog'>the Hello World Collection</a>:
code
 /* Hello World in Verilog. */
 
 module main;
 
  initial
    begin
      $display(&quot;Hello, World&quot;);
      $finish ;
    end
 
  endmodule
 

exampleCodeHeader Example from <a href='https://github.com/textmate/verilog.tmbundle'>Linguist</a>:
code
 `timescale 1ns / 1ps
 // Copyright (C) 2008 Schuyler Eldridge, Boston University
 //
 // This program is free software: you can redistribute it and/or modify
 // it under the terms of the GNU General Public License as published by
 // the Free Software Foundation, either version 3 of the License.
 //
 // This program is distributed in the hope that it will be useful,
 // but WITHOUT ANY WARRANTY; without even the implied warranty of
 // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 // GNU General Public License for more details.
 //
 // You should have received a copy of the GNU General Public License
 // along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.
 module mux(opA,opB,sum,dsp_sel,out);
 	input [3:0] opA,opB;
 	input [4:0] sum;
 	input [1:0] dsp_sel;
 	output [3:0] out;
 	
 	reg cout;
 	
 	always @ (sum)
 		begin
 			if (sum[4] == 1)
 				cout &lt;= 4&#39;b0001;
 			else
 				cout &lt;= 4&#39;b0000;
 		end
 	
 	reg out;
 	
 	always @(dsp_sel,sum,cout,opB,opA)
 		begin
 			if (dsp_sel == 2&#39;b00)
 				out &lt;= sum[3:0];
 			else if (dsp_sel == 2&#39;b01)
 				out &lt;= cout;
 			else if (dsp_sel == 2&#39;b10)
 				out &lt;= opB;
 			else if (dsp_sel == 2&#39;b11)
 				out &lt;= opA;
 		end
 
 endmodule
 

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/Verilog'>Wikipedia</a>:
code
 initial
   a = 0;
 
 initial
   b = a;
 
 initial
   begin
     #1;
     $display(&quot;Value a=%d Value of b=%d&quot;,a,b);
   end



subsection <a href="../lists/keywords.html?filter=verilog">Keywords</a> in Verilog
paragraph
 always assign automatic begin case casex casez cell config deassign default defparam design disable edge else end endcase endconfig endfunction endgenerate endmodule endprimitive endspecify endtable endtask event for force forever fork function generate genvar if ifnone incdir include initial inout input instance join liblist library localparam macromodule module negedge noshowcancelled output parameter posedge primitive pulsestyle_ondetect pulsestyle_onevent reg release repeat scalared showcancelled signed specify specparam strength table task tri tri0 tri1 triand wand trior wor trireg unsigned use vectored wait while wire

foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Binary Literals
  FeatureLink ../languages/binary-numbers-feature.html
  Supported ✓
  Example
   // ([0-9]+)|(\'b)[01]+
  Token 
 row
  Feature Integers
  FeatureLink ../languages/integers-feature.html
  Supported ✓
  Example
   // ([0-9]+)|(\'d)[0-9]+
  Token 
 row
  Feature Floats
  FeatureLink ../languages/floats-feature.html
  Supported ✓
  Example
   // (\d+\.\d*|\.\d+|\d+)[eE][+-]?\d+[lL]?
  Token 
 row
  Feature Hexadecimals
  FeatureLink ../languages/hexadecimals-feature.html
  Supported ✓
  Example
   // ([0-9]+)|(\'h)[0-9a-fA-F]+
  Token 
 row
  Feature Octals
  FeatureLink ../languages/octals-feature.html
  Supported ✓
  Example
   // ([0-9]+)|(\'o)[0-7]+
  Token 
 row
  Feature Conditionals
  FeatureLink ../languages/conditionals-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Functions
  FeatureLink ../languages/functions-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature While Loops
  FeatureLink ../languages/while-loops-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Case Sensitivity
  FeatureLink ../languages/case-sensitivity-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Strings
  FeatureLink ../languages/strings-feature.html
  Supported ✓
  Example
   "Hello world"
  Token "
 row
  Feature MultiLine Comments
  FeatureLink ../languages/multiline-comments-feature.html
  Supported ✓
  Example
   /* A comment
   */
  Token /* */
 row
  Feature Print() Debugging
  FeatureLink ../languages/print-debugging-feature.html
  Supported ✓
  Example
  Token $display
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   // A comment
  Token //
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 



foldBreak
subsection Books about Verilog on goodreads
pipeTable
 title|titleLink|author|year|reviews|ratings|rating
 HDL Programming Fundamentals: VHDL and Verilog [With CD-ROM]|https://www.goodreads.com/search?q=HDL Programming Fundamentals: VHDL and Verilog [With CD-ROM] Nazeih M. Botros|Nazeih M. Botros|2005|5|55|4.15
 Programming Fpgas: Getting Started with Verilog|https://www.goodreads.com/search?q=Programming Fpgas: Getting Started with Verilog Simon Monk|Simon Monk||2|9|3.89
 Computer Arithmetic And Verilog Hdl Fundamentals|https://www.goodreads.com/search?q=Computer Arithmetic And Verilog Hdl Fundamentals Joseph Cavanagh|Joseph Cavanagh|2009|1|10|4.70


foldBreak
subsection Books about Verilog from ISBNdb
pipeTable
 title|titleLink|authors|year|publisher
 Programming FPGAs: Getting Started with Verilog|https://isbndb.com/book/9781259643767|Monk, Simon|2016|McGraw Hill TAB
 Verilog Styles for Synthesis of Digital Systems|https://isbndb.com/book/9780201618600|Smith, David R and Franzon, Paul D|2019|Pearson
 Verilog HDL: Digital Design and Modeling|https://isbndb.com/book/9781420051544|Cavanagh, Joseph|2007|CRC Press
 The Complete Verilog Book|https://isbndb.com/book/9780792381884|Sagdeo, Vivek|1998|Springer
 HDL Programming Fundamentals: VHDL and Verilog (DaVinci Engineering)|https://isbndb.com/book/9781584508557|Botros, Nazeih M|2005|Charles River Media
 Designing Digital Computer Systems with Verilog|https://isbndb.com/book/9780521045728|Lilja, David J. and Sapatnekar, Sachin S.|2007|Cambridge University Press
 The Verilog PLI Handbook|https://isbndb.com/book/9781461550174|Stuart Sutherland|20130418|Springer Nature
 Programming FPGAs: Getting Started with Verilog|https://isbndb.com/book/9781259643774|Monk, Simon|2016|McGraw Hill TAB
 Digital System Design with FPGA: Implementation Using Verilog and VHDL|https://isbndb.com/book/9781259837913|Unsalan, Cem and Tar, Bora|2017|McGraw-Hill Education
 Verilog HDL|https://isbndb.com/book/9780134516752|Palnitkar, Samir|1996|Prentice Hall PTR
 Digital Logic: With an Introduction to Verilog and FPGA-Based Design|https://isbndb.com/book/9781119621546|Rafiquzzaman, M. and McNinch,  Steven A.|2019|Wiley
 Digital Logic: With an Introduction to Verilog and FPGA-Based Design|https://isbndb.com/book/9781119621638|Rafiquzzaman, M. and McNinch, Steven A.|2019|Wiley
 Verilog Digital Computer Design: Algorithms into Hardware|https://isbndb.com/book/9780136392538|Arnold, Mark Gordon|1998|Pearson College Div
 A Verilog HDL Primer, Second Edition|https://isbndb.com/book/9780965039178|Bhasker, J.|1999|Star Galaxy Pub
 The Verilog PLI Handbook: A User’s Guide and Comprehensive Reference on the Verilog Programming Language Interface (The Springer International Series in Engineering and Computer Science (666))|https://isbndb.com/book/9780792376583|Sutherland, Stuart|2002|Springer
 Principles of Verilog PLI|https://isbndb.com/book/9780792384779|Mittra, Swapnajit|1999|Springer
 The Verilog PLI Handbook: A User's Guide and Comprehensive Reference on the Verilog Programming Language Interface|https://isbndb.com/book/9780792384892|Sutherland, Stuart|1999|Springer
 The Verilog PLI Handbook: A User’s Guide and Comprehensive Reference on the Verilog Programming Language Interface (The Springer International Series in Engineering and Computer Science (666))|https://isbndb.com/book/9781475783711|Sutherland, Stuart|2013-04-18T00:00:01Z|Springer
 The Verilog PLI Handbook: A User’s Guide and Comprehensive Reference on the Verilog Programming Language Interface|https://isbndb.com/book/9781461372790|Sutherland, Stuart|2012|Springer
 Dual Core RISC Processor with configurable hardware using VERILOG|https://isbndb.com/book/9783659417887|Kumar, Nishant and Aggrawal, Ekta|2015|LAP LAMBERT Academic Publishing
 Verilog Design of a Pedestrian Crossing: Verilog Programming|https://isbndb.com/book/9783656845027|Gondhalekar, Ninad|2014|GRIN Publishing
 A HDL & Verilog Code: Simulated Output|https://isbndb.com/book/9783848423248|Sudhan, Manu and S., Manjunatha|2012|LAP LAMBERT Academic Publishing
 The Verilog PLI Handbook: A User's Guide and Comprehensive Reference on the Verilog Programming Language Interface|https://isbndb.com/book/9781461550181|Sutherland, Stuart|2011-10-08T00:00:01Z|Springer
 HDL Programming Fundamentals: VHDL and Verilog (Davinci Engineering)|https://isbndb.com/book/9788131502013|Botros|2021|Cengage Learning
 Verilog Designer's Library|https://isbndb.com/book/9780132441582|Bob Zeidman|1999|Pearson Education
 The Verilog PLI Handbook|https://isbndb.com/book/9780306476655|Stuart Sutherland|20060418|Springer Nature
 Principles of Verilog PLI|https://isbndb.com/book/9781461551614|Swapnajit Mittra|20121206|Springer Nature
 FPGA Prototyping by Verilog Examples|https://isbndb.com/book/9781118210611|Pong P. Chu|2011-09-20|Wiley
 HDL with Digital Design VHDL and Verilog|https://isbndb.com/book/9781942270287|Nazeih Botros|03/2015|Mercury Learning and Information
 Digital VLSI Design and Simulation with Verilog|https://isbndb.com/book/9781119778066|Suman Lata Tripathi and Sobhit Saxena and Sanjeet K. Sinha and Govind S. Patel|2021-12-10|Wiley
 Verilog Digital System Design: RT Level Synthesis, Testbench and Verification|https://isbndb.com/book/9780071445658|Zainalabedin Navabi|2005|McGraw-Hill Professional Publishing


foldBreak
subsection Publications about Verilog from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 Verilog HDL|https://www.semanticscholar.org/paper/12b01362e0f2c133a8620d6d6746a839f4b02982|S. Palnitkar|2003|60|7
 Verilog HDL, powered by PLI: a suitable framework for describing and modeling asynchronous circuits at all levels of abstraction|https://www.semanticscholar.org/paper/f06f4e9b01a446ad3ecd785751bb1f0bc727f050|Arash Saifhashemi and H. Pedram|2003|50|1
 The Verilog PLI Handbook|https://www.semanticscholar.org/paper/00dce6a5797c44dba1313774a1b9d61a388a355c|S. Sutherland|1999|37|4
 The Verilog Procedural Interface for the Verilog Hardware Description Language|https://www.semanticscholar.org/paper/78033ca1ee054dedc610e22cdb0550a0ee4a11f2|C. Dawson and S. Pattanam and D. Roberts|1996|26|2
 An animatable operational semantics of the Verilog hardware description language|https://www.semanticscholar.org/paper/d500d55aed7a737378eeb529213b45d53ee7f88b|Jonathan P. Bowen and Jifeng He and Qiwen Xu|2000|25|0
 Verischemelog: Verilog embedded in Scheme|https://www.semanticscholar.org/paper/2d3f3e8149af1901341eb6740430393b0360df62|J. Jennings and Eric Beuscher|1999|21|1
 An Algebraic Approach to the VERILOG Programming|https://www.semanticscholar.org/paper/fc745adcef2a1519155c07f903ebe70918477d3b|H. Jifeng|2003|11|0
 GCC2Verilog Compiler Toolset for Complete Translation of C Programming Language into Verilog HDL|https://www.semanticscholar.org/paper/f759a43b5e1aca4eb8d85d2a10444ab3fcf18c0c|Giang Nguyen Thi Huong and S. Kim|2011|11|0
 FBDtoVerilog 2.0: An Automatic Translation of FBD into Verilog to Develop FPGA|https://www.semanticscholar.org/paper/9335cf6436e7a5ab0f6be2c37ad3702082f39875|Dong-Ah Lee and Eui-Sub Kim and Junbeom Yoo and Jang-Soo Lee and J. Choi|2014|10|0
 Combining Operational Semantics, Logic Programming and Literate Programming in the Specification and Animation of the Verilog Hardware Description Language|https://www.semanticscholar.org/paper/5deda61155eb8aeb4540ad5ecf443a7228899bbb|Jonathan P. Bowen|2000|10|0
 Verilog plus C language modeling with PLI 2.0: The next generation simulation language|https://www.semanticscholar.org/paper/c8eaeb296d7c077e571a26f95a01efe2f2029e58|S. Meyer|1998|6|0
 The PowerPC 603 C++ Verilog interface model|https://www.semanticscholar.org/paper/73ac82fcff57ef2a5a81eb167fc51515184aaba5|R. P. Voith|1994|5|0
 Faster Verilog simulations using a cycle based programming methodology|https://www.semanticscholar.org/paper/0b6abbaedaeed268005a26aa72f9bcf36789a920|M. Becker|1996|5|1
 DAVE: Deriving Automatically Verilog from English|https://www.semanticscholar.org/paper/5bb4f4be3aad75da5a64a52b56e697ee6df71e39|H. Pearce and Benjamin Tan and R. Karri|2020|3|1
 Introduction to Verilog|https://www.semanticscholar.org/paper/5c855df6ed85074d6adae0f10f0683d9b28ab02c|T. R. Padmanabhan and B. T. Sundari|2004|1|0
 Principles of Verilog PLI|https://www.semanticscholar.org/paper/00b84822867ddbe569681df411fd7733ea273f88|S. Mittra|2012|1|1
 FeatureVerilog: Extending Verilog to Support Feature-Oriented Programming|https://www.semanticscholar.org/paper/9241d6183956e7e47fac20a91a9a9b6ad22ef72b|Jun Ye and QingPing Tan and Tun Li and GuoRong Cao|2011|1|0
 Comparative Analysis between Verilog and Chisel in RISC-V Core Design and Verification|https://www.semanticscholar.org/paper/8e173c2d102219a0e155cbf73b63613cca2df2e0|Jaekyung Im and Seokhyeong Kang|2021|1|0






keyboardNav vba.html doi.html
