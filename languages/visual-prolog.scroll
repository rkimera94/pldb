title Visual Prolog

import settings.scroll
htmlTitle Visual Prolog - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/visual-prolog.pldb

paragraph
 Visual Prolog is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=1996">1996</a>.

kpiTable
 #609 <span title="TotalRank: 1127 Jobs: 62 Users: 1036 Facts: 745 Links: 320">on PLDB</span>
 26 Years Old
 210 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging Visual Prolog">Books</span>
 0 <span title="Academic publications about or leveraging Visual Prolog">Papers</span>







paragraph
 Visual Prolog, also formerly known as PDC Prolog and Turbo Prolog, is a strongly typed object-oriented extension of Prolog.  As Turbo Prolog, it was marketed by Borland but it is now developed and marketed by the Danish firm Prolog Development Center (PDC) that originally developed it. Visual Prolog can build Microsoft Windows GUI-applications, console applications, DLLs (dynamic link libraries), and CGI-programs. <a href="https://en.wikipedia.org/wiki/Visual_Prolog">Read more on Wikipedia...</a>

list
 - the <a href="https://en.wikipedia.org/wiki/Visual_Prolog">Visual Prolog Wikipedia page</a>
 - Visual Prolog is listed on <a href="https://hopl.info/showlanguage.prx?exp=3332">HOPL</a>
 - See also: <a href="prolog.html">Prolog</a>, <a href="isbn.html">ISBN</a>, <a href="mercury.html">Mercury</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/visual-prolog">Improve our Visual Prolog file</a>

html
 <br>

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/Visual_Prolog'>Wikipedia</a>:
code
 class hanoi 
    predicates 
        hanoi : (unsigned N). 
 end class hanoi 
  
 implement hanoi 
    domains 
        pole = string. 
  
    clauses 
        hanoi(N) :- move(N, &quot;left&quot;, &quot;centre&quot;, &quot;right&quot;). 
  
    class predicates 
        move : (unsigned N, pole A, pole B, pole C). 
    clauses 
        move(0, _, _, _) :- !. 
        move(N, A, B, C) :- 
            move(N-1, A, C, B), 
            stdio::writef(&quot;move a disc from % pole to the % pole\n&quot;, A, C), 
            move(N-1, B, A, C). 
 end implement hanoi 
  
 goal 
    console::init(), 
    hanoi::hanoi(4).



















keyboardNav flow-matic.html ibm-gml.html
