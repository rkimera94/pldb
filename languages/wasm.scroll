title WebAssembly

import settings.scroll
htmlTitle WebAssembly - Bytecode

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/wasm.pldb

paragraph
 WebAssembly is a <a href="../lists/languages.html?filter=bytecode">bytecode</a> created in <a href="../lists/languages.html?filter=2015">2015</a> by <a href="../lists/creators.html#Ben_Smith">Ben Smith</a>.

kpiTable
 #112 <span title="TotalRank: 322 Jobs: 93 Users: 125 Facts: 104 Links: 163">on PLDB</span>
 7 Years Old
 8.3k <span title="Crude user estimate from a linear model.">Users</span>
 13 <span title="Books about or leveraging WebAssembly">Books</span>
 25 <span title="Academic publications about or leveraging WebAssembly">Papers</span>
 2k <span title="WebAssembly repos on GitHub.">Repos</span>

paragraph
 Try now: <a href="https://tio.run/#wasm">TIO</a>





paragraph
 WebAssembly (Wasm, WA) is a web standard that defines a binary format and a corresponding assembly-like text format for executable code in Web pages. It is meant to enable executing code nearly as fast as running native machine code. It was envisioned to complement JavaScript to speed up performance-critical parts of web applications and later on to enable web development in languages other than JavaScript. <a href="https://en.wikipedia.org/wiki/WebAssembly">Read more on Wikipedia...</a>

list
 - the <a href="http://webassembly.org/">WebAssembly website</a>
 - the <a href="https://en.wikipedia.org/wiki/WebAssembly">WebAssembly Wikipedia page</a>
 - WebAssembly is developed on <a href="https://github.com/WebAssembly/wabt">GitHub</a> and has 4,534 stars
 - the <a href="https://developer.mozilla.org/en-US/docs/WebAssembly">WebAssembly docs</a>
 - There are at least 1,641 WebAssembly repos on <a href="https://github.com/search?q=language:WebAssembly">GitHub</a>
 - WebAssembly first developed in <a href="../lists/originCommunities.html#W3C">W3C</a>
 - file extensions for WebAssembly include wasm, wast and wat
 - WebAssembly is written in <a href="cpp.html">C++</a>
 - The  Google BigQuery Public Dataset GitHub snapshot shows 148 users using WebAssembly in 160 repos on <a href="https://api.github.com/search/repositories?q=language:WebAssembly">GitHub</a>
 - <a href="languages/pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/webassembly.py">syntax highlighting</a> for WebAssembly
 - GitHub supports <a href="https://github.com/Alhadis/language-webassembly" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for WebAssembly
 - Indeed.com has 5 matches for <a href="https://www.indeed.com/jobs?q=webassembly engineer">"webassembly engineer"</a>.
 - <a href="http://webassembly.org/">webassembly.org</a> was registered in 2015
 - See also: (12 related languages)<a href="asmjs.html">Asm.js</a>, <a href="assembly-language.html">Assembly language</a>, <a href="javascript.html">JavaScript</a>, <a href="unity-engine.html">Unity</a>, <a href="llvmir.html">LLVM IR</a>, <a href="c.html">C</a>, <a href="rust.html">Rust</a>, <a href="java.html">Java</a>, <a href="csharp.html">C#</a>, <a href="go.html">Go</a>, <a href="s-expressions.html">S-expressions</a>, <a href="doi.html">DOI</a>
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/wasm">Improve our WebAssembly file</a>

html
 <br>

exampleCodeHeader Example from the web:
code
 20 00
 50
 04 7E
 42 01
 05
 20 00
 20 00
 42 01
 7D
 10 00
 7E
 0B

exampleCodeHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/w/WebAssembly.wat'>hello-world</a>:
code
 (module
     (import &quot;wasi_unstable&quot; &quot;fd_write&quot;
         (func $fd_write (param i32 i32 i32 i32) (result i32))
     )
 
     (memory 1)
     (export &quot;memory&quot; (memory 0))
 
     (data (i32.const 0) &quot;\08\00\00\00\0c\00\00\00Hello World\n&quot;)
 
     (func $main (export &quot;_start&quot;)
         i32.const 1
         i32.const 0
         i32.const 1
         i32.const 20
         call $fd_write
         drop
     )
 )
 

exampleCodeHeader Example from <a href='https://github.com/Alhadis/language-webassembly'>Linguist</a>:
code
 (module
   (import &quot;env&quot; &quot;printInt&quot; (func $printInt (param i32)))
   (func $add (param $lhs i32) (param $rhs i32) (result i32)
     get_local $lhs
     get_local $rhs
     i32.add
   )
 
   (func $main
     (call $printInt
       (call $add (i32.const 9) (i32.const 8))))
 
   (export &quot;main&quot; (func $main))
 )
 

exampleCodeHeader Example from <a href='https://en.wikipedia.org/wiki/WebAssembly'>Wikipedia</a>:
code
 (module
   (import &quot;math&quot; &quot;exp&quot; (func $exp (param f64) (result f64)))
   (func (export &quot;doubleExp&quot;) (param $0 f64) (result f64)
     (f64.mul
       (call $exp
         (get_local $0))
       (f64.const 2))))





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature MultiLine Comments
  FeatureLink ../languages/multiline-comments-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Integers
  FeatureLink ../languages/integers-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Floats
  FeatureLink ../languages/floats-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Hexadecimals
  FeatureLink ../languages/hexadecimals-feature.html
  Supported ✓
  Example
  Token 





foldBreak
subsection Books about WebAssembly from ISBNdb
pipeTable
 title|titleLink|authors|year|publisher
 Programming WebAssembly with Rust: Unified Development for Web, Mobile, and Embedded Applications|https://isbndb.com/book/9781680506365|Hoffman, Kevin|2019|Pragmatic Bookshelf
 Hands-On Game Development with WebAssembly: Learn WebAssembly C++ programming by building a retro space game|https://isbndb.com/book/9781838646837|Battagline, Rick|2019|Packt Publishing
 Hands-On JavaScript High Performance: Build faster web apps using Node.js, Svelte.js, and WebAssembly|https://isbndb.com/book/9781838825867|Scherer, Justin|2020|Packt Publishing
 WebAssembly in Action: With examples using C++ and Emscripten|https://isbndb.com/book/9781638355304|Gallant, Gerard|2019|Manning
 Hands-On Game Development with WebAssembly: Learn WebAssembly C++ programming by building a retro space game|https://isbndb.com/book/9781838644659|Battagline, Rick|2019-05-31T00:00:01Z|Packt Publishing
 WebAssembly for Cloud: A Basic Guide for Wasm-Based Cloud Apps|https://isbndb.com/book/9781484274958|Jain, Shashank Mohan|2021|Apress
 Practical WebAssembly-Explore the fundamentals of WebAssembly programming using Rust|https://isbndb.com/book/9781838828004|Sendil Kumar Nellaiyapen|2022|Packt Publishing - ebooks Account
 WebAssembly for Cloud|https://isbndb.com/book/9781484274965|Shashank Mohan Jain|20211113|Springer Nature
 Practical WebAssembly|https://isbndb.com/book/9781838827465|Sendil Kumar Nellaiyapen|20220502|Packt Publishing
 The Art of WebAssembly|https://isbndb.com/book/9781718501454|Rick Battagline|20210601|Random House Publishing Services
 Blazor WebAssembly by Example|https://isbndb.com/book/9781800563933|Toi B. Wright; Scott Hanselman|44386|Packt Publishing
 Game Development with Rust and WebAssembly|https://isbndb.com/book/9781801074995|Eric Smith|29-04-2022|Packt Publishing
 Creative DIY Microcontroller Projects with TinyGo and WebAssembly|https://isbndb.com/book/9781800563599|Tobias Theel|14-05-2021|Packt Publishing


foldBreak
subsection Publications about WebAssembly from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 Bringing the web up to speed with WebAssembly|https://www.semanticscholar.org/paper/f9420023ec1ee6d7d61d8f61f3c7df33b59afe61|Andreas Haas and Andreas Rossberg and Derek L. Schuff and Ben L. Titzer and Michael Holman and D. Gohman and Luke Wagner and Alon Zakai and J. Bastien|2017|307|64
 Mechanising and verifying the WebAssembly specification|https://www.semanticscholar.org/paper/8dafcb807d8d2b1f613043069af51ba63ef5d474|C. Watt|2018|45|2
 Wasabi: A Framework for Dynamically Analyzing WebAssembly|https://www.semanticscholar.org/paper/4c2d6e7037ba8c4118eb1d2fe25de910871314c9|Daniel Lehmann and Michael Pradel|2018|27|1
 Weakening WebAssembly|https://www.semanticscholar.org/paper/6fb0698434403b0caa9a32133ad0f90efb36d9cd|C. Watt and Andreas Rossberg and Jean Pichon-Pharabod|2019|18|3
 An Empirical Study of Real-World WebAssembly Binaries: Security, Languages, Use Cases|https://www.semanticscholar.org/paper/53859511943c1cc1da713b436cea1f502ce64c10|Aaron Hilbig and Daniel Lehmann and Michael Pradel|2021|17|3
 Formally Verified Cryptographic Web Applications in WebAssembly|https://www.semanticscholar.org/paper/f39df8f217036d1fd3e5e44385291f02258a5a7f|Jonathan Protzenko and Benjamin Beurdouche and Denis Merigoux and K. Bhargavan|2019|17|2
 WARDuino: a dynamic WebAssembly virtual machine for programming microcontrollers|https://www.semanticscholar.org/paper/668338ad3648e7540c1718ba94a409cceefc9d3d|Robbert Gurdeep Singh and Christophe Scholliers|2019|16|2
 Accelerate JavaScript applications by cross-compiling to WebAssembly|https://www.semanticscholar.org/paper/373cea7cdd706641f4795fb3ff777fb23ace30c8|M. Reiser and Luc Bläser|2017|15|1
 Virtual Machine Execution for Wearables Based on WebAssembly|https://www.semanticscholar.org/paper/c32344f4f80d5d545abeaedb544933a12d0230fe|M. Jacobsson and Jonas Willén|2018|11|1
 FAUST Domain Specific Audio DSP Language Compiled to WebAssembly|https://www.semanticscholar.org/paper/010c899740f3cc29d6dc26ab4065fdc6b9875956|S. Letz and Y. Orlarey and D. Fober|2018|8|0
 Compositional Information Flow Analysis for WebAssembly Programs|https://www.semanticscholar.org/paper/854c5480cbb67ae0558d81ce1a25a6778a1b84df|Quentin Stiévenart and Coen De Roover|2020|7|0
 Bringing the web up to speed with WebAssembly|https://www.semanticscholar.org/paper/377c29add6290cc6d4ac30e3571010f3fc987e2c|Andreas Rossberg and Ben L. Titzer and Andreas Haas and Derek L. Schuff and D. Gohman and Luke Wagner and Alon Zakai and J. Bastien and Michael Holman|2018|7|0
 Sparse matrices on the web: characterizing the performance and optimal format selection of sparse matrix-vector multiplication in javascript and webassembly|https://www.semanticscholar.org/paper/89428a2534ebfc5ae593c22587ca5991f5d33c56|Prabhjot Sandhu and D. Herrera and L. Hendren|2018|6|0
 Wasmachine: Bring the Edge up to Speed with A WebAssembly OS|https://www.semanticscholar.org/paper/a6580cf09f8153cb59f2935a9f53d9bd7c92aefc|Elliott Wen and Gerald Weber|2020|3|0
 Understanding the performance of webassembly applications|https://www.semanticscholar.org/paper/30f7df3054343ee487d52e94ab7760262ec5958f|Yutian Yan and Tengfei Tu and Lijian Zhao and Yuchen Zhou and Weihang Wang|2021|3|0
 SELWasm: A Code Protection Mechanism for WebAssembly|https://www.semanticscholar.org/paper/a53f209c578bceeff3f14ea9cf5d431d91f8961f|Jian Sun and Dingyuan Cao and Ximing Liu and Ziyi Zhao and Wenwen Wang and Xiaoli Gong and Jin Zhang|2019|3|0
 WASim: Understanding WebAssembly Applications through Classification|https://www.semanticscholar.org/paper/fbe367aa92c17b5fbc4b439b9d3ed05cddeb17a8|Alan Romano and Weihang Wang|2020|3|0
 TruffleWasm: a WebAssembly interpreter on GraalVM|https://www.semanticscholar.org/paper/d6fcc99b621cb2156537b94ab1d9034ae682f803|Salim S. Salim and A. Nisbet and M. Luján|2020|3|1
 An Empirical Study of Bugs in WebAssembly Compilers|https://www.semanticscholar.org/paper/9d75f907e65b5b74d90e8c6d9bdf968288331121|Alan Romano and Xinyue Liu and Yonghwi Kwon and Weihang Wang|2021|3|0
 Wobfuscator: Obfuscating JavaScript Malware via Opportunistic Translation to WebAssembly|https://www.semanticscholar.org/paper/f041c9d54534217e888eee2f9aba22f682048a69|Alan Romano and Daniel Lehmann and Michael Pradel and Weihang Wang|2022|2|0
 Superoptimization of WebAssembly bytecode|https://www.semanticscholar.org/paper/7f9ad986365a726a97a79cf606c8db9303b1effc|Javier Cabrera-Arteaga and Shrinish Donde and Jian Gu and Orestis Floros and Lucas Satabin and B. Baudry and Monperrus Martin|2020|2|0
 Analysis of WebAssembly as a Strategy to Improve JavaScript Performance on IoT Environments|https://www.semanticscholar.org/paper/e72c81c91e2c3f3259a9a28f5157ed132c01f698|F. Oliveira and J. Mattos|2020|2|0
 Towards a WebAssembly standalone runtime on GraalVM|https://www.semanticscholar.org/paper/79c2622251cf1d7bcd0d266253ccc69da749eb59|Salim S. Salim and A. Nisbet and M. Luján|2019|1|0
 Static Stack-Preserving Intra-Procedural Slicing of WebAssembly Binaries|https://www.semanticscholar.org/paper/743067aed49d0f62682d11d2db96bf3f62c969ba|Quentin Stiévenart and D. Binkley and Coen De Roover|2022|1|0
 Bringing WebAssembly up to speed with dynamic linking|https://www.semanticscholar.org/paper/85c19f3e93d649ce229ff07daa8ae36e7a1a56bf|Niko Mäkitalo and Victor Bankowski and Paulius Daubaris and R. Mikkola and Oleg Beletski and T. Mikkonen|2021|1|0






keyboardNav haxe.html rexx.html
