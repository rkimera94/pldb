title Whiley

import settings.scroll
htmlTitle Whiley - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/whiley.pldb

paragraph
 Whiley is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=2009">2009</a> by <a href="../lists/creators.html#David_J._Pearce">David J. Pearce</a>.

kpiTable
 #676 <span title="TotalRank: 1183 Jobs: 62 Users: 820 Facts: 301 Links: 950">on PLDB</span>
 13 Years Old
 373 <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging Whiley">Books</span>
 0 <span title="Academic publications about or leveraging Whiley">Papers</span>
 2 <span title="Whiley repos on GitHub.">Repos</span>

paragraph
 Try now: <a href="http://whileylabs.com">Web</a>





paragraph
 Whiley is an experimental programming language that combines features from the functional and imperative paradigms, and supports formal specification through function preconditions, postconditions and loop invariants. The language uses flow-sensitive typing also known as "flow typing." The Whiley project began in 2009 in response to the "Verifying Compiler Grand Challenge" put forward by Tony Hoare in 2003. The first public release of Whiley was in June, 2010.Primarily developed by David Pearce, Whiley is an open source project with contributions from a small community. <a href="https://en.wikipedia.org/wiki/Whiley_(programming_language)">Read more on Wikipedia...</a>

list
 - the <a href="http://whiley.org/">Whiley website</a>
 - the <a href="https://en.wikipedia.org/wiki/Whiley_(programming_language)">Whiley Wikipedia page</a>
 - Whiley is developed on <a href="https://github.com/Whiley/WhileyCompiler">GitHub</a> and has 199 stars
 - There are at least 2 Whiley repos on <a href="https://github.com/search?q=language:Whiley">GitHub</a>
 - file extensions for Whiley include whiley
 - the Whiley team is on <a href="https://twitter.com/whileylang">Twitter</a>
 - The  Google BigQuery Public Dataset GitHub snapshot shows 1 users using Whiley in 1 repos on <a href="https://api.github.com/search/repositories?q=language:Whiley">GitHub</a>
 - <a href="languages/pygments.html">Pygments</a> supports <a href="https://github.com/pygments/pygments/blob/master/pygments/lexers/whiley.py">syntax highlighting</a> for Whiley
 - <a href="http://whiley.org/">whiley.org</a> was registered in 2009
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/whiley">Improve our Whiley file</a>

html
 <br>

exampleCodeHeader Example from the web:
code
 // Define the type of natural numbers
 type nat is (int x) where x &gt;= 0
 public function indexOf(int[] items, int item) -&gt; (int|null index)
 // If int returned, element at this position matches item
 ensures index is int ==&gt; items[index] == item
 // If int returned, element at this position is first match
 ensures index is int ==&gt; no { i in 0 .. index | items[i] == item }
 // If null returned, no element in items matches item
 ensures index is null ==&gt; no { i in 0 .. |items| | items[i] == item }:
     //
     nat i = 0
     //
     while i &lt; |items|
     // No element seen so far matches item
     where no { j in 0 .. i | items[j] == item }:
         //
         if items[i] == item:
             return i
         i = i + 1
     //
     return null

exampleCodeHeader Example from <a href='https://github.com/leachim6/hello-world/blob/main/w/Whiley.whiley'>hello-world</a>:
code
 import std::ascii
 import std::io
 
 method main(ascii::string[] args):
     io::println(&quot;Hello World&quot;)
 





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature MultiLine Comments
  FeatureLink ../languages/multiline-comments-feature.html
  Supported ✓
  Example
  Token 
 row
  Feature Binary Literals
  FeatureLink ../languages/binary-numbers-feature.html
  Supported ✓
  Example
   // [01]+b
  Token 
 row
  Feature Integers
  FeatureLink ../languages/integers-feature.html
  Supported ✓
  Example
   // [0-9]+
  Token 
 row
  Feature Floats
  FeatureLink ../languages/floats-feature.html
  Supported ✓
  Example
   // [0-9]+\.[0-9]+
  Token 
 row
  Feature Hexadecimals
  FeatureLink ../languages/hexadecimals-feature.html
  Supported ✓
  Example
   // 0x[0-9a-fA-F]+
  Token 
 row
  Feature Strings
  FeatureLink ../languages/strings-feature.html
  Supported ✓
  Example
   "Hello world"
  Token "
 row
  Feature Print() Debugging
  FeatureLink ../languages/print-debugging-feature.html
  Supported ✓
  Example
  Token io::println
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   // A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   // A comment
  Token //
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 













keyboardNav vyper.html skulpt.html
