title wisp

import settings.scroll
htmlTitle wisp - Pl

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/wisp.pldb

paragraph
 wisp is a <a href="../lists/languages.html?filter=pl">pl</a> created in <a href="../lists/languages.html?filter=2012">2012</a> by <a href="../lists/creators.html#Santosh_Rajan">Santosh Rajan</a> and <a href="../lists/creators.html#Irakli_Gozalishvili">Irakli Gozalishvili</a> and <a href="../lists/creators.html#LeXofLeviafan">LeXofLeviafan</a> and <a href="../lists/creators.html#Chris_McCormick">Chris McCormick</a>.

kpiTable
 #313 <span title="TotalRank: 691 Jobs: 65 Users: 424 Facts: 202 Links: 950">on PLDB</span>
 10 Years Old
 1.4k <span title="Crude user estimate from a linear model.">Users</span>
 0 <span title="Books about or leveraging wisp">Books</span>
 1 <span title="Academic publications about or leveraging wisp">Papers</span>
 30 <span title="wisp repos on GitHub.">Repos</span>







paragraph
 A little Clojure-like LISP in JavaScript

list
 - the <a href="https://web.archive.org/web/20201121215216/https://gozala.io/wisp/">wisp website</a>
 - wisp is developed on <a href="https://github.com/Gozala/wisp">GitHub</a> and has 963 stars
 - There are at least 30 wisp repos on <a href="https://github.com/search?q=language:wisp">GitHub</a>
 - file extensions for wisp include wisp
 - The  Google BigQuery Public Dataset GitHub snapshot shows 17 users using wisp in 23 repos on <a href="https://api.github.com/search/repositories?q=language:wisp">GitHub</a>
 - GitHub supports <a href="https://github.com/atom/language-clojure" title="The package used for syntax highlighting by GitHub Linguist.">syntax highlighting</a> for wisp
 - HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
 - <a href="https://build.pldb.com/edit/wisp">Improve our wisp file</a>

html
 <br>

exampleCodeHeader Example from the web:
code
 (alert &quot;Hello world!&quot;)

exampleCodeHeader Example from <a href='https://github.com/atom/language-clojure'>Linguist</a>:
code
 ;; # wisp
 
 ; Wisp is homoiconic JS dialect with a clojure syntax, s-expressions and
 ; macros. Wisp code compiles to a human readable javascript, which is one
 ; of they key differences from clojurescript.
 
 ;; ## wisp data structures
 
 ;; 1. nil - is just like js undefined with a differenc that it&#39;s
 ;;    not something can be defined. In fact it&#39;s just a shortcut for
 ;;    void(0) in JS.
 nil ;; =&gt; void(0)
 
 ;; 2. Booleans - Wisp booleans true / false are JS booleans
 
 true ;; =&gt; true
 
 ;; 3. Numbers - Wisp numbers are JS numbers
 1  ;; =&gt; 1
 
 ;; 4. Strings - Wisp strings are JS Strings
 &quot;Hello world&quot;
 ;;    Wisp strings can be multiline
 &quot;Hello,
 My name is wisp!&quot;
 
 ;; 5. Characters - Characters are sugar for JS single char strings
 \a  ;; =&gt; &quot;a&quot;
 
 ;; 6. Keywords - Keywords are symbolic identifiers that evaluate to
 ;;               themselves.
 :keyword  ;; =&gt; &quot;keyword&quot;
 ;;    Since in JS string constats fulfill this purpose of symbolic
 ;;    identifiers, keywords compile to equivalent JS strings.
 (window.addEventListener :load handler false)
 ;;    Keywords can be invoked as functions, that desugars to plain
 ;;    associated value access in JS
 (:bar foo) ;; =&gt; foo[&quot;bar&quot;]
 
 
 ;; 7. Vectors - Wisp vectors are JS arrays.
 [ 1 2 3 4 ]
 ;;    Note: Commas are white space &amp; can be used if desired
 [ 1, 2, 3, 4]
 
 
 ;; 8. Maps - Maps are hash maps, plain JS objects. Note that unlike
 ;;    in clojure keys can not be of arbitary types.
 { &quot;foo&quot; bar :beep-bop &quot;bop&quot; 1 2 }
 ;;    Commas are optional but can come handy for separating key value
 ;;    pairs.
 { a 1, b 2 }
 ;; In a future JSONs syntax may be made compatible with map syntax.
 
 
 ;; 9. Lists - You can&#39;t have a lisp without lists! Wisp has lists too.
 ;;    Wisp is homoiconic and it&#39;s code is made up of lists representing
 ;;    expressions. The first item in the expression is a function, being
 ;;    invoked with rest items as arguments.
 (foo bar baz) ; =&gt; foo(bar, baz);
 
 ;; # Conventions
 ;; Wisp puts a lot of effort in making naming conventions tra





foldBreak
subsection Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Booleans
  FeatureLink ../languages/booleans-feature.html
  Supported ✓
  Example
  Token true false
 row
  Feature Strings
  FeatureLink ../languages/strings-feature.html
  Supported ✓
  Example
   "Hello world"
  Token "
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   ; A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   ; A comment
  Token ;
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ✓
  Example
  Token 







foldBreak
subsection Publications about wisp from Semantic Scholar
pipeTable
 title|titleLink|authors|year|citations|influentialCitations
 Comparative Analysis of the Simple WISP and Some Prominent MCDM Methods: A Python Approach|https://www.semanticscholar.org/paper/ad2cae5c390d3ef3c4be9e2ef751699090e0c941|D. Stanujkić and D. Karabašević and G. Popović and E. Zavadskas and M. Saračević and P. Stanimirović and A. Ulutaş and V. Katsikis and I. Meidutė-Kavaliauskienė|2021|1|0






keyboardNav general-algebraic-modeling-system.html g-code.html
