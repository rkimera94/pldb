title Zimpl

import settings.scroll
htmlTitle Zimpl - Programming language

viewSourceUrl https://github.com/breck7/pldb/blob/main/database/things/zimpl.pldb

* Zimpl is a <a href="../lists/languages.html?filter=pl">programming language</a> created in 2004.
 link ../lists/languages.html?filter=2004 2004

 

kpiTable
 #1195 <span title="TotalRank: 1709 Jobs: 101 Users: 2335 Facts: 655 Links: 953">on PLDB</span>
 18 Years Old
 0 <span title="Books about or leveraging Zimpl">Books</span>
 0 <span title="Academic publications about or leveraging Zimpl">Papers</span>
 60 <span title="Zimpl repos on GitHub.">Repos</span>

* Zimpl is a little language to translate the mathematical model of a problem into a linear or nonlinear (mixed-) integer mathematical program expressed in .lp or .mps file format which can be read and (hopefully) solved by a LP or MIP solver.

- the <a href="https://zimpl.zib.de/">Zimpl website</a>
- There are at least 60 Zimpl repos on <a href="https://github.com/search?q=language:Zimpl">GitHub</a>
- file extensions for Zimpl include zimpl, zmpl and zpl
- The  Google BigQuery Public Dataset GitHub snapshot shows 34 users using Zimpl in 37 repos on <a href="https://api.github.com/search/repositories?q=language:Zimpl">GitHub</a>
- HTML of this page generated by <a href="https://github.com/breck7/pldb/blob/main/code/LanguagePage.ts">LanguagePage.ts</a>
- <a href="https://build.pldb.com/edit/zimpl">Improve our Zimpl file</a>

html
 <br>

exampleCodeHeader Example from the web:
code
 # $Id: queens3.zpl,v 1.3 2009/09/13 16:15:53 bzfkocht Exp $
 #
 # This is a formulation of the n queens problem using binary variables.
 # variables. Since the number of queens is maximized, the size of the
 # board can be set arbitrarily.
 #
 param columns := 8;
 
 set I   := { 1 .. columns };
 set IxI := I * I;
 
 set TABU[&lt;i,j&gt; in IxI] := { &lt;m,n&gt; in IxI with 
    (m != i or n != j) and (m == i or n == j or abs(m - i) == abs(n - j)) };
 
 var x[IxI] binary;
 
 maximize queens: sum &lt;i,j&gt; in IxI : x[i,j];
 
 subto c1: forall &lt;i,j&gt; in IxI do
    card(TABU[i,j]) - card(TABU[i,j]) * x[i,j] &gt;= sum &lt;m,n&gt; in TABU[i,j] : x[m,n];

foldBreak
## Language <a href="../lists/features.html">features</a>

treeTable
 row
  Feature Comments
  FeatureLink ../languages/comment-feature.html
  Supported ✓
  Example
   # A comment
  Token 
 row
  Feature Line Comments
  FeatureLink ../languages/line-comments-feature.html
  Supported ✓
  Example
   # A comment
  Token #
 row
  Feature Semantic Indentation
  FeatureLink ../languages/semantic-indentation-feature.html
  Supported ϴ
  Example
  Token 

keyboardNav txr.html newsqueak.html
